2 caches read

//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x5198c10) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.func'(0x5111ec0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x51015f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x514ec70) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x51505c0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.global'(0x5150820) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.global -> ()' {
    ** Insert  : 'llvm.mlir.global'(0x51a2e90)
    ** Erase   : 'rmem.llvm.global'(0x5150820)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.global'(0x51a2e90) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.func'(0x5168340) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x5169890) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x518da30) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5169c00) {
  %0 = "arith.constant"() {value = 1.000000e+06 : f64} : () -> f64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x51792e0) {
  %1 = "arith.constant"() {value = 0 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x517bd70) {
  "func.call"() {callee = @setup} : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x517d2d0) {
  %2 = "llvm.mlir.addressof"() {global_name = @str0} : () -> !llvm.ptr<array<13 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x5181260) {
  %3 = "llvm.getelementptr"(%2) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<13 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.call'(0x5181350) {
  %4 = "llvm.call"(%3) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x5115a10) {
  %5 = "func.call"() {callee = @microtime} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.addressof'(0x5187e50) {
  %6 = "rmem.llvm.addressof"() {global_name = @arc} : () -> !llvm.ptr<!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.addressof -> ()' {
    ** Insert  : 'llvm.mlir.addressof'(0x51a2db0)
    ** Replace : 'rmem.llvm.addressof'(0x5187e50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.addressof'(0x51a2db0) {
      %6 = "llvm.mlir.addressof"() {global_name = @arc} : () -> !llvm.ptr<ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x5187f10) {
  %8 = "rmem.llvm.load"(%7) : (!llvm.ptr<!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>>) -> !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x51b2000)
    ** Replace : 'rmem.llvm.load'(0x5187f10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51b2000) {
      %8 = "llvm.load"(%6) : (!llvm.ptr<ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>>) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x5187ff0) {
  "func.call"(%9) {callee = @visit} : (!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x5188080) {
  %10 = "func.call"() {callee = @microtime} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x5188130) {
  %11 = "llvm.mlir.addressof"() {global_name = @str1} : () -> !llvm.ptr<array<18 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x51896e0) {
  %12 = "llvm.getelementptr"(%11) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<18 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x5112c90) {
  %13 = "arith.subi"(%10, %5) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.sitofp'(0x5112da0) {
  %14 = "arith.sitofp"(%13) : (i64) -> f64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.divf'(0x5177c10) {
  %15 = "arith.divf"(%14, %0) : (f64, f64) -> f64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.call'(0x51131b0) {
  %16 = "llvm.call"(%12, %15) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>, f64) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x51132c0) {
  %17 = "llvm.mlir.addressof"() {global_name = @str2} : () -> !llvm.ptr<array<18 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x5113380) {
  %18 = "llvm.getelementptr"(%17) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<18 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x5177d70) {
  %19 = "llvm.mlir.addressof"() {global_name = @g_payload} : () -> !llvm.ptr<array<23 x i32>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x5113580) {
  %20 = "llvm.getelementptr"(%19) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<23 x i32>>) -> !llvm.ptr<i32>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x5113670) {
  %21 = "llvm.getelementptr"(%20) {rawConstantIndices = array<i32: 5>} : (!llvm.ptr<i32>) -> !llvm.ptr<i32>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.load'(0x5113760) {
  %22 = "llvm.load"(%21) : (!llvm.ptr<i32>) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.call'(0x518d8f0) {
  %23 = "llvm.call"(%18, %22) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>, i32) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x518d9b0) {
  "func.return"(%1) : (i32) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x518da90) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x5185300) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5112d40) {
  %0 = "arith.constant"() {value = 1000 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x51812f0) {
  %1 = "arith.constant"() {value = 0 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x51828d0) {
  %2 = "arith.constant"() {value = 1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.alloca'(0x5191ab0) {
  %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.timespec", (i64, i64)>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.call'(0x5193030) {
  %4 = "llvm.call"(%1, %3) {callee = @clock_gettime, fastmathFlags = #llvm.fastmath<none>} : (i32, !llvm.ptr<struct<"struct.timespec", (i64, i64)>>) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x51945d0) {
  %5 = "llvm.getelementptr"(%3) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"struct.timespec", (i64, i64)>>) -> !llvm.ptr<i64>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.load'(0x5194660) {
  %6 = "llvm.load"(%5) : (!llvm.ptr<i64>) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51946f0) {
  %7 = "arith.muli"(%6, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51947a0) {
  %8 = "arith.muli"(%7, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x5195d40) {
  %9 = "llvm.getelementptr"(%3) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"struct.timespec", (i64, i64)>>) -> !llvm.ptr<i64>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.load'(0x5195dd0) {
  %10 = "llvm.load"(%9) : (!llvm.ptr<i64>) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.divsi'(0x5195e60) {
  %11 = "arith.divsi"(%10, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x5195f10) {
  %12 = "arith.addi"(%8, %11) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x51904d0) {
  "func.return"(%12) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x51a8380) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5187eb0) {
  %0 = "arith.constant"() {value = 2048 : index} : () -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5187fa0) {
  %1 = "arith.constant"() {value = 2048 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5188190) {
  %2 = "arith.constant"() {value = 67108864 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5189770) {
  %3 = "arith.constant"() {value = 9 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5190560) {
  %4 = "arith.constant"() {value = 8 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x517d330) {
  %5 = "arith.constant"() {value = 32768 : index} : () -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5113700) {
  %6 = "arith.constant"() {value = 1 : index} : () -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5113610) {
  %7 = "arith.constant"() {value = 8 : index} : () -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x51137f0) {
  %8 = "arith.constant"() {value = 9 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5198c80) {
  %9 = "arith.constant"() {value = 32768 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5198ee0) {
  %10 = "arith.constant"() {value = 0 : index} : () -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x5198fa0) {
  %11 = "arith.constant"() {value = 1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.alloca_ptr'(0x519bbb0) {
  %12 = "rmem.alloca_ptr"(%11) {elem_type = !llvm.struct<"struct.node", (ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc", (ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, array<8 x i32>)>>, ptr<struct<"struct.arc", (ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>} : (i64) -> !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.alloca_ptr -> ()' {
    ** Insert  : 'llvm.alloca'(0x51bd700)
    ** Replace : 'rmem.alloca_ptr'(0x519bbb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.alloca'(0x51bd700) {
      %12 = "llvm.alloca"(%11) : (i64) -> !llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.alloca_ptr'(0x519e680) {
  %14 = "rmem.alloca_ptr"(%11) {elem_type = !llvm.struct<"struct.arc", (ptr<struct<"struct.node", (ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"struct.node", (ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, array<8 x i32>)>} : (i64) -> !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.alloca_ptr -> ()' {
    ** Insert  : 'llvm.alloca'(0x51bb7f0)
    ** Replace : 'rmem.alloca_ptr'(0x519e680)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.alloca'(0x51bb7f0) {
      %14 = "llvm.alloca"(%11) : (i64) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x519e770) {
  %16 = "rmem.llvm.getelementptr"(%15) {structIndices = array<i32: 0, 1>} : (!llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x51bc920)
    ** Replace : 'rmem.llvm.getelementptr'(0x519e770)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51bc920) {
      %16 = "llvm.getelementptr"(%14) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>) -> !llvm.ptr<ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.alloca'(0x519fd30) {
  %18 = "llvm.alloca"(%8) : (i32) -> !llvm.ptr<i32>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x51a2ab0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51a2c10) {
  %19 = "arith.muli"(%arg1, %5) : (index, index) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51a2d20) {
  %20 = "arith.index_cast"(%arg1) : (index) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51a2e10) {
  %21 = "arith.index_cast"(%19) : (index) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x51a55d0) {
  %22 = "rmem.llvm.getelementptr"(%arg0, %21) {structIndices = array<i32>} : (!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i64) -> !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x5176430)
    ** Replace : 'rmem.llvm.getelementptr'(0x51a55d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x5176430) {
      %23 = "llvm.getelementptr"(%0, %22) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i64) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.request'(0x51a56e0) {
  %25 = "rmem.request"(%24) {cache_id = 2 : i32} : (!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.request -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x51bd590)
    ** Insert  : 'arith.constant'(0x51a7b50)
    ** Insert  : 'arith.andi'(0x51764e0)
    ** Insert  : 'arith.constant'(0x5113410)
    ** Insert  : 'arith.divui'(0x51bc4b0)
    ** Insert  : 'arith.constant'(0x5179340)
    ** Insert  : 'arith.remsi'(0x51bc560)
    ** Insert  : 'arith.trunci'(0x51bca90)
    ** Insert  : 'arith.constant'(0x519e710)
    ** Insert  : 'arith.constant'(0x51abad0)
    ** Insert  : 'llvm.call'(0x5169b10)
    ** Replace : 'rmem.request'(0x51a56e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x51bd590) {
      %25 = "llvm.ptrtoint"(%23) : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51a7b50) {
      %26 = "arith.constant"() {value = -2097152 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.andi'(0x51764e0) {
      %27 = "arith.andi"(%25, %26) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x5113410) {
      %28 = "arith.constant"() {value = 2097152 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.divui'(0x51bc4b0) {
      %29 = "arith.divui"(%27, %28) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x5179340) {
      %30 = "arith.constant"() {value = 12 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.remsi'(0x51bc560) {
      %31 = "arith.remsi"(%29, %30) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.trunci'(0x51bca90) {
      %32 = "arith.trunci"(%31) : (i64) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x519e710) {
      %33 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51abad0) {
      %34 = "arith.constant"() {value = 1 : i8} : () -> i8

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x5169b10) {
      %35 = "llvm.call"(%33, %27, %32, %34) {callee = @cache_request_impl_2, fastmathFlags = #llvm.fastmath<none>} : (i32, i64, i32, i8) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.extsi'(0x51a57b0) {
  %37 = "arith.extsi"(%21) : (i32) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x51a6d90) {
  %38 = "llvm.getelementptr"(%19, %37) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i32>, i64) -> !llvm.ptr<i32>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.store'(0x5146d90) {
  "llvm.store"(%36, %38) : (i32, !llvm.ptr<i32>) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x519fe70) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x51a8250) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51a72a0) {
  %20 = "arith.index_cast"(%arg1) : (index) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x51a7330) {
  %21 = "arith.addi"(%20, %5) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x51a73e0) {
  %22 = "arith.cmpi"(%21, %2) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x51a7e70) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.remsi'(0x51a7530) {
  %36 = "arith.remsi"(%21, %4) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.trunci'(0x51a76e0) {
  %37 = "arith.trunci"(%36) : (i64) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51a7790) {
  %38 = "arith.index_cast"(%21) : (i64) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51a7840) {
  %39 = "arith.muli"(%38, %6) : (index, index) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51a7910) {
  %40 = "arith.index_cast"(%39) : (index) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x51a7aa0) {
  %41 = "rmem.llvm.getelementptr"(%arg0, %40) {structIndices = array<i32>} : (!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i64) -> !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x51bcbf0)
    ** Replace : 'rmem.llvm.getelementptr'(0x51a7aa0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51bcbf0) {
      %41 = "llvm.getelementptr"(%0, %40) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i64) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.request'(0x51a7bb0) {
  %43 = "rmem.request"(%42) {cache_id = 2 : i32} : (!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.request -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x51bb880)
    ** Insert  : 'arith.constant'(0x51a5840)
    ** Insert  : 'arith.andi'(0x51be6a0)
    ** Insert  : 'arith.constant'(0x51a2cc0)
    ** Insert  : 'arith.divui'(0x51be750)
    ** Insert  : 'arith.constant'(0x51a7e20)
    ** Insert  : 'arith.remsi'(0x51be800)
    ** Insert  : 'arith.trunci'(0x51be610)
    ** Insert  : 'arith.constant'(0x51a7d10)
    ** Insert  : 'arith.constant'(0x51bc9b0)
    ** Insert  : 'llvm.call'(0x51699c0)
    ** Replace : 'rmem.request'(0x51a7bb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x51bb880) {
      %43 = "llvm.ptrtoint"(%41) : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51a5840) {
      %44 = "arith.constant"() {value = -2097152 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.andi'(0x51be6a0) {
      %45 = "arith.andi"(%43, %44) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51a2cc0) {
      %46 = "arith.constant"() {value = 2097152 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.divui'(0x51be750) {
      %47 = "arith.divui"(%45, %46) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51a7e20) {
      %48 = "arith.constant"() {value = 12 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.remsi'(0x51be800) {
      %49 = "arith.remsi"(%47, %48) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.trunci'(0x51be610) {
      %50 = "arith.trunci"(%49) : (i64) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51a7d10) {
      %51 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51bc9b0) {
      %52 = "arith.constant"() {value = 1 : i8} : () -> i8

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x51699c0) {
      %53 = "llvm.call"(%51, %45, %50, %52) {callee = @cache_request_impl_2, fastmathFlags = #llvm.fastmath<none>} : (i32, i64, i32, i8) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.extsi'(0x51a7c80) {
  %55 = "arith.extsi"(%37) : (i32) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x51a7d70) {
  %56 = "llvm.getelementptr"(%19, %55) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i32>, i64) -> !llvm.ptr<i32>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.store'(0x5148320) {
  "llvm.store"(%54, %56) : (i32, !llvm.ptr<i32>) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x51a75d0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51a7f30) {
  %23 = "arith.muli"(%arg1, %6) : (index, index) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51a7fe0) {
  %24 = "arith.index_cast"(%23) : (index) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x51a9090) {
  %25 = "rmem.llvm.getelementptr"(%arg0, %24) {structIndices = array<i32>} : (!rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i64) -> !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x51be8b0)
    ** Replace : 'rmem.llvm.getelementptr'(0x51a9090)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51be8b0) {
      %25 = "llvm.getelementptr"(%0, %24) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i64) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.remsi'(0x51a9140) {
  %27 = "arith.remsi"(%20, %4) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x51a91f0) {
  %28 = "llvm.getelementptr"(%19, %27) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i32>, i64) -> !llvm.ptr<i32>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.load'(0x51a92a0) {
  %29 = "llvm.load"(%28) : (!llvm.ptr<i32>) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.poll'(0x51a7630) {
  "rmem.poll"(%29) {access_type = 0 : i32, cache_id = 2 : i32} : (i32) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.poll -> ()' {
    ** Insert  : 'arith.constant'(0x51bca10)
    ** Insert  : 'arith.addi'(0x51c43a0)
    ** Insert  : 'arith.extsi'(0x51be960)
    ** Insert  : 'llvm.mlir.addressof'(0x51c3450)
    ** Insert  : 'llvm.getelementptr'(0x51c34b0)
    ** Insert  : 'llvm.getelementptr'(0x51c3540)
    ** Insert  : 'arith.constant'(0x51c35f0)
    ** Insert  : 'llvm.getelementptr'(0x51c3b30)
    ** Insert  : 'llvm.load'(0x51c3bc0)
    ** Insert  : 'llvm.call'(0x51bc600)
    ** Erase   : 'rmem.poll'(0x51a7630)

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51bca10) {
      %30 = "arith.constant"() {value = 1024000 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c43a0) {
      %31 = "arith.addi"(%29, %30) : (i32, i32) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51be960) {
      %32 = "arith.extsi"(%31) : (i32) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.addressof'(0x51c3450) {
      %33 = "llvm.mlir.addressof"() {global_name = @tokens} : () -> !llvm.ptr<array<33554432 x struct<(i64, i8, i8, i16, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c34b0) {
      %34 = "llvm.getelementptr"(%33) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<33554432 x struct<(i64, i8, i8, i16, i32)>>>) -> !llvm.ptr<struct<(i64, i8, i8, i16, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c3540) {
      %35 = "llvm.getelementptr"(%34, %32) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>, i64) -> !llvm.ptr<struct<(i64, i8, i8, i16, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c35f0) {
      %36 = "arith.constant"() {value = 1 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c3b30) {
      %37 = "llvm.getelementptr"(%35) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>) -> !llvm.ptr<i16>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c3bc0) {
      %38 = "llvm.load"(%37) : (!llvm.ptr<i16>) -> i16

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x51bc600) {
      "llvm.call"(%36, %38) {callee = @poll_qid2, fastmathFlags = #llvm.fastmath<none>} : (i32, i16) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.paddr'(0x51ab370) {
  %39 = "rmem.paddr"(%29, %26) {cache_id = 2 : i32} : (i32, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>) -> !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.paddr -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x51c41f0)
    ** Insert  : 'arith.constant'(0x51c4190)
    ** Insert  : 'arith.extsi'(0x51c4280)
    ** Insert  : 'arith.constant'(0x51c4310)
    ** Insert  : 'arith.muli'(0x51c7a10)
    ** Insert  : 'arith.constant'(0x51c7ac0)
    ** Insert  : 'arith.remsi'(0x51c7b20)
    ** Insert  : 'arith.addi'(0x51c7bd0)
    ** Insert  : 'arith.addi'(0x51c7c80)
    ** Insert  : 'llvm.mlir.addressof'(0x51c7d90)
    ** Insert  : 'llvm.load'(0x51c7df0)
    ** Insert  : 'llvm.getelementptr'(0x51c7e80)
    ** Insert  : 'llvm.bitcast'(0x51c7f30)
    ** Replace : 'rmem.paddr'(0x51ab370)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x51c41f0) {
      %39 = "llvm.ptrtoint"(%25) : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c4190) {
      %40 = "arith.constant"() {value = 1073741824 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51c4280) {
      %41 = "arith.extsi"(%29) : (i32) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c4310) {
      %42 = "arith.constant"() {value = 2097152 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.muli'(0x51c7a10) {
      %43 = "arith.muli"(%41, %42) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c7ac0) {
      %44 = "arith.constant"() {value = 2097152 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.remsi'(0x51c7b20) {
      %45 = "arith.remsi"(%39, %44) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c7bd0) {
      %46 = "arith.addi"(%43, %45) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c7c80) {
      %47 = "arith.addi"(%40, %46) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.addressof'(0x51c7d90) {
      %48 = "llvm.mlir.addressof"() {global_name = @_rbuf} : () -> !llvm.ptr<ptr<i8>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c7df0) {
      %49 = "llvm.load"(%48) : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c7e80) {
      %50 = "llvm.getelementptr"(%49, %47) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x51c7f30) {
      %51 = "llvm.bitcast"(%50) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x51ab420) {
  %53 = "arith.addi"(%20, %12) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51ab4d0) {
  %54 = "arith.muli"(%53, %10) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x51a71c0) {
  %55 = "arith.cmpi"(%54, %3) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x509a900) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x51ab750) {
  "scf.yield"(%10) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51ab830) {
  %59 = "arith.muli"(%20, %10) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x51aba20) {
  %60 = "arith.subi"(%3, %59) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x51ac330) {
  "scf.yield"(%60) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x51ab920) {
  %57 = "arith.muli"(%20, %10) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51ac3c0) {
  %58 = "arith.index_cast"(%56) : (i64) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x51a8120) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51ac620) {
  %59 = "arith.index_cast"(%57) : (i64) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x51ac710) {
  %60 = "arith.addi"(%arg2, %59) : (index, index) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x5161b70) {
  %61 = "arith.index_cast"(%arg2) : (index) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x5161cd0) {
  %62 = "rmem.llvm.getelementptr"(%52, %61) {elem_type = !llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>, structIndices = array<i32>} : (!llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>, i64) -> !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x51c8020)
    ** Replace : 'rmem.llvm.getelementptr'(0x5161cd0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c8020) {
      %62 = "llvm.getelementptr"(%51, %61) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i64) -> !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.from_addr'(0x5161eb0) {
  %64 = "rmem.from_addr"(%63) : (!llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>) -> !rmem.rmref<0, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.from_addr -> ()' {
    ** Replace : 'rmem.from_addr'(0x5161eb0)
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x51ae040) {
  %65 = "arith.index_cast"(%60) : (index) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x51ae150) {
  %66 = "rmem.llvm.load"(%64) : (!rmem.rmref<0, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>) -> !llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x51c80d0)
    ** Replace : 'rmem.llvm.load'(0x51ae150)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c80d0) {
      %66 = "llvm.load"(%62) : (!llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>) -> !llvm.struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x51ae250) {
  "rmem.llvm.store"(%67, %16) : (!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x5127ba0)
    ** Replace : 'rmem.llvm.store'(0x51ae250)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x5127ba0) {
      "llvm.store"(%66, %15) : (!llvm.struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>, !llvm.ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, i32, array<23 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x51ae300) {
  %68 = "rmem.llvm.load"(%18) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x51c9f30)
    ** Replace : 'rmem.llvm.load'(0x51ae300)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c9f30) {
      %68 = "llvm.load"(%17) : (!llvm.ptr<ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>>) -> !llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x51ae3d0) {
  %70 = "rmem.llvm.load"(%69) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>>) -> !llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x51c9fc0)
    ** Insert  : 'arith.constant'(0x51c7fc0)
    ** Insert  : 'arith.andi'(0x51c81c0)
    ** Insert  : 'arith.constant'(0x51ca050)
    ** Insert  : 'arith.divui'(0x51ca0b0)
    ** Insert  : 'arith.constant'(0x51ca160)
    ** Insert  : 'arith.remsi'(0x51c85f0)
    ** Insert  : 'arith.trunci'(0x51c86a0)
    ** Insert  : 'arith.constant'(0x51c8730)
    ** Insert  : 'arith.addi'(0x51c8790)
    ** Insert  : 'arith.extsi'(0x51c8840)
    ** Insert  : 'llvm.mlir.addressof'(0x51c88d0)
    ** Insert  : 'llvm.getelementptr'(0x51c8930)
    ** Insert  : 'llvm.getelementptr'(0x51c89c0)
    ** Insert  : 'llvm.ptrtoint'(0x51c8a70)
    ** Insert  : 'arith.constant'(0x51c8b00)
    ** Insert  : 'arith.extsi'(0x51c8b60)
    ** Insert  : 'arith.constant'(0x51c8bf0)
    ** Insert  : 'arith.muli'(0x51c8c50)
    ** Insert  : 'arith.constant'(0x51c8d00)
    ** Insert  : 'arith.remsi'(0x51c8d60)
    ** Insert  : 'arith.addi'(0x51c8e10)
    ** Insert  : 'arith.addi'(0x51c8ec0)
    ** Insert  : 'llvm.mlir.addressof'(0x51c8f70)
    ** Insert  : 'llvm.load'(0x51c8fd0)
    ** Insert  : 'llvm.getelementptr'(0x51c9060)
    ** Insert  : 'llvm.bitcast'(0x51c9110)
    ** Insert  : 'llvm.getelementptr'(0x51c91a0)
    ** Insert  : 'llvm.load'(0x51c9230)
    ** Insert  : 'arith.extsi'(0x51c92c0)
    ** Insert  : 'arith.constant'(0x51c9350)
    ** Insert  : 'arith.andi'(0x51c93b0)
    ** Insert  : 'arith.trunci'(0x51c9460)
    ** Insert  : 'arith.extsi'(0x51c94f0)
    ** Insert  : 'arith.constant'(0x51c9580)
    ** Insert  : 'arith.cmpi'(0x51c95e0)
    ** Insert  : 'scf.if'(0x51c9690)
    ** Insert  : 'llvm.getelementptr'(0x51c9750)
    ** Insert  : 'llvm.load'(0x51c97e0)
    ** Insert  : 'arith.cmpi'(0x51c9870)
    ** Insert  : 'scf.yield'(0x51b37d0)
    ** Insert  : 'arith.constant'(0x51c9920)
    ** Insert  : 'scf.yield'(0x51ca1b0)
    ** Insert  : 'scf.if'(0x51c9980)
    ** Insert  : 'arith.constant'(0x51c9a40)
    ** Insert  : 'arith.constant'(0x51c9b00)
    ** Insert  : 'llvm.call'(0x5150890)
    ** Insert  : 'arith.constant'(0x51c9b60)
    ** Insert  : 'arith.constant'(0x51c9bc0)
    ** Insert  : 'arith.addi'(0x51c9c20)
    ** Insert  : 'arith.extsi'(0x51c9cd0)
    ** Insert  : 'llvm.mlir.addressof'(0x51c9d60)
    ** Insert  : 'llvm.getelementptr'(0x51ca650)
    ** Insert  : 'llvm.getelementptr'(0x51ca6e0)
    ** Insert  : 'llvm.getelementptr'(0x51cae90)
    ** Insert  : 'llvm.load'(0x51caf20)
    ** Insert  : 'llvm.call'(0x5177cc0)
    ** Insert  : 'scf.yield'(0x51cc0e0)
    ** Insert  : 'scf.yield'(0x51cc160)
    ** Insert  : 'llvm.load'(0x51cc1f0)
    ** Replace : 'rmem.llvm.load'(0x51ae3d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x51c9fc0) {
      %70 = "llvm.ptrtoint"(%68) : (!llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c7fc0) {
      %71 = "arith.constant"() {value = -1024 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.andi'(0x51c81c0) {
      %72 = "arith.andi"(%70, %71) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51ca050) {
      %73 = "arith.constant"() {value = 1024 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.divui'(0x51ca0b0) {
      %74 = "arith.divui"(%72, %73) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51ca160) {
      %75 = "arith.constant"() {value = 1024000 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.remsi'(0x51c85f0) {
      %76 = "arith.remsi"(%74, %75) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.trunci'(0x51c86a0) {
      %77 = "arith.trunci"(%76) : (i64) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c8730) {
      %78 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c8790) {
      %79 = "arith.addi"(%77, %78) : (i32, i32) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51c8840) {
      %80 = "arith.extsi"(%79) : (i32) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.addressof'(0x51c88d0) {
      %81 = "llvm.mlir.addressof"() {global_name = @tokens} : () -> !llvm.ptr<array<33554432 x struct<(i64, i8, i8, i16, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c8930) {
      %82 = "llvm.getelementptr"(%81) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<33554432 x struct<(i64, i8, i8, i16, i32)>>>) -> !llvm.ptr<struct<(i64, i8, i8, i16, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c89c0) {
      %83 = "llvm.getelementptr"(%82, %80) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>, i64) -> !llvm.ptr<struct<(i64, i8, i8, i16, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x51c8a70) {
      %84 = "llvm.ptrtoint"(%68) : (!llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c8b00) {
      %85 = "arith.constant"() {value = 0 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51c8b60) {
      %86 = "arith.extsi"(%77) : (i32) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c8bf0) {
      %87 = "arith.constant"() {value = 1024 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.muli'(0x51c8c50) {
      %88 = "arith.muli"(%86, %87) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c8d00) {
      %89 = "arith.constant"() {value = 1024 : i64} : () -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.remsi'(0x51c8d60) {
      %90 = "arith.remsi"(%84, %89) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c8e10) {
      %91 = "arith.addi"(%88, %90) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c8ec0) {
      %92 = "arith.addi"(%85, %91) : (i64, i64) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.addressof'(0x51c8f70) {
      %93 = "llvm.mlir.addressof"() {global_name = @_rbuf} : () -> !llvm.ptr<ptr<i8>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c8fd0) {
      %94 = "llvm.load"(%93) : (!llvm.ptr<ptr<i8>>) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c9060) {
      %95 = "llvm.getelementptr"(%94, %92) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i64) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x51c9110) {
      %96 = "llvm.bitcast"(%95) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c91a0) {
      %97 = "llvm.getelementptr"(%83) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c9230) {
      %98 = "llvm.load"(%97) : (!llvm.ptr<i8>) -> i8

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51c92c0) {
      %99 = "arith.extsi"(%98) : (i8) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9350) {
      %100 = "arith.constant"() {value = 1 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.andi'(0x51c93b0) {
      %101 = "arith.andi"(%99, %100) : (i32, i32) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.trunci'(0x51c9460) {
      %102 = "arith.trunci"(%101) : (i32) -> i8

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51c94f0) {
      %103 = "arith.extsi"(%102) : (i8) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9580) {
      %104 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.cmpi'(0x51c95e0) {
      %105 = "arith.cmpi"(%103, %104) {predicate = 1 : i64} : (i32, i32) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x51c9690) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51c9750) {
      %110 = "llvm.getelementptr"(%83) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51c97e0) {
      %111 = "llvm.load"(%110) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.cmpi'(0x51c9870) {
      %112 = "arith.cmpi"(%111, %72) {predicate = 1 : i64} : (i64, i64) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x51b37d0) {
      "scf.yield"(%112) : (i1) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9920) {
      %110 = "arith.constant"() {value = true} : () -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x51ca1b0) {
      "scf.yield"(%110) : (i1) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x51c9980) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9a40) {
      %110 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9b00) {
      %111 = "arith.constant"() {value = 1 : i8} : () -> i8

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x5150890) {
      %112 = "llvm.call"(%110, %72, %77, %111) {callee = @cache_request_impl_1, fastmathFlags = #llvm.fastmath<none>} : (i32, i64, i32, i8) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9b60) {
      %113 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.constant'(0x51c9bc0) {
      %114 = "arith.constant"() {value = 0 : i32} : () -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.addi'(0x51c9c20) {
      %115 = "arith.addi"(%77, %114) : (i32, i32) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'arith.extsi'(0x51c9cd0) {
      %116 = "arith.extsi"(%115) : (i32) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.addressof'(0x51c9d60) {
      %117 = "llvm.mlir.addressof"() {global_name = @tokens} : () -> !llvm.ptr<array<33554432 x struct<(i64, i8, i8, i16, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51ca650) {
      %118 = "llvm.getelementptr"(%117) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<33554432 x struct<(i64, i8, i8, i16, i32)>>>) -> !llvm.ptr<struct<(i64, i8, i8, i16, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51ca6e0) {
      %119 = "llvm.getelementptr"(%118, %116) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>, i64) -> !llvm.ptr<struct<(i64, i8, i8, i16, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x51cae90) {
      %120 = "llvm.getelementptr"(%119) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<(i64, i8, i8, i16, i32)>>) -> !llvm.ptr<i16>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51caf20) {
      %121 = "llvm.load"(%120) : (!llvm.ptr<i16>) -> i16

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x5177cc0) {
      "llvm.call"(%113, %121) {callee = @poll_qid1, fastmathFlags = #llvm.fastmath<none>} : (i32, i16) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x51cc0e0) {
      "scf.yield"(%96) : (!llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x51cc160) {
      "scf.yield"(%96) : (!llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x51cc1f0) {
      %108 = "llvm.load"(%107) : (!llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>) -> !llvm.struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x51ae4d0) {
  "rmem.llvm.store"(%109, %14) : (!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x51cebb0)
    ** Replace : 'rmem.llvm.store'(0x51ae4d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x51cebb0) {
      "llvm.store"(%108, %13) : (!llvm.struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>, !llvm.ptr<struct<"_Lowered_disagg@struct.node", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, ptr<struct<"_Lowered_disagg@struct.arc", (ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.node">>, ptr<struct<"_Lowered_disagg@struct.arc">>, ptr<struct<"_Lowered_disagg@struct.arc">>, array<8 x i32>)>>, i32, array<23 x i32>)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x51a8060) {
  "func.call"(%16, %14, %65) {callee = @computation} : (!llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, i32, array<23 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>, !llvm.ptr<!llvm.struct<"disagg@struct.node", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc", (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"disagg@struct.node">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, !rmem.rmref<2, !llvm.ptr<!llvm.struct<"disagg@struct.arc">>>, array<8 x i32>)>>>, i32, array<23 x i32>)>>, i32) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x51ac4c0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x51a81f0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x51a8320) {
  "func.return"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x519fdb0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//
** Insert  : 'builtin.unrealized_conversion_cast'(0x51cece0)
** Insert  : 'builtin.unrealized_conversion_cast'(0x51cee10)
** Insert  : 'builtin.unrealized_conversion_cast'(0x51cd490)
** Insert  : 'builtin.unrealized_conversion_cast'(0x51cd520)
