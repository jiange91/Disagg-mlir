warning, ignoring __builtin_expect
SubstTemplateTypeParmType 0x55d4459f04c0 'int' sugar typename depth 0 index 0 _Tp
|-FunctionTemplate 0x55d44504da18 'forward'
`-BuiltinType 0x55d444edea40 'int'
warning, ignoring __builtin_expect
<immediate: mlir>
"builtin.module"() ({
  "llvm.mlir.global"() ({
  }) {addr_space = 0 : i32, constant, global_type = !llvm.array<7 x i8>, linkage = #llvm.linkage<internal>, sym_name = "str2", value = "%d %d\0A\00"} : () -> ()
  "llvm.mlir.global"() ({
  }) {addr_space = 0 : i32, constant, global_type = !llvm.array<2 x i8>, linkage = #llvm.linkage<internal>, sym_name = "str1", value = "\0A\00"} : () -> ()
  "llvm.func"() ({
  }) {CConv = #llvm.cconv<ccc>, function_type = !llvm.func<i32 (ptr<i8>, ...)>, linkage = #llvm.linkage<external>, sym_name = "printf"} : () -> ()
  "llvm.mlir.global"() ({
  }) {addr_space = 0 : i32, constant, global_type = !llvm.array<4 x i8>, linkage = #llvm.linkage<internal>, sym_name = "str0", value = "%d \00"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %12 = "arith.constant"() {value = true} : () -> i1
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %14 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%12, %14) : (i1, memref<i1>) -> ()
    "memref.store"(%12, %13) : (i1, memref<i1>) -> ()
    %15 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%15) ({
      "scf.execute_region"() ({
        %17 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%17) ({
          "scf.execute_region"() ({
            %18 = "memref.load"(%13) : (memref<i1>) -> i1
            "scf.if"(%18) ({
              "scf.execute_region"() ({
                "polygeist.trivialuse"(%arg0) : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %19 = "memref.load"(%13) : (memref<i1>) -> i1
            "scf.if"(%19) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%arg0) {callee = @_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE5beginEv} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                "llvm.store"(%46, %9) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                "func.call"(%11, %9) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                %47 = "llvm.load"(%11) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                "llvm.store"(%47, %7) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %20 = "memref.load"(%13) : (memref<i1>) -> i1
            "scf.if"(%20) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%arg0) {callee = @_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE3endEv} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                "llvm.store"(%46, %3) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                "func.call"(%5, %3) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                %47 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                "llvm.store"(%47, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %21 = "arith.constant"() {value = true} : () -> i1
            %22 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            %23 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            "memref.store"(%21, %23) : (i1, memref<i1>) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb1:  // 2 preds: ^bb0, ^bb2
            %24 = "arith.constant"() {value = 0 : i32} : () -> i32
            %25 = "arith.constant"() {value = 0 : i32} : () -> i32
            %26 = "llvm.getelementptr"(%7, %24) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %27 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %28 = "llvm.icmp"(%26, %27) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> i1
            %29 = "arith.select"(%28, %26, %27) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %30 = "arith.constant"() {value = 0 : i32} : () -> i32
            %31 = "arith.constant"() {value = 0 : i32} : () -> i32
            %32 = "llvm.getelementptr"(%1, %30) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %33 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %34 = "llvm.icmp"(%32, %33) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> i1
            %35 = "arith.select"(%34, %32, %33) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %36 = "func.call"(%29, %35) {callee = @_ZNSt8__detailneIiLb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES5_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> i8
            %37 = "arith.constant"() {value = 0 : i8} : () -> i8
            %38 = "arith.cmpi"(%36, %37) {predicate = 1 : i64} : (i8, i8) -> i1
            %39 = "memref.load"(%23) : (memref<i1>) -> i1
            %40 = "arith.andi"(%38, %39) : (i1, i1) -> i1
            "cf.cond_br"(%40)[^bb2, ^bb3] {operand_segment_sizes = array<i32: 1, 0, 0>} : (i1) -> ()
          ^bb2:  // pred: ^bb1
            %41 = "memref.load"(%23) : (memref<i1>) -> i1
            "memref.store"(%41, %22) : (i1, memref<i1>) -> ()
            %42 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%42) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%7) {callee = @_ZNKSt8__detail14_Node_iteratorIiLb1ELb0EEdeEv} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.ptr<i32>
                "polygeist.trivialuse"(%46) : (!llvm.ptr<i32>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %43 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%43) ({
              "scf.execute_region"() ({
                %46 = "llvm.mlir.addressof"() {global_name = @str0} : () -> !llvm.ptr<array<4 x i8>>
                %47 = "arith.constant"() {value = 0 : i32} : () -> i32
                %48 = "arith.constant"() {value = 0 : i32} : () -> i32
                %49 = "llvm.getelementptr"(%46, %47, %48) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<4 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %50 = "llvm.load"(%46) : (!llvm.ptr<i32>) -> i32
                %51 = "llvm.call"(%49, %50) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>, i32) -> i32
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %44 = "memref.load"(%23) : (memref<i1>) -> i1
            "memref.store"(%44, %22) : (i1, memref<i1>) -> ()
            %45 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%45) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%7) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEppEv} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb3:  // pred: ^bb1
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %16 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%16) ({
      "scf.execute_region"() ({
        %17 = "llvm.mlir.addressof"() {global_name = @str1} : () -> !llvm.ptr<array<2 x i8>>
        %18 = "arith.constant"() {value = 0 : i32} : () -> i32
        %19 = "arith.constant"() {value = 0 : i32} : () -> i32
        %20 = "llvm.getelementptr"(%17, %18, %19) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %21 = "llvm.call"(%20) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>) -> i32
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> (), llvm.linkage = #llvm.linkage<external>, sym_name = "_Z7inspectRSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg0, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "llvm.getelementptr"(%arg1, %3) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
    "func.call"(%2, %5) {callee = @_ZNSt8__detail19_Node_iterator_baseIiLb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %8 = "memref.load"(%5) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%5) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, i32) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            %14 = "func.call"(%13) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE5beginEv} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            "func.call"(%3, %1) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %15 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "memref.store"(%15, %7) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %5) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %6) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%7) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
    "func.return"(%9) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE5beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %8 = "memref.load"(%5) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%5) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, i32) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            %14 = "func.call"(%13) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE3endEv} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            "func.call"(%3, %1) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %15 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "memref.store"(%15, %7) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %5) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %6) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%7) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
    "func.return"(%9) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE3endEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i8>
    %4 = "llvm.mlir.undef"() : () -> i8
    "memref.store"(%4, %3) : (i8, memref<i8>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "arith.constant"() {value = 0 : i32} : () -> i32
            %10 = "llvm.getelementptr"(%arg0, %8) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
            %11 = "llvm.load"(%10) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "arith.constant"() {value = 0 : i32} : () -> i32
            %14 = "llvm.getelementptr"(%arg1, %12) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
            %15 = "llvm.load"(%14) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %16 = "llvm.icmp"(%11, %15) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i1
            %17 = "arith.extui"(%16) : (i1) -> i8
            "memref.store"(%17, %3) : (i8, memref<i8>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i8>) -> i8
    "func.return"(%6) : (i8) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> i8, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detailneIiLb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES5_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
            %10 = "arith.constant"() {value = 0 : i32} : () -> i32
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.getelementptr"(%9, %10) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
            %13 = "llvm.load"(%12) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "arith.constant"() {value = 0 : i32} : () -> i32
            %16 = "llvm.getelementptr"(%13, %14) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
            %17 = "llvm.bitcast"(%16) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %18 = "func.call"(%17) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiE4_M_vEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            "memref.store"(%18, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %19 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%19, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%19, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail14_Node_iteratorIiLb1ELb0EEdeEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %7 = "arith.constant"() {value = 0 : i32} : () -> i32
        %8 = "arith.constant"() {value = 0 : i32} : () -> i32
        %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
        "func.call"(%9) {callee = @_ZNSt8__detail19_Node_iterator_baseIiLb0EE7_M_incrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            "memref.store"(%arg0, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>>) -> ()
            %8 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%8, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%8, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    "func.return"(%6) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEppEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %12 = "arith.constant"() {value = true} : () -> i1
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %14 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%12, %14) : (i1, memref<i1>) -> ()
    "memref.store"(%12, %13) : (i1, memref<i1>) -> ()
    %15 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%15) ({
      "scf.execute_region"() ({
        %17 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%17) ({
          "scf.execute_region"() ({
            %18 = "memref.load"(%13) : (memref<i1>) -> i1
            "scf.if"(%18) ({
              "scf.execute_region"() ({
                "polygeist.trivialuse"(%arg0) : (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %19 = "memref.load"(%13) : (memref<i1>) -> i1
            "scf.if"(%19) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%arg0) {callee = @_ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE5beginEv} : (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
                "llvm.store"(%46, %9) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
                "func.call"(%11, %9) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
                %47 = "llvm.load"(%11) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
                "llvm.store"(%47, %7) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %20 = "memref.load"(%13) : (memref<i1>) -> i1
            "scf.if"(%20) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%arg0) {callee = @_ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE3endEv} : (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
                "llvm.store"(%46, %3) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
                "func.call"(%5, %3) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
                %47 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
                "llvm.store"(%47, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %21 = "arith.constant"() {value = true} : () -> i1
            %22 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            %23 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            "memref.store"(%21, %23) : (i1, memref<i1>) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb1:  // 2 preds: ^bb0, ^bb2
            %24 = "arith.constant"() {value = 0 : i32} : () -> i32
            %25 = "arith.constant"() {value = 0 : i32} : () -> i32
            %26 = "llvm.getelementptr"(%7, %24) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %27 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %28 = "llvm.icmp"(%26, %27) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> i1
            %29 = "arith.select"(%28, %26, %27) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %30 = "arith.constant"() {value = 0 : i32} : () -> i32
            %31 = "arith.constant"() {value = 0 : i32} : () -> i32
            %32 = "llvm.getelementptr"(%1, %30) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %33 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %34 = "llvm.icmp"(%32, %33) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> i1
            %35 = "arith.select"(%34, %32, %33) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %36 = "func.call"(%29, %35) {callee = @_ZNSt8__detailneISt4pairIKiiELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> i8
            %37 = "arith.constant"() {value = 0 : i8} : () -> i8
            %38 = "arith.cmpi"(%36, %37) {predicate = 1 : i64} : (i8, i8) -> i1
            %39 = "memref.load"(%23) : (memref<i1>) -> i1
            %40 = "arith.andi"(%38, %39) : (i1, i1) -> i1
            "cf.cond_br"(%40)[^bb2, ^bb3] {operand_segment_sizes = array<i32: 1, 0, 0>} : (i1) -> ()
          ^bb2:  // pred: ^bb1
            %41 = "memref.load"(%23) : (memref<i1>) -> i1
            "memref.store"(%41, %22) : (i1, memref<i1>) -> ()
            %42 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%42) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%7) {callee = @_ZNKSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEdeEv} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
                "polygeist.trivialuse"(%46) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %43 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%43) ({
              "scf.execute_region"() ({
                %46 = "llvm.mlir.addressof"() {global_name = @str2} : () -> !llvm.ptr<array<7 x i8>>
                %47 = "arith.constant"() {value = 0 : i32} : () -> i32
                %48 = "arith.constant"() {value = 0 : i32} : () -> i32
                %49 = "llvm.getelementptr"(%46, %47, %48) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<7 x i8>>, i32, i32) -> !llvm.ptr<i8>
                %50 = "arith.constant"() {value = 0 : i32} : () -> i32
                %51 = "arith.constant"() {value = 0 : i32} : () -> i32
                %52 = "llvm.getelementptr"(%46, %50) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, i32) -> !llvm.ptr<i32>
                %53 = "llvm.load"(%52) : (!llvm.ptr<i32>) -> i32
                %54 = "arith.constant"() {value = 0 : i32} : () -> i32
                %55 = "arith.constant"() {value = 1 : i32} : () -> i32
                %56 = "llvm.getelementptr"(%46, %54) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, i32) -> !llvm.ptr<i32>
                %57 = "llvm.load"(%56) : (!llvm.ptr<i32>) -> i32
                %58 = "llvm.call"(%49, %53, %57) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>, i32, i32) -> i32
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %44 = "memref.load"(%23) : (memref<i1>) -> i1
            "memref.store"(%44, %22) : (i1, memref<i1>) -> ()
            %45 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%45) ({
              "scf.execute_region"() ({
                %46 = "func.call"(%7) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEppEv} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb3:  // pred: ^bb1
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %16 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%16) ({
      "scf.execute_region"() ({
        %17 = "llvm.mlir.addressof"() {global_name = @str1} : () -> !llvm.ptr<array<2 x i8>>
        %18 = "arith.constant"() {value = 0 : i32} : () -> i32
        %19 = "arith.constant"() {value = 0 : i32} : () -> i32
        %20 = "llvm.getelementptr"(%17, %18, %19) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<2 x i8>>, i32, i32) -> !llvm.ptr<i8>
        %21 = "llvm.call"(%20) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>) -> i32
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> (), llvm.linkage = #llvm.linkage<external>, sym_name = "_Z11inspect_mapRSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg0, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "llvm.getelementptr"(%arg1, %3) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
    "func.call"(%2, %5) {callee = @_ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %8 = "memref.load"(%5) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%5) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, i32) -> !llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            %14 = "func.call"(%13) {callee = @_ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv} : (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            "func.call"(%3, %1) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %15 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "memref.store"(%15, %7) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %5) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %6) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%7) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
    "func.return"(%9) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE5beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %8 = "memref.load"(%5) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%5) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, i32) -> !llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            %14 = "func.call"(%13) {callee = @_ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv} : (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            "func.call"(%3, %1) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %15 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "memref.store"(%15, %7) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %5) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %6) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%7) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
    "func.return"(%9) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_map", (struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt13unordered_mapIiiSt4hashIiESt8equal_toIiESaISt4pairIKiiEEE3endEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i8>
    %4 = "llvm.mlir.undef"() : () -> i8
    "memref.store"(%4, %3) : (i8, memref<i8>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "arith.constant"() {value = 0 : i32} : () -> i32
            %10 = "llvm.getelementptr"(%arg0, %8) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
            %11 = "llvm.load"(%10) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "arith.constant"() {value = 0 : i32} : () -> i32
            %14 = "llvm.getelementptr"(%arg1, %12) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
            %15 = "llvm.load"(%14) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            %16 = "llvm.icmp"(%11, %15) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> i1
            %17 = "arith.extui"(%16) : (i1) -> i8
            "memref.store"(%17, %3) : (i8, memref<i8>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i8>) -> i8
    "func.return"(%6) : (i8) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> i8, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detailneISt4pairIKiiELb0EEEbRKNS_19_Node_iterator_baseIT_XT0_EEES8_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
            %10 = "arith.constant"() {value = 0 : i32} : () -> i32
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.getelementptr"(%9, %10) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
            %13 = "llvm.load"(%12) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "arith.constant"() {value = 0 : i32} : () -> i32
            %16 = "llvm.getelementptr"(%13, %14) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>
            %17 = "func.call"(%16) {callee = @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKiiEE4_M_vEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
            "memref.store"(%17, %3) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEdeEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %7 = "arith.constant"() {value = 0 : i32} : () -> i32
        %8 = "arith.constant"() {value = 0 : i32} : () -> i32
        %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
        "func.call"(%9) {callee = @_ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EE7_M_incrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            "memref.store"(%arg0, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>>) -> ()
            %8 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%8, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%8, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    "func.return"(%6) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEppEv"} : () -> ()
  "func.func"() ({
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i32>
    %2 = "llvm.mlir.undef"() : () -> i32
    "llvm.store"(%2, %1) : (i32, !llvm.ptr<i32>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<i32>
    %5 = "llvm.mlir.undef"() : () -> i32
    "llvm.store"(%5, %4) : (i32, !llvm.ptr<i32>) -> ()
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"class.std::allocator.25", (i8)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"class.std::allocator.25", (i8)>>
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
    %14 = "arith.constant"() {value = 1 : i64} : () -> i64
    %15 = "llvm.alloca"(%14) : (i64) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
    %16 = "arith.constant"() {value = 1 : i64} : () -> i64
    %17 = "llvm.alloca"(%16) : (i64) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
    %18 = "arith.constant"() {value = 1 : i64} : () -> i64
    %19 = "llvm.alloca"(%18) : (i64) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
    %20 = "arith.constant"() {value = 1 : i64} : () -> i64
    %21 = "llvm.alloca"(%20) : (i64) -> !llvm.ptr<array<3 x i32>>
    %22 = "arith.constant"() {value = 3 : index} : () -> index
    %23 = "arith.constant"() {value = 12 : index} : () -> index
    %24 = "arith.constant"() {value = 1 : i64} : () -> i64
    %25 = "llvm.alloca"(%24) : (i64) -> !llvm.ptr<array<3 x i32>>
    %26 = "arith.constant"() {value = 1 : i64} : () -> i64
    %27 = "llvm.alloca"(%26) : (i64) -> !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>
    %28 = "arith.constant"() {value = true} : () -> i1
    %29 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %30 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%28, %30) : (i1, memref<i1>) -> ()
    "memref.store"(%28, %29) : (i1, memref<i1>) -> ()
    %31 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i32>
    %32 = "llvm.mlir.undef"() : () -> i32
    "memref.store"(%32, %31) : (i32, memref<i32>) -> ()
    %33 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%33) ({
      "scf.execute_region"() ({
        %41 = "memref.load"(%29) : (memref<i1>) -> i1
        "scf.if"(%41) ({
          "scf.execute_region"() ({
            %42 = "arith.constant"() {value = 0 : i32} : () -> i32
            %43 = "arith.constant"() {value = 0 : i32} : () -> i32
            %44 = "llvm.getelementptr"(%25, %42, %43) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<3 x i32>>, i32, i32) -> !llvm.ptr<i32>
            %45 = "arith.constant"() {value = 1 : i32} : () -> i32
            "llvm.store"(%45, %44) : (i32, !llvm.ptr<i32>) -> ()
            %46 = "arith.constant"() {value = 0 : i32} : () -> i32
            %47 = "arith.constant"() {value = 1 : i32} : () -> i32
            %48 = "llvm.getelementptr"(%25, %46, %47) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<3 x i32>>, i32, i32) -> !llvm.ptr<i32>
            %49 = "arith.constant"() {value = 2 : i32} : () -> i32
            "llvm.store"(%49, %48) : (i32, !llvm.ptr<i32>) -> ()
            %50 = "arith.constant"() {value = 0 : i32} : () -> i32
            %51 = "arith.constant"() {value = 2 : i32} : () -> i32
            %52 = "llvm.getelementptr"(%25, %50, %51) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<3 x i32>>, i32, i32) -> !llvm.ptr<i32>
            %53 = "arith.constant"() {value = 3 : i32} : () -> i32
            "llvm.store"(%53, %52) : (i32, !llvm.ptr<i32>) -> ()
            %54 = "llvm.load"(%25) : (!llvm.ptr<array<3 x i32>>) -> !llvm.array<3 x i32>
            "llvm.store"(%54, %21) : (!llvm.array<3 x i32>, !llvm.ptr<array<3 x i32>>) -> ()
            %55 = "llvm.mlir.undef"() : () -> !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>
            %56 = "arith.constant"() {value = 0 : i32} : () -> i32
            %57 = "arith.constant"() {value = 0 : i32} : () -> i32
            %58 = "llvm.getelementptr"(%21, %56, %57) {rawConstantIndices = array<i32: -2147483648, -2147483648>} : (!llvm.ptr<array<3 x i32>>, i32, i32) -> !llvm.ptr<i32>
            %59 = "llvm.insertvalue"(%55, %58) {position = array<i64: 0>} : (!llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, !llvm.ptr<i32>) -> !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>
            %60 = "arith.constant"() {value = 3 : i64} : () -> i64
            %61 = "llvm.insertvalue"(%59, %60) {position = array<i64: 1>} : (!llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, i64) -> !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>
            %62 = "arith.constant"() {value = 0 : i32} : () -> i32
            %63 = "arith.constant"() {value = 0 : i64} : () -> i64
            %64 = "llvm.bitcast"(%19) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>) -> !llvm.ptr<i8>
            %65 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::hash", (i8)>} : () -> index
            %66 = "arith.constant"() {value = 0 : i8} : () -> i8
            %67 = "arith.index_cast"(%65) : (index) -> i64
            %68 = "arith.constant"() {value = false} : () -> i1
            "llvm.intr.memset"(%64, %66, %67, %68) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
            %69 = "llvm.load"(%19) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>) -> !llvm.struct<"struct.std::hash", (i8)>
            "llvm.store"(%69, %17) : (!llvm.struct<"struct.std::hash", (i8)>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> ()
            %70 = "llvm.bitcast"(%15) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> !llvm.ptr<i8>
            %71 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::equal_to", (i8)>} : () -> index
            %72 = "arith.constant"() {value = 0 : i8} : () -> i8
            %73 = "arith.index_cast"(%71) : (index) -> i64
            %74 = "arith.constant"() {value = false} : () -> i1
            "llvm.intr.memset"(%70, %72, %73, %74) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
            %75 = "llvm.load"(%15) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> !llvm.struct<"struct.std::equal_to", (i8)>
            "llvm.store"(%75, %13) : (!llvm.struct<"struct.std::equal_to", (i8)>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> ()
            "func.call"(%11) {callee = @_ZNSaIiEC1Ev} : (!llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
            %76 = "llvm.load"(%11) : (!llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> !llvm.struct<"class.std::allocator.25", (i8)>
            "llvm.store"(%76, %9) : (!llvm.struct<"class.std::allocator.25", (i8)>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
            "func.call"(%27, %61, %63, %17, %13, %9) {callee = @_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEEC1ESt16initializer_listIiEmRKS1_RKS3_RKS4_} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, i64, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
            %77 = "llvm.load"(%27) : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> !llvm.struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>
            "llvm.store"(%77, %7) : (!llvm.struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>, !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %34 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%34) ({
      "scf.execute_region"() ({
        "func.call"(%7) {callee = @_Z7inspectRSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %35 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%35) ({
      "scf.execute_region"() ({
        %41 = "arith.constant"() {value = 4 : i32} : () -> i32
        "llvm.store"(%41, %4) : (i32, !llvm.ptr<i32>) -> ()
        %42 = "func.call"(%7, %4) {callee = @_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE6insertEOi} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %36 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%36) ({
      "scf.execute_region"() ({
        "func.call"(%7) {callee = @_Z7inspectRSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %37 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%37) ({
      "scf.execute_region"() ({
        %41 = "arith.constant"() {value = 3 : i32} : () -> i32
        "llvm.store"(%41, %1) : (i32, !llvm.ptr<i32>) -> ()
        %42 = "func.call"(%7, %1) {callee = @_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE6insertEOi} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %38 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%38) ({
      "scf.execute_region"() ({
        "func.call"(%7) {callee = @_Z7inspectRSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %39 = "memref.load"(%29) : (memref<i1>) -> i1
    "scf.if"(%39) ({
      "scf.execute_region"() ({
        %41 = "memref.load"(%29) : (memref<i1>) -> i1
        "scf.if"(%41) ({
          "scf.execute_region"() ({
            %42 = "arith.constant"() {value = 0 : i32} : () -> i32
            "memref.store"(%42, %31) : (i32, memref<i32>) -> ()
            %43 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%43, %29) : (i1, memref<i1>) -> ()
            "memref.store"(%43, %30) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %40 = "memref.load"(%31) : (memref<i32>) -> i32
    "func.return"(%40) : (i32) -> ()
  }) {function_type = () -> i32, llvm.linkage = #llvm.linkage<external>, sym_name = "_Z8set_testv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, %arg1: !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, %arg2: i64, %arg3: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg4: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg5: !llvm.ptr<struct<"class.std::allocator.25", (i8)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = 1 : i64} : () -> i64
    %6 = "llvm.alloca"(%5) : (i64) -> !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>
    "llvm.store"(%arg1, %6) : (!llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> ()
    "llvm.store"(%arg2, %3) : (i64, !llvm.ptr<i64>) -> ()
    %7 = "arith.constant"() {value = 0 : i32} : () -> i32
    %8 = "arith.constant"() {value = 0 : i32} : () -> i32
    %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, i32) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
    "func.call"(%1, %6) {callee = @_ZNSt16initializer_listIiEC1ERKS0_} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> ()
    %10 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
    %11 = "llvm.load"(%1) : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>
    "func.call"(%9, %11, %10, %arg3, %arg4, %arg5) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEEC1ESt16initializer_listIiEmRKS6_RKS4_RKS0_} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, i64, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
    %12 = "arith.constant"() {value = true} : () -> i1
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %14 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%12, %14) : (i1, memref<i1>) -> ()
    "memref.store"(%12, %13) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, i64, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEEC1ESt16initializer_listIiEmRKS1_RKS3_RKS4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator.25", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.26", (i8)>>
    "func.call"(%0) {callee = @_ZN9__gnu_cxx13new_allocatorIiEC1Ev} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.26", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSaIiEC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %8 = "memref.load"(%5) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%5) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, i32) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            %14 = "llvm.bitcast"(%13) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>
            %15 = "func.call"(%14, %arg1) {callee = @_ZNSt8__detail7_InsertIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEELb1EE6insertEOi} : (!llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "llvm.store"(%15, %1) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            "func.call"(%3, %1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %16 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "memref.store"(%16, %7) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %17 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%17, %5) : (i1, memref<i1>) -> ()
            "memref.store"(%17, %6) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%7) : (memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
    "func.return"(%9) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::unordered_set", (struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt13unordered_setIiSt4hashIiESt8equal_toIiESaIiEE6insertEOi"} : () -> ()
  "func.func"() ({
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i32>
    %4 = "llvm.mlir.undef"() : () -> i32
    "memref.store"(%4, %3) : (i32, memref<i32>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %8 = "func.call"() {callee = @_Z8set_testv} : () -> i32
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%6) ({
      "scf.execute_region"() ({
        %8 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%8) ({
          "scf.execute_region"() ({
            %9 = "arith.constant"() {value = 0 : i32} : () -> i32
            "memref.store"(%9, %3) : (i32, memref<i32>) -> ()
            %10 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%10, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%10, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %7 = "memref.load"(%3) : (memref<i32>) -> i32
    "func.return"(%7) : (i32) -> ()
  }) {function_type = () -> i32, llvm.linkage = #llvm.linkage<external>, sym_name = "main"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg1, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %3 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "arith.constant"() {value = 0 : i32} : () -> i32
    %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%3, %6) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %7 = "arith.constant"() {value = true} : () -> i1
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%7, %9) : (i1, memref<i1>) -> ()
    "memref.store"(%7, %8) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail19_Node_iterator_baseIiLb0EEC1EOS1_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %10 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "func.call"(%arg0) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE8_M_beginEv} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "func.call"(%3, %13) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
            %14 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %15 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "memref.store"(%15, %9) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%9) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
    "func.return"(%11) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE5beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %10 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "func.call"(%3, %13) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
            %14 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %15 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "memref.store"(%15, %9) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%9) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
    "func.return"(%11) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE3endEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiE9_M_valptrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            "memref.store"(%7, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %8 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%8, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%8, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hash_node_value_baseIiE4_M_vEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%3) ({
      "scf.execute_region"() ({
        %4 = "arith.constant"() {value = 0 : i32} : () -> i32
        %5 = "arith.constant"() {value = 0 : i32} : () -> i32
        %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
        %7 = "arith.constant"() {value = 0 : i32} : () -> i32
        %8 = "arith.constant"() {value = 0 : i32} : () -> i32
        %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
        %10 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
        %11 = "func.call"(%10) {callee = @_ZNKSt8__detail10_Hash_nodeIiLb0EE7_M_nextEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
        "llvm.store"(%11, %6) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail19_Node_iterator_baseIiLb0EE7_M_incrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg1, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    %3 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "arith.constant"() {value = 0 : i32} : () -> i32
    %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    "llvm.store"(%3, %6) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
    %7 = "arith.constant"() {value = true} : () -> i1
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%7, %9) : (i1, memref<i1>) -> ()
    "memref.store"(%7, %8) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EEC1EOS4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %10 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "func.call"(%arg0) {callee = @_ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv} : (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            "func.call"(%3, %13) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EPNS_10_Hash_nodeIS3_Lb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> ()
            %14 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %15 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "memref.store"(%15, %9) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%9) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
    "func.return"(%11) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE5beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>
    %10 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            "func.call"(%3, %13) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EPNS_10_Hash_nodeIS3_Lb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> ()
            %14 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "llvm.store"(%14, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EOS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %15 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
            "memref.store"(%15, %9) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> ()
            %16 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%16, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%16, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%9) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>
    "func.return"(%11) : (!llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE3endEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZNSt8__detail21_Hash_node_value_baseISt4pairIKiiEE9_M_valptrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
            "memref.store"(%7, %3) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> ()
            %8 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%8, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%8, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hash_node_value_baseISt4pairIKiiEE4_M_vEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%3) ({
      "scf.execute_region"() ({
        %4 = "arith.constant"() {value = 0 : i32} : () -> i32
        %5 = "arith.constant"() {value = 0 : i32} : () -> i32
        %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
        %7 = "arith.constant"() {value = 0 : i32} : () -> i32
        %8 = "arith.constant"() {value = 0 : i32} : () -> i32
        %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
        %10 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
        %11 = "func.call"(%10) {callee = @_ZNKSt8__detail10_Hash_nodeISt4pairIKiiELb0EE7_M_nextEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
        "llvm.store"(%11, %6) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EE7_M_incrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, %arg2: i64, %arg3: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg4: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg5: !llvm.ptr<struct<"class.std::allocator.25", (i8)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<i64>
    %14 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%14, %13) : (i64, !llvm.ptr<i64>) -> ()
    %15 = "arith.constant"() {value = 1 : i64} : () -> i64
    %16 = "llvm.alloca"(%15) : (i64) -> !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>
    "llvm.store"(%arg1, %16) : (!llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> ()
    "llvm.store"(%arg2, %13) : (i64, !llvm.ptr<i64>) -> ()
    %17 = "func.call"(%16) {callee = @_ZNKSt16initializer_listIiE5beginEv} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> !llvm.ptr<i32>
    %18 = "func.call"(%16) {callee = @_ZNKSt16initializer_listIiE3endEv} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> !llvm.ptr<i32>
    %19 = "llvm.load"(%13) : (!llvm.ptr<i64>) -> i64
    %20 = "llvm.bitcast"(%11) : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> !llvm.ptr<i8>
    %21 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Mod_range_hashing", (i8)>} : () -> index
    %22 = "arith.constant"() {value = 0 : i8} : () -> i8
    %23 = "arith.index_cast"(%21) : (index) -> i64
    %24 = "arith.constant"() {value = false} : () -> i1
    "llvm.intr.memset"(%20, %22, %23, %24) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
    %25 = "llvm.load"(%11) : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> !llvm.struct<"struct.std::__detail::_Mod_range_hashing", (i8)>
    "llvm.store"(%25, %9) : (!llvm.struct<"struct.std::__detail::_Mod_range_hashing", (i8)>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> ()
    %26 = "llvm.bitcast"(%7) : (!llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>) -> !llvm.ptr<i8>
    %27 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Default_ranged_hash", (i8)>} : () -> index
    %28 = "arith.constant"() {value = 0 : i8} : () -> i8
    %29 = "arith.index_cast"(%27) : (index) -> i64
    %30 = "arith.constant"() {value = false} : () -> i1
    "llvm.intr.memset"(%26, %28, %29, %30) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
    %31 = "llvm.load"(%7) : (!llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>) -> !llvm.struct<"struct.std::__detail::_Default_ranged_hash", (i8)>
    "llvm.store"(%31, %5) : (!llvm.struct<"struct.std::__detail::_Default_ranged_hash", (i8)>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>) -> ()
    %32 = "llvm.bitcast"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> !llvm.ptr<i8>
    %33 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Identity", (i8)>} : () -> index
    %34 = "arith.constant"() {value = 0 : i8} : () -> i8
    %35 = "arith.index_cast"(%33) : (index) -> i64
    %36 = "arith.constant"() {value = false} : () -> i1
    "llvm.intr.memset"(%32, %34, %35, %36) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
    %37 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> !llvm.struct<"struct.std::__detail::_Identity", (i8)>
    "llvm.store"(%37, %1) : (!llvm.struct<"struct.std::__detail::_Identity", (i8)>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
    "func.call"(%arg0, %17, %18, %19, %arg3, %9, %5, %arg4, %1, %arg5) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEEC1IPKiEET_SG_mRKS6_RKS7_RKS8_RKS4_RKS2_RKS0_} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, !llvm.ptr<i32>, i64, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
    %38 = "arith.constant"() {value = true} : () -> i1
    %39 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %40 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%38, %40) : (i1, memref<i1>) -> ()
    "memref.store"(%38, %39) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.struct<"class.std::initializer_list", (ptr<i32>, i64)>, i64, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEEC1ESt16initializer_listIiEmRKS6_RKS4_RKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, %arg1: !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg1, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, i32) -> !llvm.ptr<ptr<i32>>
    %3 = "llvm.load"(%2) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "arith.constant"() {value = 0 : i32} : () -> i32
    %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, i32) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%3, %6) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %7 = "arith.constant"() {value = 0 : i32} : () -> i32
    %8 = "arith.constant"() {value = 1 : i32} : () -> i32
    %9 = "llvm.getelementptr"(%arg1, %7) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, i32) -> !llvm.ptr<i64>
    %10 = "llvm.load"(%9) : (!llvm.ptr<i64>) -> i64
    %11 = "arith.constant"() {value = 0 : i32} : () -> i32
    %12 = "arith.constant"() {value = 1 : i32} : () -> i32
    %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, i32) -> !llvm.ptr<i64>
    "llvm.store"(%10, %13) : (i64, !llvm.ptr<i64>) -> ()
    %14 = "arith.constant"() {value = true} : () -> i1
    %15 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %16 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%14, %16) : (i1, memref<i1>) -> ()
    "memref.store"(%14, %15) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt16initializer_listIiEC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.26", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.26", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorIiEC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, %arg1: !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt11__pair_baseINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1ERKS3_} : (!llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>, !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>) -> ()
    %2 = "arith.constant"() {value = 0 : i32} : () -> i32
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "llvm.getelementptr"(%arg0, %2) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %5 = "arith.constant"() {value = 0 : i32} : () -> i32
    %6 = "arith.constant"() {value = 0 : i32} : () -> i32
    %7 = "llvm.getelementptr"(%arg1, %5) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    "func.call"(%4, %7) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
    %8 = "arith.constant"() {value = 0 : i32} : () -> i32
    %9 = "arith.constant"() {value = 1 : i32} : () -> i32
    %10 = "llvm.getelementptr"(%arg1, %8) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, i32) -> !llvm.ptr<i8>
    %11 = "llvm.load"(%10) : (!llvm.ptr<i8>) -> i8
    %12 = "arith.constant"() {value = 0 : i32} : () -> i32
    %13 = "arith.constant"() {value = 1 : i32} : () -> i32
    %14 = "llvm.getelementptr"(%arg0, %12) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, i32) -> !llvm.ptr<i8>
    "llvm.store"(%11, %14) : (i8, !llvm.ptr<i8>) -> ()
    %15 = "arith.constant"() {value = true} : () -> i1
    %16 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %17 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%15, %17) : (i1, memref<i1>) -> ()
    "memref.store"(%15, %16) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>
    %12 = "arith.constant"() {value = true} : () -> i1
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %14 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%12, %14) : (i1, memref<i1>) -> ()
    "memref.store"(%12, %13) : (i1, memref<i1>) -> ()
    %15 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %16 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%16) ({
      "scf.execute_region"() ({
        %20 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%20) ({
          "scf.execute_region"() ({
            %21 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>
            %22 = "func.call"(%21) {callee = @_ZNSt8__detail12_Insert_baseIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEEE20_M_conjure_hashtableEv} : (!llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            "polygeist.trivialuse"(%22) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %17 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%17) ({
      "scf.execute_region"() ({
        %20 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%20) ({
          "scf.execute_region"() ({
            %21 = "llvm.bitcast"(%22) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %22 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %23 = "llvm.icmp"(%21, %22) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> i1
            %24 = "arith.select"(%23, %21, %22) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            "func.call"(%11, %24) {callee = @_ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEC1ERNS_16_Hashtable_allocIS3_EE} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %18 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%18) ({
      "scf.execute_region"() ({
        %20 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%20) ({
          "scf.execute_region"() ({
            %21 = "llvm.bitcast"(%5) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.ptr<i8>
            %22 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::integral_constant", (i8)>} : () -> index
            %23 = "arith.constant"() {value = 0 : i8} : () -> i8
            %24 = "arith.index_cast"(%22) : (index) -> i64
            %25 = "arith.constant"() {value = false} : () -> i1
            "llvm.intr.memset"(%21, %23, %24, %25) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
            %26 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.struct<"struct.std::integral_constant", (i8)>
            "llvm.store"(%26, %3) : (!llvm.struct<"struct.std::integral_constant", (i8)>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
            "func.call"(%7, %3) {callee = @_ZNSt17integral_constantIbLb1EEC1EOS0_} : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
            %27 = "arith.constant"() {value = 1 : i32} : () -> i32
            %28 = "arith.constant"() {value = 1 : i64} : () -> i64
            %29 = "llvm.load"(%7) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.struct<"struct.std::integral_constant", (i8)>
            %30 = "func.call"(%22, %arg1, %11, %29, %28) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_insertIiNS1_10_AllocNodeISaINS1_10_Hash_nodeIiLb0EEEEEEEESt4pairINS1_14_Node_iteratorIiLb1ELb0EEEbEOT_RKT0_St17integral_constantIbLb1EEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.struct<"struct.std::integral_constant", (i8)>, i64) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "llvm.store"(%30, %1) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            "func.call"(%9, %1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %31 = "llvm.load"(%9) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "memref.store"(%31, %15) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %32 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%32, %13) : (i1, memref<i1>) -> ()
            "memref.store"(%32, %14) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %19 = "memref.load"(%15) : (memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
    "func.return"(%19) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail7_InsertIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEELb1EE6insertEOi"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %2 = "arith.constant"() {value = 0 : i32} : () -> i32
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "llvm.getelementptr"(%arg0, %2) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>
    %5 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.call"(%4, %5) {callee = @_ZNSt8__detail19_Node_iterator_baseIiLb0EEC1EPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EPNS_10_Hash_nodeIiLb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 2 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %10 = "arith.constant"() {value = 0 : i32} : () -> i32
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.getelementptr"(%9, %10) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %13 = "llvm.load"(%12) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "llvm.bitcast"(%13) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<i8>
            %16 = "llvm.getelementptr"(%15, %14) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %17 = "llvm.bitcast"(%16) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %18 = "arith.constant"() {value = 0 : i32} : () -> i32
            %19 = "llvm.bitcast"(%17) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i8>
            %20 = "llvm.getelementptr"(%19, %18) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %21 = "llvm.bitcast"(%20) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%21, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %22 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%22, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%22, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE8_M_beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 1 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>
            %10 = "func.call"(%9) {callee = @_ZN9__gnu_cxx16__aligned_bufferIiE6_M_ptrEv} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i32>
            "memref.store"(%10, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hash_node_value_baseIiE9_M_valptrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
            %10 = "llvm.bitcast"(%9) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 0 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%10, %11) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "arith.constant"() {value = 0 : i32} : () -> i32
            %16 = "llvm.getelementptr"(%13, %14) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %17 = "llvm.load"(%16) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %18 = "arith.constant"() {value = 0 : i32} : () -> i32
            %19 = "llvm.bitcast"(%17) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<i8>
            %20 = "llvm.getelementptr"(%19, %18) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %21 = "llvm.bitcast"(%20) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %22 = "arith.constant"() {value = 0 : i32} : () -> i32
            %23 = "llvm.bitcast"(%21) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i8>
            %24 = "llvm.getelementptr"(%23, %22) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %25 = "llvm.bitcast"(%24) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%25, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %26 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%26, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%26, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail10_Hash_nodeIiLb0EE7_M_nextEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
    %2 = "arith.constant"() {value = 0 : i32} : () -> i32
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "llvm.getelementptr"(%arg0, %2) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>
    %5 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
    "func.call"(%4, %5) {callee = @_ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EEC1EPNS_10_Hash_nodeIS3_Lb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator.18", (struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail14_Node_iteratorISt4pairIKiiELb0ELb0EEC1EPNS_10_Hash_nodeIS3_Lb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 2 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %10 = "arith.constant"() {value = 0 : i32} : () -> i32
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.getelementptr"(%9, %10) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %13 = "llvm.load"(%12) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "llvm.bitcast"(%13) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<i8>
            %16 = "llvm.getelementptr"(%15, %14) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %17 = "llvm.bitcast"(%16) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>
            %18 = "arith.constant"() {value = 0 : i32} : () -> i32
            %19 = "llvm.bitcast"(%17) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>) -> !llvm.ptr<i8>
            %20 = "llvm.getelementptr"(%19, %18) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %21 = "llvm.bitcast"(%20) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            "memref.store"(%21, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
            %22 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%22, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%22, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable.4", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiSt4pairIKiiESaIS2_ENSt8__detail10_Select1stESt8equal_toIiESt4hashIiENS4_18_Mod_range_hashingENS4_20_Default_ranged_hashENS4_20_Prime_rehash_policyENS4_17_Hashtable_traitsILb0ELb0ELb1EEEE8_M_beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 1 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>, i32) -> !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>
            %10 = "func.call"(%9) {callee = @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKiiEE6_M_ptrEv} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hash_node_value_baseISt4pairIKiiEE9_M_valptrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>
            %10 = "arith.constant"() {value = 0 : i32} : () -> i32
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.getelementptr"(%9, %10) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %13 = "arith.constant"() {value = 0 : i32} : () -> i32
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "llvm.getelementptr"(%12, %13) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %16 = "llvm.load"(%15) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %17 = "arith.constant"() {value = 0 : i32} : () -> i32
            %18 = "llvm.bitcast"(%16) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<i8>
            %19 = "llvm.getelementptr"(%18, %17) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %20 = "llvm.bitcast"(%19) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>
            %21 = "arith.constant"() {value = 0 : i32} : () -> i32
            %22 = "llvm.bitcast"(%20) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>>) -> !llvm.ptr<i8>
            %23 = "llvm.getelementptr"(%22, %21) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %24 = "llvm.bitcast"(%23) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
            "memref.store"(%24, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
            %25 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%25, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%25, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail10_Hash_nodeISt4pairIKiiELb0EE7_M_nextEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<i32>, %arg3: i64, %arg4: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg5: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, %arg6: !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, %arg7: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg8: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg9: !llvm.ptr<struct<"class.std::allocator.25", (i8)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<i64>
    %5 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%5, %4) : (i64, !llvm.ptr<i64>) -> ()
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<i64>
    %8 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%8, %7) : (i64, !llvm.ptr<i64>) -> ()
    %9 = "arith.constant"() {value = 1 : i64} : () -> i64
    %10 = "llvm.alloca"(%9) : (i64) -> !llvm.ptr<i64>
    %11 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%11, %10) : (i64, !llvm.ptr<i64>) -> ()
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<ptr<i32>>
    %14 = "arith.constant"() {value = 1 : i64} : () -> i64
    %15 = "llvm.alloca"(%14) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg1, %15) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg2, %13) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg3, %10) : (i64, !llvm.ptr<i64>) -> ()
    "func.call"(%arg0, %arg4, %arg5, %arg6, %arg7, %arg8, %arg9) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEEC1ERKS6_RKS7_RKS8_RKS4_RKS2_RKS0_} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
    %16 = "arith.constant"() {value = true} : () -> i1
    %17 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %18 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%16, %18) : (i1, memref<i1>) -> ()
    "memref.store"(%16, %17) : (i1, memref<i1>) -> ()
    %19 = "memref.load"(%17) : (memref<i1>) -> i1
    "scf.if"(%19) ({
      "scf.execute_region"() ({
        %23 = "memref.load"(%17) : (memref<i1>) -> i1
        "scf.if"(%23) ({
          "scf.execute_region"() ({
            %24 = "llvm.load"(%15) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %25 = "llvm.load"(%13) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %26 = "func.call"(%24, %25) {callee = @_ZNSt8__detail13__distance_fwIPKiEENSt15iterator_traitsIT_E15difference_typeES4_S4_} : (!llvm.ptr<i32>, !llvm.ptr<i32>) -> i64
            "llvm.store"(%26, %7) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %20 = "memref.load"(%17) : (memref<i1>) -> i1
    "scf.if"(%20) ({
      "scf.execute_region"() ({
        %23 = "memref.load"(%17) : (memref<i1>) -> i1
        "scf.if"(%23) ({
          "scf.execute_region"() ({
            %24 = "arith.constant"() {value = 0 : i32} : () -> i32
            %25 = "arith.constant"() {value = 4 : i32} : () -> i32
            %26 = "llvm.getelementptr"(%arg0, %24) {rawConstantIndices = array<i32: -2147483648, 4>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>
            %27 = "arith.constant"() {value = 0 : i32} : () -> i32
            %28 = "arith.constant"() {value = 4 : i32} : () -> i32
            %29 = "llvm.getelementptr"(%arg0, %27) {rawConstantIndices = array<i32: -2147483648, 4>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>
            %30 = "llvm.load"(%7) : (!llvm.ptr<i64>) -> i64
            %31 = "func.call"(%29, %30) {callee = @_ZNKSt8__detail20_Prime_rehash_policy19_M_bkt_for_elementsEm} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i64) -> i64
            "llvm.store"(%31, %4) : (i64, !llvm.ptr<i64>) -> ()
            %32 = "func.call"(%4, %10) {callee = @_ZSt3maxImERKT_S2_S2_} : (!llvm.ptr<i64>, !llvm.ptr<i64>) -> !llvm.ptr<i64>
            %33 = "llvm.load"(%32) : (!llvm.ptr<i64>) -> i64
            %34 = "func.call"(%26, %33) {callee = @_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEm} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i64) -> i64
            "llvm.store"(%34, %1) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %21 = "memref.load"(%17) : (memref<i1>) -> i1
    "scf.if"(%21) ({
      "scf.execute_region"() ({
        %23 = "memref.load"(%17) : (memref<i1>) -> i1
        "scf.if"(%23) ({
          "scf.execute_region"() ({
            %24 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %25 = "arith.constant"() {value = 0 : i32} : () -> i32
            %26 = "arith.constant"() {value = 1 : i32} : () -> i32
            %27 = "llvm.getelementptr"(%arg0, %25) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
            %28 = "llvm.load"(%27) : (!llvm.ptr<i64>) -> i64
            %29 = "arith.cmpi"(%24, %28) {predicate = 4 : i64} : (i64, i64) -> i1
            %30 = "arith.extui"(%29) : (i1) -> i8
            %31 = "arith.constant"() {value = 0 : i8} : () -> i8
            %32 = "arith.cmpi"(%30, %31) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%32) ({
              %33 = "memref.load"(%17) : (memref<i1>) -> i1
              "scf.if"(%33) ({
                "scf.execute_region"() ({
                  %35 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %36 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %37 = "llvm.getelementptr"(%arg0, %35) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
                  %38 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                  %39 = "func.call"(%arg0, %38) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE19_M_allocate_bucketsEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  "llvm.store"(%39, %37) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              %34 = "memref.load"(%17) : (memref<i1>) -> i1
              "scf.if"(%34) ({
                "scf.execute_region"() ({
                  %35 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %36 = "arith.constant"() {value = 1 : i32} : () -> i32
                  %37 = "llvm.getelementptr"(%arg0, %35) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
                  %38 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                  "llvm.store"(%38, %37) : (i64, !llvm.ptr<i64>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %22 = "memref.load"(%17) : (memref<i1>) -> i1
    "scf.if"(%22) ({
      "scf.execute_region"() ({
        %23 = "memref.load"(%17) : (memref<i1>) -> i1
        "scf.if"(%23) ({
          "scf.execute_region"() ({
            %24 = "arith.constant"() {value = true} : () -> i1
            %25 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            %26 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            "memref.store"(%24, %26) : (i1, memref<i1>) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb1:  // 2 preds: ^bb0, ^bb2
            %27 = "llvm.load"(%15) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %28 = "llvm.load"(%13) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %29 = "llvm.icmp"(%27, %28) {predicate = 1 : i64} : (!llvm.ptr<i32>, !llvm.ptr<i32>) -> i1
            %30 = "arith.extui"(%29) : (i1) -> i8
            %31 = "arith.constant"() {value = 0 : i8} : () -> i8
            %32 = "arith.cmpi"(%30, %31) {predicate = 1 : i64} : (i8, i8) -> i1
            %33 = "memref.load"(%26) : (memref<i1>) -> i1
            %34 = "arith.andi"(%32, %33) : (i1, i1) -> i1
            "cf.cond_br"(%34)[^bb2, ^bb3] {operand_segment_sizes = array<i32: 1, 0, 0>} : (i1) -> ()
          ^bb2:  // pred: ^bb1
            %35 = "memref.load"(%26) : (memref<i1>) -> i1
            "memref.store"(%35, %25) : (i1, memref<i1>) -> ()
            %36 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>
            %37 = "llvm.bitcast"(%36) : (!llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>
            %38 = "llvm.load"(%15) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %39 = "func.call"(%37, %38) {callee = @_ZNSt8__detail12_Insert_baseIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEEE6insertERKi} : (!llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            %40 = "memref.load"(%26) : (memref<i1>) -> i1
            "memref.store"(%40, %25) : (i1, memref<i1>) -> ()
            %41 = "memref.load"(%25) : (memref<i1>) -> i1
            "scf.if"(%41) ({
              "scf.execute_region"() ({
                %42 = "llvm.load"(%15) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
                %43 = "arith.constant"() {value = 1 : i64} : () -> i64
                %44 = "llvm.getelementptr"(%42, %43) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i32>, i64) -> !llvm.ptr<i32>
                "llvm.store"(%44, %15) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb3:  // pred: ^bb1
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, !llvm.ptr<i32>, i64, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEEC1IPKiEET_SG_mRKS6_RKS7_RKS8_RKS4_RKS2_RKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, i32) -> !llvm.ptr<ptr<i32>>
            %10 = "llvm.load"(%9) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            "memref.store"(%10, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt16initializer_listIiE5beginEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZNKSt16initializer_listIiE5beginEv} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> !llvm.ptr<i32>
            %8 = "func.call"(%arg0) {callee = @_ZNKSt16initializer_listIiE4sizeEv} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> i64
            %9 = "llvm.getelementptr"(%7, %8) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i32>, i64) -> !llvm.ptr<i32>
            "memref.store"(%9, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %10 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%10, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%10, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt16initializer_listIiE3endEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>, !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt11__pair_baseINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1ERKS3_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>) -> !llvm.ptr<i8>
            %9 = "llvm.getelementptr"(%8, %7) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %10 = "llvm.bitcast"(%9) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.bitcast"(%10) : (!llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>) -> !llvm.ptr<i8>
            %13 = "llvm.getelementptr"(%12, %11) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
            %14 = "llvm.bitcast"(%13) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            "memref.store"(%14, %3) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, memref<!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>>) -> ()
            %15 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%15, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%15, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>>) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail12_Insert_baseIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEEE20_M_conjure_hashtableEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg0, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>>
    "llvm.store"(%arg1, %2) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEC1ERNS_16_Hashtable_allocIS3_EE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, %arg3: !llvm.struct<"struct.std::integral_constant", (i8)>, %arg4: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i8>
    %2 = "llvm.mlir.undef"() : () -> i8
    "llvm.store"(%2, %1) : (i8, !llvm.ptr<i8>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %5 = "arith.constant"() {value = 1 : i64} : () -> i64
    %6 = "llvm.alloca"(%5) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %7 = "arith.constant"() {value = 1 : i64} : () -> i64
    %8 = "llvm.alloca"(%7) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %9 = "arith.constant"() {value = 1 : i64} : () -> i64
    %10 = "llvm.alloca"(%9) : (i64) -> !llvm.ptr<i8>
    %11 = "llvm.mlir.undef"() : () -> i8
    "llvm.store"(%11, %10) : (i8, !llvm.ptr<i8>) -> ()
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %14 = "arith.constant"() {value = 1 : i64} : () -> i64
    %15 = "llvm.alloca"(%14) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %16 = "arith.constant"() {value = 1 : i64} : () -> i64
    %17 = "llvm.alloca"(%16) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %18 = "arith.constant"() {value = 1 : i64} : () -> i64
    %19 = "llvm.alloca"(%18) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %20 = "arith.constant"() {value = 1 : i64} : () -> i64
    %21 = "llvm.alloca"(%20) : (i64) -> !llvm.ptr<i64>
    %22 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%22, %21) : (i64, !llvm.ptr<i64>) -> ()
    %23 = "arith.constant"() {value = 1 : i64} : () -> i64
    %24 = "llvm.alloca"(%23) : (i64) -> !llvm.ptr<i64>
    %25 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%25, %24) : (i64, !llvm.ptr<i64>) -> ()
    %26 = "arith.constant"() {value = 1 : i64} : () -> i64
    %27 = "llvm.alloca"(%26) : (i64) -> !llvm.ptr<i64>
    %28 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%28, %27) : (i64, !llvm.ptr<i64>) -> ()
    %29 = "arith.constant"() {value = 1 : i64} : () -> i64
    %30 = "llvm.alloca"(%29) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    "llvm.store"(%arg3, %30) : (!llvm.struct<"struct.std::integral_constant", (i8)>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
    "llvm.store"(%arg4, %27) : (i64, !llvm.ptr<i64>) -> ()
    %31 = "arith.constant"() {value = true} : () -> i1
    %32 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %33 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%31, %33) : (i1, memref<i1>) -> ()
    "memref.store"(%31, %32) : (i1, memref<i1>) -> ()
    %34 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %35 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%35) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %45 = "llvm.bitcast"(%44) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %46 = "func.call"(%45) {callee = @_ZNSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %47 = "func.call"(%46, %arg1) {callee = @_ZNKSt8__detail9_IdentityclIRiEEOT_S4_} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>
            "polygeist.trivialuse"(%47) : (!llvm.ptr<i32>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %36 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%36) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %45 = "llvm.bitcast"(%44) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %46 = "func.call"(%45, %47) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERKi} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<i32>) -> i64
            "llvm.store"(%46, %24) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %37 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%37) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %45 = "func.call"(%arg0, %47, %44) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexERKim} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, i64) -> i64
            "llvm.store"(%45, %21) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %38 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%38) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%21) : (!llvm.ptr<i64>) -> i64
            %45 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %46 = "func.call"(%arg0, %44, %47, %45) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE12_M_find_nodeEmRKim} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i32>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%46, %19) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %39 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%39) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %45 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %46 = "llvm.icmp"(%44, %45) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i1
            "scf.if"(%46) ({
              %47 = "memref.load"(%32) : (memref<i1>) -> i1
              "scf.if"(%47) ({
                "scf.execute_region"() ({
                  %48 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  "func.call"(%15, %48) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
                  %49 = "llvm.load"(%15) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                  "llvm.store"(%49, %13) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                  %50 = "arith.constant"() {value = 0 : i8} : () -> i8
                  "llvm.store"(%50, %10) : (i8, !llvm.ptr<i8>) -> ()
                  %51 = "func.call"(%13, %10) {callee = @_ZSt9make_pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS4_IT0_E6__typeEEOS5_OS8_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
                  "llvm.store"(%51, %8) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
                  "func.call"(%17, %8) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
                  %52 = "llvm.load"(%17) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
                  "memref.store"(%52, %34) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
                  %53 = "arith.constant"() {value = false} : () -> i1
                  "memref.store"(%53, %32) : (i1, memref<i1>) -> ()
                  "memref.store"(%53, %33) : (i1, memref<i1>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %40 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%40) ({
      "scf.execute_region"() ({
        %43 = "func.call"(%arg2, %arg1) {callee = @_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEclIiEEPS2_OT_} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
        "llvm.store"(%43, %19) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %41 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%41) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%21) : (!llvm.ptr<i64>) -> i64
            %45 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %46 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %47 = "llvm.load"(%27) : (!llvm.ptr<i64>) -> i64
            %48 = "func.call"(%arg0, %44, %45, %46, %47) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS1_10_Hash_nodeIiLb0EEEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "llvm.store"(%48, %4) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %49 = "arith.constant"() {value = 1 : i8} : () -> i8
            "llvm.store"(%49, %1) : (i8, !llvm.ptr<i8>) -> ()
            "func.call"(%6, %4, %1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1IS2_bLb1EEEOT_OT0_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> ()
            %50 = "llvm.load"(%6) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "memref.store"(%50, %34) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %51 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%51, %32) : (i1, memref<i1>) -> ()
            "memref.store"(%51, %33) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %42 = "memref.load"(%34) : (memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
    "func.return"(%42) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.struct<"struct.std::integral_constant", (i8)>, i64) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_insertIiNS1_10_AllocNodeISaINS1_10_Hash_nodeIiLb0EEEEEEEESt4pairINS1_14_Node_iteratorIiLb1ELb0EEEbEOT_RKT0_St17integral_constantIbLb1EEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt17integral_constantIbLb1EEC1EOS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %2 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "llvm.getelementptr"(%arg0, %3) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%2, %5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail19_Node_iterator_baseIiLb0EEC1EPNS_10_Hash_nodeIiLb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZN9__gnu_cxx16__aligned_bufferIiE7_M_addrEv} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i8>
            %8 = "llvm.bitcast"(%7) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
            "memref.store"(%8, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %9 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%9, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%9, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx16__aligned_bufferIiE6_M_ptrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
    %2 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "llvm.getelementptr"(%arg0, %3) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>
    "llvm.store"(%2, %5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator_base.19", (ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node.20", (struct<"struct.std::__detail::_Hash_node_value_base.21", (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>)>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail19_Node_iterator_baseISt4pairIKiiELb0EEC1EPNS_10_Hash_nodeIS3_Lb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZN9__gnu_cxx16__aligned_bufferISt4pairIKiiEE7_M_addrEv} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>) -> !llvm.ptr<i8>
            %8 = "llvm.bitcast"(%7) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
            "memref.store"(%8, %3) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> ()
            %9 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%9, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%9, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::pair", (i32, i32)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>) -> !llvm.ptr<struct<"struct.std::pair", (i32, i32)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx16__aligned_bufferISt4pairIKiiEE6_M_ptrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg2: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, %arg3: !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, %arg4: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg5: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg6: !llvm.ptr<struct<"class.std::allocator.25", (i8)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
    %4 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
    "func.call"(%4, %arg5, %arg1, %arg2, %arg3, %arg4) {callee = @_ZNSt8__detail15_Hashtable_baseIiiNS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb1ELb1EEEEC1ERKS1_RKS5_RKS6_RKS7_RKS3_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> ()
    %5 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Map_base", (i8)>>
    %6 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Insert", (i8)>>
    %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Rehash_base", (i8)>>
    %8 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Equality", (i8)>>
    %9 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
    "func.call"(%3, %arg6) {callee = @_ZNSaINSt8__detail10_Hash_nodeIiLb0EEEEC1IiEERKSaIT_E} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> ()
    %10 = "llvm.load"(%3) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.struct<"class.std::allocator", (i8)>
    "llvm.store"(%10, %1) : (!llvm.struct<"class.std::allocator", (i8)>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
    "func.call"(%9, %1) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEEC1IS3_EEOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
    %11 = "arith.constant"() {value = 0 : i32} : () -> i32
    %12 = "arith.constant"() {value = 5 : i32} : () -> i32
    %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 5>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    %14 = "arith.constant"() {value = 0 : i32} : () -> i32
    %15 = "arith.constant"() {value = 0 : i32} : () -> i32
    %16 = "llvm.getelementptr"(%arg0, %14) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%13, %16) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    %17 = "arith.constant"() {value = 0 : i32} : () -> i32
    %18 = "arith.constant"() {value = 0 : i32} : () -> i32
    %19 = "llvm.getelementptr"(%arg0, %17) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %20 = "llvm.load"(%16) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "llvm.store"(%20, %19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    %21 = "arith.constant"() {value = 1 : i32} : () -> i32
    %22 = "arith.constant"() {value = 1 : i64} : () -> i64
    %23 = "arith.constant"() {value = 0 : i32} : () -> i32
    %24 = "arith.constant"() {value = 1 : i32} : () -> i32
    %25 = "llvm.getelementptr"(%arg0, %23) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
    "llvm.store"(%22, %25) : (i64, !llvm.ptr<i64>) -> ()
    %26 = "arith.constant"() {value = 0 : i32} : () -> i32
    %27 = "arith.constant"() {value = 1 : i32} : () -> i32
    %28 = "llvm.getelementptr"(%arg0, %26) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
    %29 = "llvm.load"(%25) : (!llvm.ptr<i64>) -> i64
    "llvm.store"(%29, %28) : (i64, !llvm.ptr<i64>) -> ()
    %30 = "arith.constant"() {value = 0 : i32} : () -> i32
    %31 = "arith.constant"() {value = 2 : i32} : () -> i32
    %32 = "llvm.getelementptr"(%arg0, %30) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
    "func.call"(%32) {callee = @_ZNSt8__detail15_Hash_node_baseC1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> ()
    %33 = "arith.constant"() {value = 0 : i32} : () -> i32
    %34 = "arith.constant"() {value = 0 : i64} : () -> i64
    %35 = "arith.constant"() {value = 0 : i32} : () -> i32
    %36 = "arith.constant"() {value = 3 : i32} : () -> i32
    %37 = "llvm.getelementptr"(%arg0, %35) {rawConstantIndices = array<i32: -2147483648, 3>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
    "llvm.store"(%34, %37) : (i64, !llvm.ptr<i64>) -> ()
    %38 = "arith.constant"() {value = 0 : i32} : () -> i32
    %39 = "arith.constant"() {value = 3 : i32} : () -> i32
    %40 = "llvm.getelementptr"(%arg0, %38) {rawConstantIndices = array<i32: -2147483648, 3>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
    %41 = "llvm.load"(%37) : (!llvm.ptr<i64>) -> i64
    "llvm.store"(%41, %40) : (i64, !llvm.ptr<i64>) -> ()
    %42 = "arith.constant"() {value = 0 : i32} : () -> i32
    %43 = "arith.constant"() {value = 4 : i32} : () -> i32
    %44 = "llvm.getelementptr"(%arg0, %42) {rawConstantIndices = array<i32: -2147483648, 4>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>
    %45 = "arith.constant"() {value = 1.000000e+00 : f64} : () -> f64
    %46 = "arith.constant"() {value = 1.000000e+00 : f32} : () -> f32
    "func.call"(%44, %46) {callee = @_ZNSt8__detail20_Prime_rehash_policyC1Ef} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, f32) -> ()
    %47 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
    %48 = "arith.constant"() {value = 0 : i32} : () -> i32
    %49 = "arith.constant"() {value = 5 : i32} : () -> i32
    %50 = "llvm.getelementptr"(%arg0, %48) {rawConstantIndices = array<i32: -2147483648, 5>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "llvm.store"(%47, %50) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
    %51 = "arith.constant"() {value = 0 : i32} : () -> i32
    %52 = "arith.constant"() {value = 5 : i32} : () -> i32
    %53 = "llvm.getelementptr"(%arg0, %51) {rawConstantIndices = array<i32: -2147483648, 5>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    %54 = "llvm.load"(%50) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
    "llvm.store"(%54, %53) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
    %55 = "arith.constant"() {value = true} : () -> i1
    %56 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %57 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%55, %57) : (i1, memref<i1>) -> ()
    "memref.store"(%55, %56) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEEC1ERKS6_RKS7_RKS8_RKS4_RKS2_RKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<i32>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<ptr<i32>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg0, %7) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg1, %5) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %8 = "arith.constant"() {value = true} : () -> i1
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%8, %10) : (i1, memref<i1>) -> ()
    "memref.store"(%8, %9) : (i1, memref<i1>) -> ()
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %12 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%12, %11) : (i64, memref<i64>) -> ()
    %13 = "memref.load"(%9) : (memref<i1>) -> i1
    "scf.if"(%13) ({
      "scf.execute_region"() ({
        %15 = "memref.load"(%9) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            %16 = "llvm.load"(%7) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %17 = "llvm.load"(%5) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %18 = "func.call"(%7) {callee = @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_} : (!llvm.ptr<ptr<i32>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>
            "llvm.store"(%18, %1) : (!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
            %19 = "llvm.bitcast"(%1) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>
            %20 = "llvm.bitcast"(%19) : (!llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
            %21 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
            %22 = "llvm.icmp"(%20, %21) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> i1
            %23 = "arith.select"(%22, %20, %21) : (i1, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
            "func.call"(%3, %23) {callee = @_ZNSt20forward_iterator_tagC1EOS_} : (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> ()
            %24 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> !llvm.struct<"struct.std::forward_iterator_tag", (i8)>
            %25 = "func.call"(%16, %17, %24) {callee = @_ZNSt8__detail13__distance_fwIPKiEENSt15iterator_traitsIT_E15difference_typeES4_S4_St20forward_iterator_tag} : (!llvm.ptr<i32>, !llvm.ptr<i32>, !llvm.struct<"struct.std::forward_iterator_tag", (i8)>) -> i64
            "memref.store"(%25, %11) : (i64, memref<i64>) -> ()
            %26 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%26, %9) : (i1, memref<i1>) -> ()
            "memref.store"(%26, %10) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %14 = "memref.load"(%11) : (memref<i64>) -> i64
    "func.return"(%14) : (i64) -> ()
  }) {function_type = (!llvm.ptr<i32>, !llvm.ptr<i32>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail13__distance_fwIPKiEENSt15iterator_traitsIT_E15difference_typeES4_S4_"} : () -> ()
  "func.func"() ({
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i64) -> i64, llvm.linkage = #llvm.linkage<external>, sym_name = "_ZNKSt8__detail20_Prime_rehash_policy11_M_next_bktEm", sym_visibility = "private"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<i64>, %arg1: !llvm.ptr<i64>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i64>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "llvm.load"(%arg0) : (!llvm.ptr<i64>) -> i64
            %9 = "llvm.load"(%arg1) : (!llvm.ptr<i64>) -> i64
            %10 = "arith.cmpi"(%8, %9) {predicate = 2 : i64} : (i64, i64) -> i1
            %11 = "arith.extui"(%10) : (i1) -> i8
            %12 = "arith.constant"() {value = 0 : i8} : () -> i8
            %13 = "arith.cmpi"(%11, %12) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%13) ({
              %14 = "memref.load"(%1) : (memref<i1>) -> i1
              "scf.if"(%14) ({
                "scf.execute_region"() ({
                  "memref.store"(%arg1, %3) : (!llvm.ptr<i64>, memref<!llvm.ptr<i64>>) -> ()
                  %15 = "arith.constant"() {value = false} : () -> i1
                  "memref.store"(%15, %1) : (i1, memref<i1>) -> ()
                  "memref.store"(%15, %2) : (i1, memref<i1>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            "memref.store"(%arg0, %3) : (!llvm.ptr<i64>, memref<!llvm.ptr<i64>>) -> ()
            %8 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%8, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%8, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<!llvm.ptr<i64>>) -> !llvm.ptr<i64>
    "func.return"(%6) : (!llvm.ptr<i64>) -> ()
  }) {function_type = (!llvm.ptr<i64>, !llvm.ptr<i64>) -> !llvm.ptr<i64>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt3maxImERKT_S2_S2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, %arg1: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %7 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%7, %6) : (i64, memref<i64>) -> ()
    %8 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %12 = "arith.sitofp"(%11) : (i64) -> f80
            %13 = "arith.constant"() {value = 0 : i32} : () -> i32
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "llvm.getelementptr"(%arg0, %13) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i32) -> !llvm.ptr<f32>
            %16 = "llvm.load"(%15) : (!llvm.ptr<f32>) -> f32
            %17 = "arith.extf"(%16) : (f32) -> f80
            %18 = "arith.divf"(%12, %17) : (f80, f80) -> f80
            %19 = "arith.truncf"(%18) : (f80) -> f64
            %20 = "func.call"(%19) {callee = @llvm.ceil.f64} : (f64) -> f64
            %21 = "arith.fptosi"(%20) : (f64) -> i64
            "memref.store"(%21, %6) : (i64, memref<i64>) -> ()
            %22 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%22, %4) : (i1, memref<i1>) -> ()
            "memref.store"(%22, %5) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%6) : (memref<i64>) -> i64
    "func.return"(%9) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i64) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail20_Prime_rehash_policy19_M_bkt_for_elementsEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %7 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %12 = "arith.constant"() {value = 1 : i32} : () -> i32
            %13 = "arith.constant"() {value = 1 : i64} : () -> i64
            %14 = "arith.cmpi"(%11, %13) {predicate = 0 : i64} : (i64, i64) -> i1
            %15 = "arith.extui"(%14) : (i1) -> i8
            %16 = "arith.extui"(%15) : (i8) -> i64
            %17 = "arith.constant"() {value = 0 : i64} : () -> i64
            %18 = "arith.cmpi"(%16, %17) {predicate = 1 : i64} : (i64, i64) -> i1
            %19 = "arith.extui"(%18) : (i1) -> i8
            %20 = "arith.constant"() {value = 0 : i8} : () -> i8
            %21 = "arith.cmpi"(%19, %20) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%21) ({
              %22 = "memref.load"(%4) : (memref<i1>) -> i1
              "scf.if"(%22) ({
                "scf.execute_region"() ({
                  %24 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %25 = "arith.constant"() {value = 5 : i32} : () -> i32
                  %26 = "llvm.getelementptr"(%arg0, %24) {rawConstantIndices = array<i32: -2147483648, 5>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %27 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "llvm.store"(%27, %26) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              %23 = "memref.load"(%4) : (memref<i1>) -> i1
              "scf.if"(%23) ({
                "scf.execute_region"() ({
                  %24 = "memref.load"(%4) : (memref<i1>) -> i1
                  "scf.if"(%24) ({
                    "scf.execute_region"() ({
                      %25 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %26 = "arith.constant"() {value = 5 : i32} : () -> i32
                      %27 = "llvm.getelementptr"(%arg0, %25) {rawConstantIndices = array<i32: -2147483648, 5>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                      "memref.store"(%27, %6) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
                      %28 = "arith.constant"() {value = false} : () -> i1
                      "memref.store"(%28, %4) : (i1, memref<i1>) -> ()
                      "memref.store"(%28, %5) : (i1, memref<i1>) -> ()
                      "scf.yield"() : () -> ()
                    }) : () -> ()
                    "scf.yield"() : () -> ()
                  }, {
                  }) : (i1) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %12 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %13 = "func.call"(%11, %12) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE19_M_allocate_bucketsEm} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "memref.store"(%13, %6) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            %14 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%14, %4) : (i1, memref<i1>) -> ()
            "memref.store"(%14, %5) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%6) : (memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "func.return"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE19_M_allocate_bucketsEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>
    %12 = "arith.constant"() {value = true} : () -> i1
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %14 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%12, %14) : (i1, memref<i1>) -> ()
    "memref.store"(%12, %13) : (i1, memref<i1>) -> ()
    %15 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %16 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%16) ({
      "scf.execute_region"() ({
        %20 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%20) ({
          "scf.execute_region"() ({
            %21 = "func.call"(%arg0) {callee = @_ZNSt8__detail12_Insert_baseIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEEE20_M_conjure_hashtableEv} : (!llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>) -> !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>
            "polygeist.trivialuse"(%21) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %17 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%17) ({
      "scf.execute_region"() ({
        %20 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%20) ({
          "scf.execute_region"() ({
            %21 = "llvm.bitcast"(%21) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %22 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %23 = "llvm.icmp"(%21, %22) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> i1
            %24 = "arith.select"(%23, %21, %22) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            "func.call"(%11, %24) {callee = @_ZNSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEC1ERNS_16_Hashtable_allocIS3_EE} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %18 = "memref.load"(%13) : (memref<i1>) -> i1
    "scf.if"(%18) ({
      "scf.execute_region"() ({
        %20 = "memref.load"(%13) : (memref<i1>) -> i1
        "scf.if"(%20) ({
          "scf.execute_region"() ({
            %21 = "llvm.bitcast"(%5) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.ptr<i8>
            %22 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::integral_constant", (i8)>} : () -> index
            %23 = "arith.constant"() {value = 0 : i8} : () -> i8
            %24 = "arith.index_cast"(%22) : (index) -> i64
            %25 = "arith.constant"() {value = false} : () -> i1
            "llvm.intr.memset"(%21, %23, %24, %25) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
            %26 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.struct<"struct.std::integral_constant", (i8)>
            "llvm.store"(%26, %3) : (!llvm.struct<"struct.std::integral_constant", (i8)>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
            "func.call"(%7, %3) {callee = @_ZNSt17integral_constantIbLb1EEC1EOS0_} : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
            %27 = "arith.constant"() {value = 1 : i32} : () -> i32
            %28 = "arith.constant"() {value = 1 : i64} : () -> i64
            %29 = "llvm.load"(%7) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.struct<"struct.std::integral_constant", (i8)>
            %30 = "func.call"(%21, %arg1, %11, %29, %28) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_insertIRKiNS1_10_AllocNodeISaINS1_10_Hash_nodeIiLb0EEEEEEEESt4pairINS1_14_Node_iteratorIiLb1ELb0EEEbEOT_RKT0_St17integral_constantIbLb1EEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.struct<"struct.std::integral_constant", (i8)>, i64) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "llvm.store"(%30, %1) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            "func.call"(%9, %1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %31 = "llvm.load"(%9) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "memref.store"(%31, %15) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %32 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%32, %13) : (i1, memref<i1>) -> ()
            "memref.store"(%32, %14) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %19 = "memref.load"(%15) : (memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
    "func.return"(%19) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Insert_base", (i8)>>, !llvm.ptr<i32>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail12_Insert_baseIiiSaIiENS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_20_Prime_rehash_policyENS_17_Hashtable_traitsILb0ELb1ELb1EEEE6insertERKi"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%4, %3) : (i64, memref<i64>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "arith.constant"() {value = 1 : i32} : () -> i32
            %10 = "llvm.getelementptr"(%arg0, %8) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>, i32) -> !llvm.ptr<i64>
            %11 = "llvm.load"(%10) : (!llvm.ptr<i64>) -> i64
            "memref.store"(%11, %3) : (i64, memref<i64>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i64>) -> i64
    "func.return"(%6) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::initializer_list", (ptr<i32>, i64)>>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt16initializer_listIiE4sizeEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            "memref.store"(%arg1, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %7 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%7, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%7, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail9_IdentityclIRiEEOT_S4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
            %11 = "func.call"(%10) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE6_S_getERS2_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%4, %3) : (i64, memref<i64>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %8 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%8) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%6) ({
      "scf.execute_region"() ({
        %8 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%8) ({
          "scf.execute_region"() ({
            %9 = "func.call"(%arg0) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
            %10 = "llvm.load"(%arg1) : (!llvm.ptr<i32>) -> i32
            %11 = "func.call"(%9, %10) {callee = @_ZNKSt4hashIiEclEi} : (!llvm.ptr<struct<"struct.std::hash", (i8)>>, i32) -> i64
            "memref.store"(%11, %3) : (i64, memref<i64>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %7 = "memref.load"(%3) : (memref<i64>) -> i64
    "func.return"(%7) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<i32>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERKi"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<i32>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %7 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%7, %6) : (i64, memref<i64>) -> ()
    %8 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %12 = "llvm.bitcast"(%11) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %13 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "arith.constant"() {value = 1 : i32} : () -> i32
            %16 = "llvm.getelementptr"(%arg0, %14) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
            %17 = "llvm.load"(%16) : (!llvm.ptr<i64>) -> i64
            %18 = "func.call"(%12, %arg1, %13, %17) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERKimm} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<i32>, i64, i64) -> i64
            "memref.store"(%18, %6) : (i64, memref<i64>) -> ()
            %19 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%19, %4) : (i1, memref<i1>) -> ()
            "memref.store"(%19, %5) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%6) : (memref<i64>) -> i64
    "func.return"(%9) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, i64) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexERKim"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64, %arg2: !llvm.ptr<i32>, %arg3: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = 1 : i64} : () -> i64
    %6 = "llvm.alloca"(%5) : (i64) -> !llvm.ptr<i64>
    %7 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%7, %6) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %6) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg3, %3) : (i64, !llvm.ptr<i64>) -> ()
    %8 = "arith.constant"() {value = true} : () -> i1
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%8, %10) : (i1, memref<i1>) -> ()
    "memref.store"(%8, %9) : (i1, memref<i1>) -> ()
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %12 = "memref.load"(%9) : (memref<i1>) -> i1
    "scf.if"(%12) ({
      "scf.execute_region"() ({
        %16 = "memref.load"(%9) : (memref<i1>) -> i1
        "scf.if"(%16) ({
          "scf.execute_region"() ({
            %17 = "llvm.load"(%6) : (!llvm.ptr<i64>) -> i64
            %18 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %19 = "func.call"(%arg0, %17, %arg2, %18) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE19_M_find_before_nodeEmRKim} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i32>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            "llvm.store"(%19, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %13 = "memref.load"(%9) : (memref<i1>) -> i1
    "scf.if"(%13) ({
      "scf.execute_region"() ({
        %16 = "memref.load"(%9) : (memref<i1>) -> i1
        "scf.if"(%16) ({
          "scf.execute_region"() ({
            %17 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %18 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %19 = "llvm.icmp"(%17, %18) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
            "scf.if"(%19) ({
              %20 = "memref.load"(%9) : (memref<i1>) -> i1
              "scf.if"(%20) ({
                "scf.execute_region"() ({
                  %21 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %22 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %23 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %24 = "llvm.getelementptr"(%21, %22) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %25 = "llvm.load"(%24) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %26 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %27 = "llvm.bitcast"(%25) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<i8>
                  %28 = "llvm.getelementptr"(%27, %26) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
                  %29 = "llvm.bitcast"(%28) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                  %30 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %31 = "llvm.bitcast"(%29) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i8>
                  %32 = "llvm.getelementptr"(%31, %30) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
                  %33 = "llvm.bitcast"(%32) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  "memref.store"(%33, %11) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                  %34 = "arith.constant"() {value = false} : () -> i1
                  "memref.store"(%34, %9) : (i1, memref<i1>) -> ()
                  "memref.store"(%34, %10) : (i1, memref<i1>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %14 = "memref.load"(%9) : (memref<i1>) -> i1
    "scf.if"(%14) ({
      "scf.execute_region"() ({
        %16 = "memref.load"(%9) : (memref<i1>) -> i1
        "scf.if"(%16) ({
          "scf.execute_region"() ({
            %17 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%17, %11) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %9) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %10) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %15 = "memref.load"(%11) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%15) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i32>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE12_M_find_nodeEmRKim"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, %arg1: !llvm.ptr<i8>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %10 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %15 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %15 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%12) ({
      "scf.execute_region"() ({
        %15 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %13 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%13) ({
      "scf.execute_region"() ({
        %15 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            "func.call"(%3, %arg0, %arg1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1IS2_bLb1EEEOT_OT0_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> ()
            %16 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "llvm.store"(%16, %1) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %17 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "memref.store"(%17, %9) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %14 = "memref.load"(%9) : (memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
    "func.return"(%14) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt9make_pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS4_IT0_E6__typeEEOS5_OS8_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>>
            %10 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %11 = "func.call"(%10, %arg1) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE16_M_allocate_nodeIJiEEEPS2_DpOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEclIiEEPS2_OT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, %arg2: !llvm.ptr<i8>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.ptr<struct<"class.std::__pair_base.29", (i8)>>
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "arith.constant"() {value = 0 : i32} : () -> i32
    %3 = "llvm.getelementptr"(%arg0, %1) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    "func.call"(%3, %arg1) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
    %4 = "llvm.load"(%arg2) : (!llvm.ptr<i8>) -> i8
    %5 = "arith.constant"() {value = 0 : i32} : () -> i32
    %6 = "arith.constant"() {value = 1 : i32} : () -> i32
    %7 = "llvm.getelementptr"(%arg0, %5) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, i32) -> !llvm.ptr<i8>
    "llvm.store"(%4, %7) : (i8, !llvm.ptr<i8>) -> ()
    %8 = "arith.constant"() {value = true} : () -> i1
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%8, %10) : (i1, memref<i1>) -> ()
    "memref.store"(%8, %9) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1IS2_bLb1EEEOT_OT0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64, %arg2: i64, %arg3: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, %arg4: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<i64>
    %14 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%14, %13) : (i64, !llvm.ptr<i64>) -> ()
    %15 = "arith.constant"() {value = 1 : i64} : () -> i64
    %16 = "llvm.alloca"(%15) : (i64) -> !llvm.ptr<i64>
    %17 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%17, %16) : (i64, !llvm.ptr<i64>) -> ()
    %18 = "arith.constant"() {value = 1 : i64} : () -> i64
    %19 = "llvm.alloca"(%18) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %20 = "arith.constant"() {value = 1 : i64} : () -> i64
    %21 = "llvm.alloca"(%20) : (i64) -> !llvm.ptr<i64>
    %22 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%22, %21) : (i64, !llvm.ptr<i64>) -> ()
    %23 = "arith.constant"() {value = 1 : i64} : () -> i64
    %24 = "llvm.alloca"(%23) : (i64) -> !llvm.ptr<i64>
    %25 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%25, %24) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %24) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %21) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg3, %19) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    "llvm.store"(%arg4, %16) : (i64, !llvm.ptr<i64>) -> ()
    %26 = "arith.constant"() {value = true} : () -> i1
    %27 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %28 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%26, %28) : (i1, memref<i1>) -> ()
    "memref.store"(%26, %27) : (i1, memref<i1>) -> ()
    %29 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %30 = "memref.load"(%27) : (memref<i1>) -> i1
    "scf.if"(%30) ({
      "scf.execute_region"() ({
        %34 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%34) ({
          "scf.execute_region"() ({
            %35 = "arith.constant"() {value = 0 : i32} : () -> i32
            %36 = "arith.constant"() {value = 4 : i32} : () -> i32
            %37 = "llvm.getelementptr"(%arg0, %35) {rawConstantIndices = array<i32: -2147483648, 4>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>
            %38 = "func.call"(%37) {callee = @_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>) -> i64
            "llvm.store"(%38, %13) : (i64, !llvm.ptr<i64>) -> ()
            "polygeist.trivialuse"(%13) : (!llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %31 = "memref.load"(%27) : (memref<i1>) -> i1
    "scf.if"(%31) ({
      "scf.execute_region"() ({
        %34 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%34) ({
          "scf.execute_region"() ({
            %35 = "arith.constant"() {value = 0 : i32} : () -> i32
            %36 = "arith.constant"() {value = 4 : i32} : () -> i32
            %37 = "llvm.getelementptr"(%arg0, %35) {rawConstantIndices = array<i32: -2147483648, 4>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>
            %38 = "arith.constant"() {value = 0 : i32} : () -> i32
            %39 = "arith.constant"() {value = 1 : i32} : () -> i32
            %40 = "llvm.getelementptr"(%arg0, %38) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
            %41 = "llvm.load"(%40) : (!llvm.ptr<i64>) -> i64
            %42 = "arith.constant"() {value = 0 : i32} : () -> i32
            %43 = "arith.constant"() {value = 3 : i32} : () -> i32
            %44 = "llvm.getelementptr"(%arg0, %42) {rawConstantIndices = array<i32: -2147483648, 3>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
            %45 = "llvm.load"(%44) : (!llvm.ptr<i64>) -> i64
            %46 = "llvm.load"(%16) : (!llvm.ptr<i64>) -> i64
            %47 = "func.call"(%37, %41, %45, %46) {callee = @_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i64, i64, i64) -> !llvm.struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>
            "llvm.store"(%47, %9) : (!llvm.struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>, !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> ()
            "func.call"(%11, %9) {callee = @_ZNSt4pairIbmEC1EOS0_} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> ()
            %48 = "llvm.load"(%11) : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> !llvm.struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>
            "llvm.store"(%48, %7) : (!llvm.struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>, !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %32 = "memref.load"(%27) : (memref<i1>) -> i1
    "scf.if"(%32) ({
      "scf.execute_region"() ({
        %34 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%34) ({
          "scf.execute_region"() ({
            %39 = "memref.load"(%27) : (memref<i1>) -> i1
            "scf.if"(%39) ({
              "scf.execute_region"() ({
                %40 = "arith.constant"() {value = 0 : i32} : () -> i32
                %41 = "arith.constant"() {value = 0 : i32} : () -> i32
                %42 = "llvm.getelementptr"(%7, %40) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, i32) -> !llvm.ptr<i8>
                %43 = "llvm.load"(%42) : (!llvm.ptr<i8>) -> i8
                %44 = "arith.constant"() {value = 0 : i8} : () -> i8
                %45 = "arith.cmpi"(%43, %44) {predicate = 1 : i64} : (i8, i8) -> i1
                "scf.if"(%45) ({
                  %46 = "memref.load"(%27) : (memref<i1>) -> i1
                  "scf.if"(%46) ({
                    "scf.execute_region"() ({
                      %48 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %49 = "arith.constant"() {value = 2 : i32} : () -> i32
                      %50 = "llvm.getelementptr"(%7, %48) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, i32) -> !llvm.ptr<i64>
                      %51 = "llvm.load"(%50) : (!llvm.ptr<i64>) -> i64
                      "func.call"(%arg0, %51, %13) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_rehashEmRKm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i64>) -> ()
                      "scf.yield"() : () -> ()
                    }) : () -> ()
                    "scf.yield"() : () -> ()
                  }, {
                  }) : (i1) -> ()
                  %47 = "memref.load"(%27) : (memref<i1>) -> i1
                  "scf.if"(%47) ({
                    "scf.execute_region"() ({
                      %48 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
                      %49 = "llvm.bitcast"(%48) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
                      %50 = "func.call"(%49) {callee = @_ZNSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
                      %51 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                      %52 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %53 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %54 = "llvm.getelementptr"(%51, %52) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                      %55 = "llvm.bitcast"(%54) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                      %56 = "func.call"(%55) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiE4_M_vEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
                      %57 = "func.call"(%50, %56) {callee = @_ZNKSt8__detail9_IdentityclIRiEEOT_S4_} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>
                      %58 = "llvm.load"(%21) : (!llvm.ptr<i64>) -> i64
                      %59 = "func.call"(%arg0, %57, %58) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexERKim} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, i64) -> i64
                      "llvm.store"(%59, %24) : (i64, !llvm.ptr<i64>) -> ()
                      "scf.yield"() : () -> ()
                    }) : () -> ()
                    "scf.yield"() : () -> ()
                  }, {
                  }) : (i1) -> ()
                  "scf.yield"() : () -> ()
                }, {
                }) : (i1) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %35 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%35) ({
          "scf.execute_region"() ({
            %39 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %40 = "llvm.bitcast"(%39) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %41 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %42 = "llvm.load"(%21) : (!llvm.ptr<i64>) -> i64
            "func.call"(%40, %41, %42) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIiLb0EEEm} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %36 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%36) ({
          "scf.execute_region"() ({
            %39 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %40 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "func.call"(%arg0, %39, %40) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE22_M_insert_bucket_beginEmPNS1_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %37 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%37) ({
          "scf.execute_region"() ({
            %39 = "arith.constant"() {value = 0 : i32} : () -> i32
            %40 = "arith.constant"() {value = 3 : i32} : () -> i32
            %41 = "llvm.getelementptr"(%arg0, %39) {rawConstantIndices = array<i32: -2147483648, 3>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
            %42 = "llvm.load"(%41) : (!llvm.ptr<i64>) -> i64
            %43 = "arith.constant"() {value = 1 : i64} : () -> i64
            %44 = "arith.addi"(%42, %43) : (i64, i64) -> i64
            "llvm.store"(%44, %41) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %38 = "memref.load"(%27) : (memref<i1>) -> i1
        "scf.if"(%38) ({
          "scf.execute_region"() ({
            %39 = "memref.load"(%27) : (memref<i1>) -> i1
            "scf.if"(%39) ({
              "scf.execute_region"() ({
                %40 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                "func.call"(%3, %40) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
                %41 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                "llvm.store"(%41, %1) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                "func.call"(%5, %1) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EOS1_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                %42 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                "memref.store"(%42, %29) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                %43 = "arith.constant"() {value = false} : () -> i1
                "memref.store"(%43, %27) : (i1, memref<i1>) -> ()
                "memref.store"(%43, %28) : (i1, memref<i1>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %33 = "memref.load"(%29) : (memref<!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
    "func.return"(%33) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS1_10_Hash_nodeIiLb0EEEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i8>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>, i32) -> !llvm.ptr<struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>>
            %10 = "llvm.bitcast"(%9) : (!llvm.ptr<struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>>) -> !llvm.ptr<i8>
            "memref.store"(%10, %3) : (!llvm.ptr<i8>, memref<!llvm.ptr<i8>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i8>>) -> !llvm.ptr<i8>
    "func.return"(%5) : (!llvm.ptr<i8>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i8>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx16__aligned_bufferIiE7_M_addrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i8>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>, i32) -> !llvm.ptr<struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>>
            %10 = "llvm.bitcast"(%9) : (!llvm.ptr<struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>>) -> !llvm.ptr<i8>
            "memref.store"(%10, %3) : (!llvm.ptr<i8>, memref<!llvm.ptr<i8>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i8>>) -> !llvm.ptr<i8>
    "func.return"(%5) : (!llvm.ptr<i8>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer.22", (struct<"union.std::aligned_storage<8, 4>::type", (array<8 x i8>)>)>>) -> !llvm.ptr<i8>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx16__aligned_bufferISt4pairIKiiEE7_M_addrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg2: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg3: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, %arg4: !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, %arg5: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
    "func.call"(%0, %arg1, %arg2, %arg3, %arg4) {callee = @_ZNSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC1ERKS1_RKS3_RKS4_RKS5_} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>) -> ()
    %1 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>
    "func.call"(%1, %arg5) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EEC1IRKS2_EEOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail15_Hashtable_baseIiiNS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb1ELb1EEEEC1ERKS1_RKS5_RKS6_RKS7_RKS3_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::allocator", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeIiLb0EEEELb1EEC1IS3_EEOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEEC1IS3_EEOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::allocator.25", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
    "func.call"(%0) {callee = @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEEC1Ev} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<struct<"class.std::allocator.25", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSaINSt8__detail10_Hash_nodeIiLb0EEEEC1IiEERKSaIT_E"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>):
    %0 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "arith.constant"() {value = 0 : i32} : () -> i32
    %3 = "llvm.getelementptr"(%arg0, %1) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "llvm.store"(%0, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail15_Hash_node_baseC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, %arg1: f32):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<f32>
    %2 = "llvm.mlir.undef"() : () -> f32
    "llvm.store"(%2, %1) : (f32, !llvm.ptr<f32>) -> ()
    "llvm.store"(%arg1, %1) : (f32, !llvm.ptr<f32>) -> ()
    %3 = "llvm.load"(%1) : (!llvm.ptr<f32>) -> f32
    %4 = "arith.constant"() {value = 0 : i32} : () -> i32
    %5 = "arith.constant"() {value = 0 : i32} : () -> i32
    %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i32) -> !llvm.ptr<f32>
    "llvm.store"(%3, %6) : (f32, !llvm.ptr<f32>) -> ()
    %7 = "arith.constant"() {value = 0 : i32} : () -> i32
    %8 = "arith.constant"() {value = 0 : i64} : () -> i64
    %9 = "arith.constant"() {value = 0 : i32} : () -> i32
    %10 = "arith.constant"() {value = 2 : i32} : () -> i32
    %11 = "llvm.getelementptr"(%arg0, %9) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i32) -> !llvm.ptr<i64>
    "llvm.store"(%8, %11) : (i64, !llvm.ptr<i64>) -> ()
    %12 = "arith.constant"() {value = true} : () -> i1
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %14 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%12, %14) : (i1, memref<i1>) -> ()
    "memref.store"(%12, %13) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, f32) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail20_Prime_rehash_policyC1Ef"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<i32>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.struct<"struct.std::forward_iterator_tag", (i8)>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<ptr<i32>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg0, %5) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg1, %3) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg2, %1) : (!llvm.struct<"struct.std::forward_iterator_tag", (i8)>, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %10 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%10, %9) : (i64, memref<i64>) -> ()
    %11 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "llvm.load"(%5) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %15 = "llvm.load"(%3) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %16 = "func.call"(%14, %15) {callee = @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_} : (!llvm.ptr<i32>, !llvm.ptr<i32>) -> i64
            "memref.store"(%16, %9) : (i64, memref<i64>) -> ()
            %17 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%17, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%17, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%9) : (memref<i64>) -> i64
    "func.return"(%12) : (i64) -> ()
  }) {function_type = (!llvm.ptr<i32>, !llvm.ptr<i32>, !llvm.struct<"struct.std::forward_iterator_tag", (i8)>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail13__distance_fwIPKiEENSt15iterator_traitsIT_E15difference_typeES4_S4_St20forward_iterator_tag"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt18input_iterator_tagC1EOS_} : (!llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt20forward_iterator_tagC1EOS_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<ptr<i32>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>>
    %10 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.bitcast"(%3) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.ptr<i8>
            %14 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>} : () -> index
            %15 = "arith.constant"() {value = 0 : i8} : () -> i8
            %16 = "arith.index_cast"(%14) : (index) -> i64
            %17 = "arith.constant"() {value = false} : () -> i1
            "llvm.intr.memset"(%13, %15, %16, %17) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
            %18 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>
            "llvm.store"(%18, %1) : (!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt26random_access_iterator_tagC1EOS_} : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
            %19 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>
            "memref.store"(%19, %9) : (!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>, memref<!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
            %20 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%20, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%20, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%9) : (memref<!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>
    "func.return"(%11) : (!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>) -> ()
  }) {function_type = (!llvm.ptr<ptr<i32>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_"} : () -> ()
  "func.func"() ({
  }) {function_type = (f64) -> f64, sym_name = "llvm.ceil.f64", sym_visibility = "private"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, %arg1: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"class.std::allocator.34", (i8)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<i64>
    %8 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%8, %7) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %7) : (i64, !llvm.ptr<i64>) -> ()
    %9 = "arith.constant"() {value = true} : () -> i1
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%9, %11) : (i1, memref<i1>) -> ()
    "memref.store"(%9, %10) : (i1, memref<i1>) -> ()
    %12 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %13 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%13) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "func.call"(%arg0) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            "func.call"(%5, %20) {callee = @_ZNSaIPNSt8__detail15_Hash_node_baseEEC1INS_10_Hash_nodeIiLb0EEEEERKSaIT_E} : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %14 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%14) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "llvm.load"(%7) : (!llvm.ptr<i64>) -> i64
            %21 = "func.call"(%5, %20) {callee = @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m} : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "llvm.store"(%21, %3) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %15 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%15) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "llvm.load"(%3) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %21 = "func.call"(%20) {callee = @_ZSt12__to_addressIPNSt8__detail15_Hash_node_baseEEPT_S4_} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "llvm.store"(%21, %1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %16 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%16) ({
      "scf.execute_region"() ({
        %19 = "llvm.load"(%1) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %20 = "llvm.bitcast"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<i8>
        %21 = "arith.constant"() {value = 0 : i32} : () -> i32
        %22 = "llvm.load"(%7) : (!llvm.ptr<i64>) -> i64
        %23 = "polygeist.typeSize"() {source = !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>} : () -> index
        %24 = "arith.index_cast"(%23) : (index) -> i64
        %25 = "arith.muli"(%22, %24) : (i64, i64) -> i64
        %26 = "arith.constant"() {value = false} : () -> i1
        %27 = "arith.trunci"(%21) : (i32) -> i8
        "llvm.intr.memset"(%20, %27, %25, %26) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %17 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%17) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "llvm.load"(%1) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "memref.store"(%20, %12) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            %21 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%21, %10) : (i1, memref<i1>) -> ()
            "memref.store"(%21, %11) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %18 = "memref.load"(%12) : (memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "func.return"(%18) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE19_M_allocate_bucketsEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, %arg3: !llvm.struct<"struct.std::integral_constant", (i8)>, %arg4: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i8>
    %2 = "llvm.mlir.undef"() : () -> i8
    "llvm.store"(%2, %1) : (i8, !llvm.ptr<i8>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %5 = "arith.constant"() {value = 1 : i64} : () -> i64
    %6 = "llvm.alloca"(%5) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %7 = "arith.constant"() {value = 1 : i64} : () -> i64
    %8 = "llvm.alloca"(%7) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %9 = "arith.constant"() {value = 1 : i64} : () -> i64
    %10 = "llvm.alloca"(%9) : (i64) -> !llvm.ptr<i8>
    %11 = "llvm.mlir.undef"() : () -> i8
    "llvm.store"(%11, %10) : (i8, !llvm.ptr<i8>) -> ()
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %14 = "arith.constant"() {value = 1 : i64} : () -> i64
    %15 = "llvm.alloca"(%14) : (i64) -> !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>
    %16 = "arith.constant"() {value = 1 : i64} : () -> i64
    %17 = "llvm.alloca"(%16) : (i64) -> !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %18 = "arith.constant"() {value = 1 : i64} : () -> i64
    %19 = "llvm.alloca"(%18) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %20 = "arith.constant"() {value = 1 : i64} : () -> i64
    %21 = "llvm.alloca"(%20) : (i64) -> !llvm.ptr<i64>
    %22 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%22, %21) : (i64, !llvm.ptr<i64>) -> ()
    %23 = "arith.constant"() {value = 1 : i64} : () -> i64
    %24 = "llvm.alloca"(%23) : (i64) -> !llvm.ptr<i64>
    %25 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%25, %24) : (i64, !llvm.ptr<i64>) -> ()
    %26 = "arith.constant"() {value = 1 : i64} : () -> i64
    %27 = "llvm.alloca"(%26) : (i64) -> !llvm.ptr<i64>
    %28 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%28, %27) : (i64, !llvm.ptr<i64>) -> ()
    %29 = "arith.constant"() {value = 1 : i64} : () -> i64
    %30 = "llvm.alloca"(%29) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    "llvm.store"(%arg3, %30) : (!llvm.struct<"struct.std::integral_constant", (i8)>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
    "llvm.store"(%arg4, %27) : (i64, !llvm.ptr<i64>) -> ()
    %31 = "arith.constant"() {value = true} : () -> i1
    %32 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %33 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%31, %33) : (i1, memref<i1>) -> ()
    "memref.store"(%31, %32) : (i1, memref<i1>) -> ()
    %34 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>
    %35 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%35) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %45 = "llvm.bitcast"(%44) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %46 = "func.call"(%45) {callee = @_ZNSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %47 = "func.call"(%46, %arg1) {callee = @_ZNKSt8__detail9_IdentityclIRKiEEOT_S5_} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>
            "polygeist.trivialuse"(%47) : (!llvm.ptr<i32>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %36 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%36) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %45 = "llvm.bitcast"(%44) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %46 = "func.call"(%45, %47) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE12_M_hash_codeERKi} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<i32>) -> i64
            "llvm.store"(%46, %24) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %37 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%37) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %45 = "func.call"(%arg0, %47, %44) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexERKim} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, i64) -> i64
            "llvm.store"(%45, %21) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %38 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%38) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%21) : (!llvm.ptr<i64>) -> i64
            %45 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %46 = "func.call"(%arg0, %44, %47, %45) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE12_M_find_nodeEmRKim} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i32>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%46, %19) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %39 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%39) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %45 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %46 = "llvm.icmp"(%44, %45) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i1
            "scf.if"(%46) ({
              %47 = "memref.load"(%32) : (memref<i1>) -> i1
              "scf.if"(%47) ({
                "scf.execute_region"() ({
                  %48 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  "func.call"(%15, %48) {callee = @_ZNSt8__detail14_Node_iteratorIiLb1ELb0EEC1EPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
                  %49 = "llvm.load"(%15) : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
                  "llvm.store"(%49, %13) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
                  %50 = "arith.constant"() {value = 0 : i8} : () -> i8
                  "llvm.store"(%50, %10) : (i8, !llvm.ptr<i8>) -> ()
                  %51 = "func.call"(%13, %10) {callee = @_ZSt9make_pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbESt4pairINSt17__decay_and_stripIT_E6__typeENS4_IT0_E6__typeEEOS5_OS8_} : (!llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
                  "llvm.store"(%51, %8) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
                  "func.call"(%17, %8) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1EOS3_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
                  %52 = "llvm.load"(%17) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
                  "memref.store"(%52, %34) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
                  %53 = "arith.constant"() {value = false} : () -> i1
                  "memref.store"(%53, %32) : (i1, memref<i1>) -> ()
                  "memref.store"(%53, %33) : (i1, memref<i1>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %40 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%40) ({
      "scf.execute_region"() ({
        %43 = "func.call"(%arg2, %arg1) {callee = @_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEclIRKiEEPS2_OT_} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
        "llvm.store"(%43, %19) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %41 = "memref.load"(%32) : (memref<i1>) -> i1
    "scf.if"(%41) ({
      "scf.execute_region"() ({
        %43 = "memref.load"(%32) : (memref<i1>) -> i1
        "scf.if"(%43) ({
          "scf.execute_region"() ({
            %44 = "llvm.load"(%21) : (!llvm.ptr<i64>) -> i64
            %45 = "llvm.load"(%24) : (!llvm.ptr<i64>) -> i64
            %46 = "llvm.load"(%19) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %47 = "llvm.load"(%27) : (!llvm.ptr<i64>) -> i64
            %48 = "func.call"(%arg0, %44, %45, %46, %47) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_insert_unique_nodeEmmPNS1_10_Hash_nodeIiLb0EEEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> !llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>
            "llvm.store"(%48, %4) : (!llvm.struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>) -> ()
            %49 = "arith.constant"() {value = 1 : i8} : () -> i8
            "llvm.store"(%49, %1) : (i8, !llvm.ptr<i8>) -> ()
            "func.call"(%6, %4, %1) {callee = @_ZNSt4pairINSt8__detail14_Node_iteratorIiLb1ELb0EEEbEC1IS2_bLb1EEEOT_OT0_} : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>>, !llvm.ptr<i8>) -> ()
            %50 = "llvm.load"(%6) : (!llvm.ptr<struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
            "memref.store"(%50, %34) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> ()
            %51 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%51, %32) : (i1, memref<i1>) -> ()
            "memref.store"(%51, %33) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %42 = "memref.load"(%34) : (memref<!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>>) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>
    "func.return"(%42) : (!llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<i32>, !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.struct<"struct.std::integral_constant", (i8)>, i64) -> !llvm.struct<"struct.std::pair.28", packed (struct<"struct.std::__detail::_Node_iterator", (struct<"struct.std::__detail::_Node_iterator_base", (ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>)>)>, i8, array<7 x i8>)>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_insertIRKiNS1_10_AllocNodeISaINS1_10_Hash_nodeIiLb0EEEEEEEESt4pairINS1_14_Node_iteratorIiLb1ELb0EEEbEOT_RKT0_St17integral_constantIbLb1EEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE6_S_getERS2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg1: i32):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i32>
    %2 = "llvm.mlir.undef"() : () -> i32
    "llvm.store"(%2, %1) : (i32, !llvm.ptr<i32>) -> ()
    "llvm.store"(%arg1, %1) : (i32, !llvm.ptr<i32>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %7 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%7, %6) : (i64, memref<i64>) -> ()
    %8 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "llvm.load"(%1) : (!llvm.ptr<i32>) -> i32
            %12 = "arith.extsi"(%11) : (i32) -> i64
            "memref.store"(%12, %6) : (i64, memref<i64>) -> ()
            %13 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%13, %4) : (i1, memref<i1>) -> ()
            "memref.store"(%13, %5) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%6) : (memref<i64>) -> i64
    "func.return"(%9) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::hash", (i8)>>, i32) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt4hashIiEclEi"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::hash", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>
            %11 = "func.call"(%10) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>, memref<!llvm.ptr<struct<"struct.std::hash", (i8)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::hash", (i8)>>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: i64, %arg3: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<i64>
    %5 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%5, %4) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %4) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg3, %1) : (i64, !llvm.ptr<i64>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %10 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%10, %9) : (i64, memref<i64>) -> ()
    %11 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "func.call"(%arg0) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
            %15 = "llvm.load"(%4) : (!llvm.ptr<i64>) -> i64
            %16 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %17 = "func.call"(%14, %15, %16) {callee = @_ZNKSt8__detail18_Mod_range_hashingclEmm} : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, i64, i64) -> i64
            "memref.store"(%17, %9) : (i64, memref<i64>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%9) : (memref<i64>) -> i64
    "func.return"(%12) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<i32>, i64, i64) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexERKimm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64, %arg2: !llvm.ptr<i32>, %arg3: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<i64>
    %6 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%6, %5) : (i64, !llvm.ptr<i64>) -> ()
    %7 = "arith.constant"() {value = 1 : i64} : () -> i64
    %8 = "llvm.alloca"(%7) : (i64) -> !llvm.ptr<i64>
    %9 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%9, %8) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %8) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg3, %5) : (i64, !llvm.ptr<i64>) -> ()
    %10 = "arith.constant"() {value = true} : () -> i1
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %12 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%10, %12) : (i1, memref<i1>) -> ()
    "memref.store"(%10, %11) : (i1, memref<i1>) -> ()
    %13 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    %14 = "memref.load"(%11) : (memref<i1>) -> i1
    "scf.if"(%14) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%11) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "arith.constant"() {value = 0 : i32} : () -> i32
            %21 = "arith.constant"() {value = 0 : i32} : () -> i32
            %22 = "llvm.getelementptr"(%arg0, %20) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
            %23 = "llvm.load"(%22) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %24 = "llvm.load"(%8) : (!llvm.ptr<i64>) -> i64
            %25 = "arith.index_cast"(%24) : (i64) -> index
            %26 = "arith.index_cast"(%25) : (index) -> i64
            %27 = "llvm.getelementptr"(%23, %26) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %28 = "llvm.load"(%27) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            "llvm.store"(%28, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %15 = "memref.load"(%11) : (memref<i1>) -> i1
    "scf.if"(%15) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%11) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "llvm.load"(%3) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %21 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %22 = "llvm.icmp"(%20, %21) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
            %23 = "arith.constant"() {value = true} : () -> i1
            %24 = "arith.xori"(%22, %23) : (i1, i1) -> i1
            %25 = "arith.extui"(%24) : (i1) -> i8
            %26 = "arith.constant"() {value = 0 : i8} : () -> i8
            %27 = "arith.cmpi"(%25, %26) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%27) ({
              %28 = "memref.load"(%11) : (memref<i1>) -> i1
              "scf.if"(%28) ({
                "scf.execute_region"() ({
                  %29 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "memref.store"(%29, %13) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  %30 = "arith.constant"() {value = false} : () -> i1
                  "memref.store"(%30, %11) : (i1, memref<i1>) -> ()
                  "memref.store"(%30, %12) : (i1, memref<i1>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %16 = "memref.load"(%11) : (memref<i1>) -> i1
    "scf.if"(%16) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%11) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "memref.load"(%11) : (memref<i1>) -> i1
            "scf.if"(%20) ({
              "scf.execute_region"() ({
                %31 = "llvm.load"(%3) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                %32 = "arith.constant"() {value = 0 : i32} : () -> i32
                %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                %34 = "llvm.getelementptr"(%31, %32) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                %35 = "llvm.load"(%34) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                %36 = "arith.constant"() {value = 0 : i32} : () -> i32
                %37 = "llvm.bitcast"(%35) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<i8>
                %38 = "llvm.getelementptr"(%37, %36) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
                %39 = "llvm.bitcast"(%38) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                %40 = "arith.constant"() {value = 0 : i32} : () -> i32
                %41 = "llvm.bitcast"(%39) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i8>
                %42 = "llvm.getelementptr"(%41, %40) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<i8>, i32) -> !llvm.ptr<i8>
                %43 = "llvm.bitcast"(%42) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                "llvm.store"(%43, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %21 = "arith.constant"() {value = true} : () -> i1
            %22 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            %23 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            "memref.store"(%21, %23) : (i1, memref<i1>) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb1:  // 2 preds: ^bb0, ^bb2
            %24 = "memref.load"(%23) : (memref<i1>) -> i1
            "cf.cond_br"(%24)[^bb2, ^bb3] {operand_segment_sizes = array<i32: 1, 0, 0>} : (i1) -> ()
          ^bb2:  // pred: ^bb1
            %25 = "memref.load"(%23) : (memref<i1>) -> i1
            "memref.store"(%25, %22) : (i1, memref<i1>) -> ()
            %26 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%26) ({
              "scf.execute_region"() ({
                %31 = "memref.load"(%22) : (memref<i1>) -> i1
                "scf.if"(%31) ({
                  "scf.execute_region"() ({
                    %32 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
                    %33 = "llvm.load"(%5) : (!llvm.ptr<i64>) -> i64
                    %34 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                    %35 = "func.call"(%32, %arg2, %33, %34) {callee = @_ZNKSt8__detail15_Hashtable_baseIiiNS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_equalsERKimPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>, !llvm.ptr<i32>, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i8
                    %36 = "arith.constant"() {value = 0 : i8} : () -> i8
                    %37 = "arith.cmpi"(%35, %36) {predicate = 1 : i64} : (i8, i8) -> i1
                    "scf.if"(%37) ({
                      %38 = "memref.load"(%22) : (memref<i1>) -> i1
                      "scf.if"(%38) ({
                        "scf.execute_region"() ({
                          %39 = "llvm.load"(%3) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          "memref.store"(%39, %13) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                          %40 = "arith.constant"() {value = false} : () -> i1
                          "memref.store"(%40, %11) : (i1, memref<i1>) -> ()
                          "memref.store"(%40, %12) : (i1, memref<i1>) -> ()
                          "memref.store"(%40, %22) : (i1, memref<i1>) -> ()
                          "memref.store"(%40, %23) : (i1, memref<i1>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      "scf.yield"() : () -> ()
                    }, {
                    }) : (i1) -> ()
                    "scf.yield"() : () -> ()
                  }) : () -> ()
                  "scf.yield"() : () -> ()
                }, {
                }) : (i1) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %27 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%27) ({
              "scf.execute_region"() ({
                %31 = "memref.load"(%22) : (memref<i1>) -> i1
                "scf.if"(%31) ({
                  "scf.execute_region"() ({
                    %32 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                    %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                    %34 = "arith.constant"() {value = 0 : i32} : () -> i32
                    %35 = "llvm.getelementptr"(%32, %33) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                    %36 = "llvm.bitcast"(%35) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                    %37 = "arith.constant"() {value = 0 : i32} : () -> i32
                    %38 = "arith.constant"() {value = 0 : i32} : () -> i32
                    %39 = "llvm.getelementptr"(%36, %37) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                    %40 = "arith.constant"() {value = 0 : i32} : () -> i32
                    %41 = "arith.constant"() {value = 0 : i32} : () -> i32
                    %42 = "llvm.getelementptr"(%39, %40) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                    %43 = "llvm.load"(%42) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                    %44 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                    %45 = "llvm.icmp"(%43, %44) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                    %46 = "arith.constant"() {value = true} : () -> i1
                    %47 = "arith.xori"(%45, %46) : (i1, i1) -> i1
                    %48 = "arith.extui"(%47) : (i1) -> i8
                    %49 = "arith.constant"() {value = 0 : i8} : () -> i8
                    %50 = "arith.cmpi"(%48, %49) {predicate = 1 : i64} : (i8, i8) -> i1
                    %51 = "scf.if"(%50) ({
                      %55 = "arith.constant"() {value = true} : () -> i1
                      "scf.yield"(%55) : (i1) -> ()
                    }, {
                      %55 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                      %56 = "func.call"(%55) {callee = @_ZNKSt8__detail10_Hash_nodeIiLb0EE7_M_nextEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                      %57 = "func.call"(%arg0, %56) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexEPNS1_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i64
                      %58 = "llvm.load"(%8) : (!llvm.ptr<i64>) -> i64
                      %59 = "arith.cmpi"(%57, %58) {predicate = 1 : i64} : (i64, i64) -> i1
                      %60 = "arith.extui"(%59) : (i1) -> i8
                      %61 = "arith.constant"() {value = 0 : i8} : () -> i8
                      %62 = "arith.cmpi"(%60, %61) {predicate = 1 : i64} : (i8, i8) -> i1
                      "scf.yield"(%62) : (i1) -> ()
                    }) : (i1) -> i1
                    %52 = "arith.extui"(%51) : (i1) -> i8
                    %53 = "arith.constant"() {value = 0 : i8} : () -> i8
                    %54 = "arith.cmpi"(%52, %53) {predicate = 1 : i64} : (i8, i8) -> i1
                    "scf.if"(%54) ({
                      %55 = "memref.load"(%22) : (memref<i1>) -> i1
                      "scf.if"(%55) ({
                        "scf.execute_region"() ({
                          %56 = "arith.constant"() {value = false} : () -> i1
                          "memref.store"(%56, %22) : (i1, memref<i1>) -> ()
                          "memref.store"(%56, %23) : (i1, memref<i1>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      "scf.yield"() : () -> ()
                    }, {
                    }) : (i1) -> ()
                    "scf.yield"() : () -> ()
                  }) : () -> ()
                  "scf.yield"() : () -> ()
                }, {
                }) : (i1) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %28 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%28) ({
              "scf.execute_region"() ({
                %31 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                %32 = "arith.constant"() {value = 0 : i32} : () -> i32
                %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                %34 = "llvm.getelementptr"(%31, %32) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                %35 = "llvm.bitcast"(%34) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                %36 = "arith.constant"() {value = 0 : i32} : () -> i32
                %37 = "arith.constant"() {value = 0 : i32} : () -> i32
                %38 = "llvm.getelementptr"(%35, %36) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                %39 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                %40 = "llvm.icmp"(%38, %39) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                %41 = "arith.select"(%40, %38, %39) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                "llvm.store"(%41, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %29 = "memref.load"(%23) : (memref<i1>) -> i1
            "memref.store"(%29, %22) : (i1, memref<i1>) -> ()
            %30 = "memref.load"(%22) : (memref<i1>) -> i1
            "scf.if"(%30) ({
              "scf.execute_region"() ({
                %31 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                %32 = "func.call"(%31) {callee = @_ZNKSt8__detail10_Hash_nodeIiLb0EE7_M_nextEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                "llvm.store"(%32, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb3:  // pred: ^bb1
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %17 = "memref.load"(%11) : (memref<i1>) -> i1
    "scf.if"(%17) ({
      "scf.execute_region"() ({
        %19 = "memref.load"(%11) : (memref<i1>) -> i1
        "scf.if"(%19) ({
          "scf.execute_region"() ({
            %20 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            "memref.store"(%20, %13) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
            %21 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%21, %11) : (i1, memref<i1>) -> ()
            "memref.store"(%21, %12) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %18 = "memref.load"(%13) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
    "func.return"(%18) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i32>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE19_M_find_before_nodeEmRKim"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    %1 = "arith.constant"() {value = 1 : i64} : () -> i64
    %2 = "llvm.alloca"(%1) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %9 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%9) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "func.call"(%arg0) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            %15 = "arith.constant"() {value = 1 : i32} : () -> i32
            %16 = "arith.constant"() {value = 1 : i64} : () -> i64
            %17 = "func.call"(%14, %16) {callee = @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE8allocateERS3_m} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%17, %4) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "llvm.load"(%4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %15 = "func.call"(%14) {callee = @_ZSt12__to_addressINSt8__detail10_Hash_nodeIiLb0EEEEPT_S4_} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%15, %2) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %16 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>} : () -> index
            %17 = "arith.muli"(%16, %0) : (index, index) -> index
            %18 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %19 = "llvm.bitcast"(%18) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i8>
            %20 = "llvm.bitcast"(%19) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "func.call"(%20) {callee = @_ZNSt8__detail10_Hash_nodeIiLb0EEC1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %14 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%14) ({
          "scf.execute_region"() ({
            %16 = "func.call"(%arg0) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            %17 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %18 = "arith.constant"() {value = 0 : i32} : () -> i32
            %19 = "arith.constant"() {value = 0 : i32} : () -> i32
            %20 = "llvm.getelementptr"(%17, %18) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
            %21 = "llvm.bitcast"(%20) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %22 = "func.call"(%21) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiE9_M_valptrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            "func.call"(%16, %22, %arg1) {callee = @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE9constructIiJiEEEvRS3_PT_DpOT0_} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %15 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            %16 = "memref.load"(%6) : (memref<i1>) -> i1
            "scf.if"(%16) ({
              "scf.execute_region"() ({
                %17 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                "memref.store"(%17, %8) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                %18 = "arith.constant"() {value = false} : () -> i1
                "memref.store"(%18, %6) : (i1, memref<i1>) -> ()
                "memref.store"(%18, %7) : (i1, memref<i1>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%8) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%12) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE16_M_allocate_nodeIJiEEEPS2_DpOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%4, %3) : (i64, memref<i64>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "arith.constant"() {value = 2 : i32} : () -> i32
            %10 = "llvm.getelementptr"(%arg0, %8) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i32) -> !llvm.ptr<i64>
            %11 = "llvm.load"(%10) : (!llvm.ptr<i64>) -> i64
            "memref.store"(%11, %3) : (i64, memref<i64>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i64>) -> i64
    "func.return"(%6) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail20_Prime_rehash_policy8_M_stateEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, %arg1: !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> !llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> !llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt11__pair_baseIbmEC1ERKS0_} : (!llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>, !llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>) -> ()
    %2 = "arith.constant"() {value = 0 : i32} : () -> i32
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "llvm.getelementptr"(%arg1, %2) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, i32) -> !llvm.ptr<i8>
    %5 = "llvm.load"(%4) : (!llvm.ptr<i8>) -> i8
    %6 = "arith.constant"() {value = 0 : i32} : () -> i32
    %7 = "arith.constant"() {value = 0 : i32} : () -> i32
    %8 = "llvm.getelementptr"(%arg0, %6) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, i32) -> !llvm.ptr<i8>
    "llvm.store"(%5, %8) : (i8, !llvm.ptr<i8>) -> ()
    %9 = "arith.constant"() {value = 0 : i32} : () -> i32
    %10 = "arith.constant"() {value = 2 : i32} : () -> i32
    %11 = "llvm.getelementptr"(%arg1, %9) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, i32) -> !llvm.ptr<i64>
    %12 = "llvm.load"(%11) : (!llvm.ptr<i64>) -> i64
    %13 = "arith.constant"() {value = 0 : i32} : () -> i32
    %14 = "arith.constant"() {value = 2 : i32} : () -> i32
    %15 = "llvm.getelementptr"(%arg0, %13) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, i32) -> !llvm.ptr<i64>
    "llvm.store"(%12, %15) : (i64, !llvm.ptr<i64>) -> ()
    %16 = "arith.constant"() {value = true} : () -> i1
    %17 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %18 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%16, %18) : (i1, memref<i1>) -> ()
    "memref.store"(%16, %17) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>, !llvm.ptr<struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt4pairIbmEC1EOS0_"} : () -> ()
  "func.func"() ({
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>>, i64, i64, i64) -> !llvm.struct<"struct.std::pair.31", (i8, array<7 x i8>, i64)>, llvm.linkage = #llvm.linkage<external>, sym_name = "_ZNKSt8__detail20_Prime_rehash_policy14_M_need_rehashEmmm", sym_visibility = "private"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64, %arg2: !llvm.ptr<i64>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<i64>
    %8 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%8, %7) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %7) : (i64, !llvm.ptr<i64>) -> ()
    %9 = "arith.constant"() {value = true} : () -> i1
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%9, %11) : (i1, memref<i1>) -> ()
    "memref.store"(%9, %10) : (i1, memref<i1>) -> ()
    %12 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%12) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "llvm.load"(%7) : (!llvm.ptr<i64>) -> i64
            %15 = "llvm.bitcast"(%3) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.ptr<i8>
            %16 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::integral_constant", (i8)>} : () -> index
            %17 = "arith.constant"() {value = 0 : i8} : () -> i8
            %18 = "arith.index_cast"(%16) : (index) -> i64
            %19 = "arith.constant"() {value = false} : () -> i1
            "llvm.intr.memset"(%15, %17, %18, %19) : (!llvm.ptr<i8>, i8, i64, i1) -> ()
            %20 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.struct<"struct.std::integral_constant", (i8)>
            "llvm.store"(%20, %1) : (!llvm.struct<"struct.std::integral_constant", (i8)>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
            "func.call"(%5, %1) {callee = @_ZNSt17integral_constantIbLb1EEC1EOS0_} : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
            %21 = "llvm.load"(%5) : (!llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> !llvm.struct<"struct.std::integral_constant", (i8)>
            "func.call"(%arg0, %14, %21) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.struct<"struct.std::integral_constant", (i8)>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<i64>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_rehashEmRKm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%arg1, %4) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE13_M_store_codeEPNS_10_Hash_nodeIiLb0EEEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64, %arg2: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "arith.constant"() {value = 0 : i32} : () -> i32
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "llvm.getelementptr"(%arg0, %10) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
            %13 = "llvm.load"(%12) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %14 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %15 = "arith.index_cast"(%14) : (i64) -> index
            %16 = "arith.index_cast"(%15) : (index) -> i64
            %17 = "llvm.getelementptr"(%13, %16) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %18 = "llvm.load"(%17) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %19 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
            %20 = "llvm.icmp"(%18, %19) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
            "scf.if"(%20) ({
              %21 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%21) ({
                "scf.execute_region"() ({
                  %23 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  %24 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %25 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %26 = "llvm.getelementptr"(%23, %24) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                  %27 = "llvm.bitcast"(%26) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                  %28 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %29 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %30 = "llvm.getelementptr"(%27, %28) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %31 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %32 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %33 = "llvm.getelementptr"(%30, %31) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %34 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %35 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %36 = "llvm.getelementptr"(%arg0, %34) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
                  %37 = "llvm.load"(%36) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %38 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
                  %39 = "arith.index_cast"(%38) : (i64) -> index
                  %40 = "arith.index_cast"(%39) : (index) -> i64
                  %41 = "llvm.getelementptr"(%37, %40) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %42 = "llvm.load"(%41) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %43 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %44 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %45 = "llvm.getelementptr"(%42, %43) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %46 = "llvm.load"(%45) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "llvm.store"(%46, %33) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              %22 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%22) ({
                "scf.execute_region"() ({
                  %23 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %24 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %25 = "llvm.getelementptr"(%arg0, %23) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
                  %26 = "llvm.load"(%25) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %27 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
                  %28 = "arith.index_cast"(%27) : (i64) -> index
                  %29 = "arith.index_cast"(%28) : (index) -> i64
                  %30 = "llvm.getelementptr"(%26, %29) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %31 = "llvm.load"(%30) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %32 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %34 = "llvm.getelementptr"(%31, %32) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %35 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  %36 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %37 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %38 = "llvm.getelementptr"(%35, %36) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                  %39 = "llvm.bitcast"(%38) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                  %40 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %41 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %42 = "llvm.getelementptr"(%39, %40) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %43 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %44 = "llvm.icmp"(%42, %43) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                  %45 = "arith.select"(%44, %42, %43) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "llvm.store"(%45, %34) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
              %21 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%21) ({
                "scf.execute_region"() ({
                  %25 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  %26 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %27 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %28 = "llvm.getelementptr"(%25, %26) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                  %29 = "llvm.bitcast"(%28) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                  %30 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %31 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %32 = "llvm.getelementptr"(%29, %30) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %34 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %35 = "llvm.getelementptr"(%32, %33) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %36 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %37 = "arith.constant"() {value = 2 : i32} : () -> i32
                  %38 = "llvm.getelementptr"(%arg0, %36) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %39 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %40 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %41 = "llvm.getelementptr"(%38, %39) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %42 = "llvm.load"(%41) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "llvm.store"(%42, %35) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              %22 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%22) ({
                "scf.execute_region"() ({
                  %25 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %26 = "arith.constant"() {value = 2 : i32} : () -> i32
                  %27 = "llvm.getelementptr"(%arg0, %25) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %28 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %29 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %30 = "llvm.getelementptr"(%27, %28) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %31 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                  %32 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %34 = "llvm.getelementptr"(%31, %32) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                  %35 = "llvm.bitcast"(%34) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                  %36 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %37 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %38 = "llvm.getelementptr"(%35, %36) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %39 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  %40 = "llvm.icmp"(%38, %39) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                  %41 = "arith.select"(%40, %38, %39) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "llvm.store"(%41, %30) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              %23 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%23) ({
                "scf.execute_region"() ({
                  %25 = "memref.load"(%6) : (memref<i1>) -> i1
                  "scf.if"(%25) ({
                    "scf.execute_region"() ({
                      %26 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                      %27 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %28 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %29 = "llvm.getelementptr"(%26, %27) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                      %30 = "llvm.bitcast"(%29) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                      %31 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %32 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %33 = "llvm.getelementptr"(%30, %31) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                      %34 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %35 = "arith.constant"() {value = 0 : i32} : () -> i32
                      %36 = "llvm.getelementptr"(%33, %34) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                      %37 = "llvm.load"(%36) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                      %38 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                      %39 = "llvm.icmp"(%37, %38) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                      "scf.if"(%39) ({
                        %40 = "arith.constant"() {value = 0 : i32} : () -> i32
                        %41 = "arith.constant"() {value = 0 : i32} : () -> i32
                        %42 = "llvm.getelementptr"(%arg0, %40) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
                        %43 = "llvm.load"(%42) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                        %44 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                        %45 = "func.call"(%44) {callee = @_ZNKSt8__detail10_Hash_nodeIiLb0EE7_M_nextEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                        %46 = "func.call"(%arg0, %45) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexEPNS1_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i64
                        %47 = "arith.index_cast"(%46) : (i64) -> index
                        %48 = "arith.index_cast"(%47) : (index) -> i64
                        %49 = "llvm.getelementptr"(%43, %48) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                        %50 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                        %51 = "arith.constant"() {value = 0 : i32} : () -> i32
                        %52 = "arith.constant"() {value = 0 : i32} : () -> i32
                        %53 = "llvm.getelementptr"(%50, %51) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                        %54 = "llvm.bitcast"(%53) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                        %55 = "arith.constant"() {value = 0 : i32} : () -> i32
                        %56 = "arith.constant"() {value = 0 : i32} : () -> i32
                        %57 = "llvm.getelementptr"(%54, %55) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                        %58 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                        %59 = "llvm.icmp"(%57, %58) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                        %60 = "arith.select"(%59, %57, %58) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                        "llvm.store"(%60, %49) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      "scf.yield"() : () -> ()
                    }) : () -> ()
                    "scf.yield"() : () -> ()
                  }, {
                  }) : (i1) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              %24 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%24) ({
                "scf.execute_region"() ({
                  %25 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %26 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %27 = "llvm.getelementptr"(%arg0, %25) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
                  %28 = "llvm.load"(%27) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %29 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
                  %30 = "arith.index_cast"(%29) : (i64) -> index
                  %31 = "arith.index_cast"(%30) : (index) -> i64
                  %32 = "llvm.getelementptr"(%28, %31) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                  %33 = "arith.constant"() {value = 0 : i32} : () -> i32
                  %34 = "arith.constant"() {value = 2 : i32} : () -> i32
                  %35 = "llvm.getelementptr"(%arg0, %33) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                  "llvm.store"(%35, %32) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE22_M_insert_bucket_beginEmPNS1_10_Hash_nodeIiLb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg2: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg3: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, %arg4: !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EEC1IRKS1_EEOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
    %1 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>
    "func.call"(%1, %arg2) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EEC1IRKS2_EEOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> ()
    %2 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>
    "func.call"(%2, %arg3) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EEC1IRKS1_EEOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Default_ranged_hash", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EEC1ERKS1_RKS3_RKS4_RKS5_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSt8equal_toIiEC1ERKS0_} : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EEC1IRKS2_EEOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::allocator", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSaINSt8__detail10_Hash_nodeIiLb0EEEEC1ERKS2_} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeIiLb0EEEELb1EEC1IS3_EEOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEEC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<i32>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<ptr<i32>>
    %6 = "arith.constant"() {value = 1 : i64} : () -> i64
    %7 = "llvm.alloca"(%6) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg0, %7) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg1, %5) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %8 = "arith.constant"() {value = true} : () -> i1
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%8, %10) : (i1, memref<i1>) -> ()
    "memref.store"(%8, %9) : (i1, memref<i1>) -> ()
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %12 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%12, %11) : (i64, memref<i64>) -> ()
    %13 = "memref.load"(%9) : (memref<i1>) -> i1
    "scf.if"(%13) ({
      "scf.execute_region"() ({
        %15 = "memref.load"(%9) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            %16 = "llvm.load"(%7) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %17 = "llvm.load"(%5) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %18 = "func.call"(%7) {callee = @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_} : (!llvm.ptr<ptr<i32>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>
            "llvm.store"(%18, %1) : (!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
            "func.call"(%3, %1) {callee = @_ZNSt26random_access_iterator_tagC1EOS_} : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
            %19 = "llvm.load"(%3) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>
            %20 = "func.call"(%16, %17, %19) {callee = @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag} : (!llvm.ptr<i32>, !llvm.ptr<i32>, !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>) -> i64
            "memref.store"(%20, %11) : (i64, memref<i64>) -> ()
            %21 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%21, %9) : (i1, memref<i1>) -> ()
            "memref.store"(%21, %10) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %14 = "memref.load"(%11) : (memref<i64>) -> i64
    "func.return"(%14) : (i64) -> ()
  }) {function_type = (!llvm.ptr<i32>, !llvm.ptr<i32>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::input_iterator_tag", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt18input_iterator_tagC1EOS_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt26bidirectional_iterator_tagC1EOS_} : (!llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt26random_access_iterator_tagC1EOS_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator.34", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::allocator", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>
    "func.call"(%0) {callee = @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC1Ev} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSaIPNSt8__detail15_Hash_node_baseEEC1INS_10_Hash_nodeIiLb0EEEEERKSaIT_E"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"class.std::allocator", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>
            %11 = "func.call"(%10) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeIiLb0EEEELb1EE6_S_getERS4_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, memref<!llvm.ptr<struct<"class.std::allocator", (i8)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"class.std::allocator", (i8)>>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator.34", (i8)>>, %arg1: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %7 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>
            %11 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %12 = "llvm.mlir.null"() : () -> !llvm.ptr<i8>
            %13 = "func.call"(%10, %11, %12) {callee = @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>, i64, !llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "memref.store"(%13, %6) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            %14 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%14, %4) : (i1, memref<i1>) -> ()
            "memref.store"(%14, %5) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%6) : (memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "func.return"(%8) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE8allocateERS3_m"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%arg0, %1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %6 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%6) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%3) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %7 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%3) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "llvm.load"(%1) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "memref.store"(%10, %5) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %3) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %4) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%5) : (memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "func.return"(%8) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
  }) {function_type = (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt12__to_addressIPNSt8__detail15_Hash_node_baseEEPT_S4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            "memref.store"(%arg1, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %7 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%7, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%7, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail9_IdentityclIRKiEEOT_S5_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>>
            %10 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
            %11 = "func.call"(%10, %arg1) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE16_M_allocate_nodeIJRKiEEEPS2_DpOT_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_AllocNode", (ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail10_AllocNodeISaINS_10_Hash_nodeIiLb0EEEEEclIRKiEEPS2_OT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::hash", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>, memref<!llvm.ptr<struct<"struct.std::hash", (i8)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::hash", (i8)>>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EE7_S_cgetERKS3_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, %arg1: i64, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<i64>
    %5 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%5, %4) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %4) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %10 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%10, %9) : (i64, memref<i64>) -> ()
    %11 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "llvm.load"(%4) : (!llvm.ptr<i64>) -> i64
            %15 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %16 = "arith.remsi"(%14, %15) : (i64, i64) -> i64
            "memref.store"(%16, %9) : (i64, memref<i64>) -> ()
            %17 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%17, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%17, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%9) : (memref<i64>) -> i64
    "func.return"(%12) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, i64, i64) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail18_Mod_range_hashingclEmm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>
            %11 = "func.call"(%10) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: i64, %arg3: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg3, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i8>
    %9 = "llvm.mlir.undef"() : () -> i8
    "memref.store"(%9, %8) : (i8, memref<i8>) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "func.call"(%arg0) {callee = @_ZNKSt8__detail15_Hashtable_baseIiiNS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb1ELb1EEEE5_M_eqEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
            %15 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %16 = "func.call"(%15) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %17 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %18 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %19 = "func.call"(%14, %16, %arg1, %17, %18) {callee = @_ZNSt8__detail13_Equal_helperIiiNS_9_IdentityESt8equal_toIiEmLb0EE9_S_equalsERKS3_RKS1_RKimPNS_10_Hash_nodeIiLb0EEE} : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i8
            "memref.store"(%19, %8) : (i8, memref<i8>) -> ()
            %20 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%20, %6) : (i1, memref<i1>) -> ()
            "memref.store"(%20, %7) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%8) : (memref<i8>) -> i8
    "func.return"(%12) : (i8) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>, !llvm.ptr<i32>, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i8, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hashtable_baseIiiNS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb1ELb1EEEE9_M_equalsERKimPNS_10_Hash_nodeIiLb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %6 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%6, %5) : (i64, memref<i64>) -> ()
    %7 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%3) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
            %11 = "llvm.bitcast"(%10) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
            %12 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %13 = "arith.constant"() {value = 0 : i32} : () -> i32
            %14 = "arith.constant"() {value = 1 : i32} : () -> i32
            %15 = "llvm.getelementptr"(%arg0, %13) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
            %16 = "llvm.load"(%15) : (!llvm.ptr<i64>) -> i64
            %17 = "func.call"(%11, %12, %16) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIiLb0EEEm} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> i64
            "memref.store"(%17, %5) : (i64, memref<i64>) -> ()
            %18 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%18, %3) : (i1, memref<i1>) -> ()
            "memref.store"(%18, %4) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%5) : (memref<i64>) -> i64
    "func.return"(%8) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE15_M_bucket_indexEPNS1_10_Hash_nodeIiLb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator", (i8)>>, %arg1: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %7 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%4) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
            %11 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %12 = "llvm.mlir.null"() : () -> !llvm.ptr<i8>
            %13 = "func.call"(%10, %11, %12) {callee = @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE8allocateEmPKv} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, i64, !llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%13, %6) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %14 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%14, %4) : (i1, memref<i1>) -> ()
            "memref.store"(%14, %5) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%6) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%8) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator", (i8)>>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE8allocateERS3_m"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%arg0, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %6 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%6) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%3) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %7 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%3) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%10, %5) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %3) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %4) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%5) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%8) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt12__to_addressINSt8__detail10_Hash_nodeIiLb0EEEEPT_S4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg0, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
    %3 = "llvm.bitcast"(%2) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
    "func.call"(%3) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiEC1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> ()
    %4 = "arith.constant"() {value = true} : () -> i1
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%4, %6) : (i1, memref<i1>) -> ()
    "memref.store"(%4, %5) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail10_Hash_nodeIiLb0EEC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    %5 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %6 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
        %7 = "llvm.load"(%1) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
        "func.call"(%6, %7, %arg2) {callee = @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE9constructIiJiEEEvPT_DpOT0_} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE9constructIiJiEEEvRS3_PT_DpOT0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>, !llvm.ptr<struct<"class.std::__pair_base.32", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt11__pair_baseIbmEC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: i64, %arg2: !llvm.struct<"struct.std::integral_constant", (i8)>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %5 = "arith.constant"() {value = 1 : i64} : () -> i64
    %6 = "llvm.alloca"(%5) : (i64) -> !llvm.ptr<i64>
    %7 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%7, %6) : (i64, !llvm.ptr<i64>) -> ()
    %8 = "arith.constant"() {value = 1 : i64} : () -> i64
    %9 = "llvm.alloca"(%8) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %10 = "arith.constant"() {value = 1 : i64} : () -> i64
    %11 = "llvm.alloca"(%10) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %12 = "arith.constant"() {value = 1 : i64} : () -> i64
    %13 = "llvm.alloca"(%12) : (i64) -> !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>
    %14 = "arith.constant"() {value = 1 : i64} : () -> i64
    %15 = "llvm.alloca"(%14) : (i64) -> !llvm.ptr<i64>
    %16 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%16, %15) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %15) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %13) : (!llvm.struct<"struct.std::integral_constant", (i8)>, !llvm.ptr<struct<"struct.std::integral_constant", (i8)>>) -> ()
    %17 = "arith.constant"() {value = true} : () -> i1
    %18 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %19 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%17, %19) : (i1, memref<i1>) -> ()
    "memref.store"(%17, %18) : (i1, memref<i1>) -> ()
    %20 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%20) ({
      "scf.execute_region"() ({
        %28 = "memref.load"(%18) : (memref<i1>) -> i1
        "scf.if"(%28) ({
          "scf.execute_region"() ({
            %29 = "llvm.load"(%15) : (!llvm.ptr<i64>) -> i64
            %30 = "func.call"(%arg0, %29) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE19_M_allocate_bucketsEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "llvm.store"(%30, %11) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %21 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%21) ({
      "scf.execute_region"() ({
        %28 = "memref.load"(%18) : (memref<i1>) -> i1
        "scf.if"(%28) ({
          "scf.execute_region"() ({
            %29 = "func.call"(%arg0) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE8_M_beginEv} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%29, %9) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %22 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%22) ({
      "scf.execute_region"() ({
        %28 = "arith.constant"() {value = 0 : i32} : () -> i32
        %29 = "arith.constant"() {value = 2 : i32} : () -> i32
        %30 = "llvm.getelementptr"(%arg0, %28) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
        %31 = "arith.constant"() {value = 0 : i32} : () -> i32
        %32 = "arith.constant"() {value = 0 : i32} : () -> i32
        %33 = "llvm.getelementptr"(%30, %31) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %34 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
        "llvm.store"(%34, %33) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %23 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%23) ({
      "scf.execute_region"() ({
        %28 = "memref.load"(%18) : (memref<i1>) -> i1
        "scf.if"(%28) ({
          "scf.execute_region"() ({
            %29 = "arith.constant"() {value = 0 : i32} : () -> i32
            %30 = "arith.constant"() {value = 0 : i64} : () -> i64
            "llvm.store"(%30, %6) : (i64, !llvm.ptr<i64>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %24 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%24) ({
      "scf.execute_region"() ({
        %28 = "memref.load"(%18) : (memref<i1>) -> i1
        "scf.if"(%28) ({
          "scf.execute_region"() ({
            %29 = "arith.constant"() {value = true} : () -> i1
            %30 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            %31 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
            "memref.store"(%29, %31) : (i1, memref<i1>) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb1:  // 2 preds: ^bb0, ^bb2
            %32 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %33 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %34 = "llvm.icmp"(%32, %33) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i1
            %35 = "memref.load"(%31) : (memref<i1>) -> i1
            %36 = "arith.andi"(%34, %35) : (i1, i1) -> i1
            "cf.cond_br"(%36)[^bb2, ^bb3] {operand_segment_sizes = array<i32: 1, 0, 0>} : (i1) -> ()
          ^bb2:  // pred: ^bb1
            %37 = "memref.load"(%31) : (memref<i1>) -> i1
            "memref.store"(%37, %30) : (i1, memref<i1>) -> ()
            %38 = "memref.load"(%30) : (memref<i1>) -> i1
            "scf.if"(%38) ({
              "scf.execute_region"() ({
                %42 = "memref.load"(%30) : (memref<i1>) -> i1
                "scf.if"(%42) ({
                  "scf.execute_region"() ({
                    %43 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                    %44 = "func.call"(%43) {callee = @_ZNKSt8__detail10_Hash_nodeIiLb0EE7_M_nextEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                    "llvm.store"(%44, %4) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                    "scf.yield"() : () -> ()
                  }) : () -> ()
                  "scf.yield"() : () -> ()
                }, {
                }) : (i1) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %39 = "memref.load"(%30) : (memref<i1>) -> i1
            "scf.if"(%39) ({
              "scf.execute_region"() ({
                %42 = "memref.load"(%30) : (memref<i1>) -> i1
                "scf.if"(%42) ({
                  "scf.execute_region"() ({
                    %43 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>
                    %44 = "llvm.bitcast"(%43) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>
                    %45 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                    %46 = "llvm.load"(%15) : (!llvm.ptr<i64>) -> i64
                    %47 = "func.call"(%44, %45, %46) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIiLb0EEEm} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> i64
                    "llvm.store"(%47, %1) : (i64, !llvm.ptr<i64>) -> ()
                    "scf.yield"() : () -> ()
                  }) : () -> ()
                  "scf.yield"() : () -> ()
                }, {
                }) : (i1) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %40 = "memref.load"(%30) : (memref<i1>) -> i1
            "scf.if"(%40) ({
              "scf.execute_region"() ({
                %42 = "memref.load"(%30) : (memref<i1>) -> i1
                "scf.if"(%42) ({
                  "scf.execute_region"() ({
                    %43 = "llvm.load"(%11) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                    %44 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                    %45 = "arith.index_cast"(%44) : (i64) -> index
                    %46 = "arith.index_cast"(%45) : (index) -> i64
                    %47 = "llvm.getelementptr"(%43, %46) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                    %48 = "llvm.load"(%47) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                    %49 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                    %50 = "llvm.icmp"(%48, %49) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                    %51 = "arith.constant"() {value = true} : () -> i1
                    %52 = "arith.xori"(%50, %51) : (i1, i1) -> i1
                    %53 = "arith.extui"(%52) : (i1) -> i8
                    %54 = "arith.constant"() {value = 0 : i8} : () -> i8
                    %55 = "arith.cmpi"(%53, %54) {predicate = 1 : i64} : (i8, i8) -> i1
                    "scf.if"(%55) ({
                      %56 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%56) ({
                        "scf.execute_region"() ({
                          %61 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                          %62 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %63 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %64 = "llvm.getelementptr"(%61, %62) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                          %65 = "llvm.bitcast"(%64) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                          %66 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %67 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %68 = "llvm.getelementptr"(%65, %66) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %69 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %70 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %71 = "llvm.getelementptr"(%68, %69) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %72 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %73 = "arith.constant"() {value = 2 : i32} : () -> i32
                          %74 = "llvm.getelementptr"(%arg0, %72) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %75 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %76 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %77 = "llvm.getelementptr"(%74, %75) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %78 = "llvm.load"(%77) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          "llvm.store"(%78, %71) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      %57 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%57) ({
                        "scf.execute_region"() ({
                          %61 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %62 = "arith.constant"() {value = 2 : i32} : () -> i32
                          %63 = "llvm.getelementptr"(%arg0, %61) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %64 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %65 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %66 = "llvm.getelementptr"(%63, %64) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %67 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                          %68 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %69 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %70 = "llvm.getelementptr"(%67, %68) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                          %71 = "llvm.bitcast"(%70) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                          %72 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %73 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %74 = "llvm.getelementptr"(%71, %72) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %75 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %76 = "llvm.icmp"(%74, %75) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                          %77 = "arith.select"(%76, %74, %75) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          "llvm.store"(%77, %66) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      %58 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%58) ({
                        "scf.execute_region"() ({
                          %61 = "llvm.load"(%11) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %62 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                          %63 = "arith.index_cast"(%62) : (i64) -> index
                          %64 = "arith.index_cast"(%63) : (index) -> i64
                          %65 = "llvm.getelementptr"(%61, %64) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %66 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %67 = "arith.constant"() {value = 2 : i32} : () -> i32
                          %68 = "llvm.getelementptr"(%arg0, %66) {rawConstantIndices = array<i32: -2147483648, 2>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          "llvm.store"(%68, %65) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      %59 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%59) ({
                        "scf.execute_region"() ({
                          %61 = "memref.load"(%30) : (memref<i1>) -> i1
                          "scf.if"(%61) ({
                            "scf.execute_region"() ({
                              %62 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                              %63 = "arith.constant"() {value = 0 : i32} : () -> i32
                              %64 = "arith.constant"() {value = 0 : i32} : () -> i32
                              %65 = "llvm.getelementptr"(%62, %63) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                              %66 = "llvm.bitcast"(%65) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                              %67 = "arith.constant"() {value = 0 : i32} : () -> i32
                              %68 = "arith.constant"() {value = 0 : i32} : () -> i32
                              %69 = "llvm.getelementptr"(%66, %67) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                              %70 = "arith.constant"() {value = 0 : i32} : () -> i32
                              %71 = "arith.constant"() {value = 0 : i32} : () -> i32
                              %72 = "llvm.getelementptr"(%69, %70) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                              %73 = "llvm.load"(%72) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                              %74 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                              %75 = "llvm.icmp"(%73, %74) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                              "scf.if"(%75) ({
                                %76 = "llvm.load"(%11) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                                %77 = "llvm.load"(%6) : (!llvm.ptr<i64>) -> i64
                                %78 = "arith.index_cast"(%77) : (i64) -> index
                                %79 = "arith.index_cast"(%78) : (index) -> i64
                                %80 = "llvm.getelementptr"(%76, %79) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                                %81 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                                %82 = "arith.constant"() {value = 0 : i32} : () -> i32
                                %83 = "arith.constant"() {value = 0 : i32} : () -> i32
                                %84 = "llvm.getelementptr"(%81, %82) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                                %85 = "llvm.bitcast"(%84) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                                %86 = "arith.constant"() {value = 0 : i32} : () -> i32
                                %87 = "arith.constant"() {value = 0 : i32} : () -> i32
                                %88 = "llvm.getelementptr"(%85, %86) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                                %89 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                                %90 = "llvm.icmp"(%88, %89) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                                %91 = "arith.select"(%90, %88, %89) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                                "llvm.store"(%91, %80) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                                "scf.yield"() : () -> ()
                              }, {
                              }) : (i1) -> ()
                              "scf.yield"() : () -> ()
                            }) : () -> ()
                            "scf.yield"() : () -> ()
                          }, {
                          }) : (i1) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      %60 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%60) ({
                        "scf.execute_region"() ({
                          %61 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                          "llvm.store"(%61, %6) : (i64, !llvm.ptr<i64>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      "scf.yield"() : () -> ()
                    }, {
                      %56 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%56) ({
                        "scf.execute_region"() ({
                          %58 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                          %59 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %60 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %61 = "llvm.getelementptr"(%58, %59) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                          %62 = "llvm.bitcast"(%61) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                          %63 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %64 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %65 = "llvm.getelementptr"(%62, %63) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %66 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %67 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %68 = "llvm.getelementptr"(%65, %66) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %69 = "llvm.load"(%11) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %70 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                          %71 = "arith.index_cast"(%70) : (i64) -> index
                          %72 = "arith.index_cast"(%71) : (index) -> i64
                          %73 = "llvm.getelementptr"(%69, %72) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %74 = "llvm.load"(%73) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %75 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %76 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %77 = "llvm.getelementptr"(%74, %75) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %78 = "llvm.load"(%77) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          "llvm.store"(%78, %68) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      %57 = "memref.load"(%30) : (memref<i1>) -> i1
                      "scf.if"(%57) ({
                        "scf.execute_region"() ({
                          %58 = "llvm.load"(%11) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %59 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
                          %60 = "arith.index_cast"(%59) : (i64) -> index
                          %61 = "arith.index_cast"(%60) : (index) -> i64
                          %62 = "llvm.getelementptr"(%58, %61) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %63 = "llvm.load"(%62) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %64 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %65 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %66 = "llvm.getelementptr"(%63, %64) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
                          %67 = "llvm.load"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                          %68 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %69 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %70 = "llvm.getelementptr"(%67, %68) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
                          %71 = "llvm.bitcast"(%70) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
                          %72 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %73 = "arith.constant"() {value = 0 : i32} : () -> i32
                          %74 = "llvm.getelementptr"(%71, %72) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %75 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          %76 = "llvm.icmp"(%74, %75) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> i1
                          %77 = "arith.select"(%76, %74, %75) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
                          "llvm.store"(%77, %66) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
                          "scf.yield"() : () -> ()
                        }) : () -> ()
                        "scf.yield"() : () -> ()
                      }, {
                      }) : (i1) -> ()
                      "scf.yield"() : () -> ()
                    }) : (i1) -> ()
                    "scf.yield"() : () -> ()
                  }) : () -> ()
                  "scf.yield"() : () -> ()
                }, {
                }) : (i1) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            %41 = "memref.load"(%30) : (memref<i1>) -> i1
            "scf.if"(%41) ({
              "scf.execute_region"() ({
                %42 = "llvm.load"(%4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                "llvm.store"(%42, %9) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "cf.br"()[^bb1] : () -> ()
          ^bb3:  // pred: ^bb1
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %25 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%25) ({
      "scf.execute_region"() ({
        "func.call"(%arg0) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_deallocate_bucketsEv} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %26 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%26) ({
      "scf.execute_region"() ({
        %28 = "arith.constant"() {value = 0 : i32} : () -> i32
        %29 = "arith.constant"() {value = 1 : i32} : () -> i32
        %30 = "llvm.getelementptr"(%arg0, %28) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
        %31 = "llvm.load"(%15) : (!llvm.ptr<i64>) -> i64
        "llvm.store"(%31, %30) : (i64, !llvm.ptr<i64>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %27 = "memref.load"(%18) : (memref<i1>) -> i1
    "scf.if"(%27) ({
      "scf.execute_region"() ({
        %28 = "arith.constant"() {value = 0 : i32} : () -> i32
        %29 = "arith.constant"() {value = 0 : i32} : () -> i32
        %30 = "llvm.getelementptr"(%arg0, %28) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
        %31 = "llvm.load"(%11) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        "llvm.store"(%31, %30) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i64, !llvm.struct<"struct.std::integral_constant", (i8)>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE13_M_rehash_auxEmSt17integral_constantIbLb1EE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSt8__detail9_IdentityC1ERKS0_} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EEC1IRKS1_EEOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::hash", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSt4hashIiEC1ERKS0_} : (!llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.0", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi1ESt4hashIiELb1EEC1IRKS2_EEOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
    "func.call"(%0, %arg1) {callee = @_ZNSt8__detail18_Mod_range_hashingC1ERKS0_} : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> ()
    %1 = "arith.constant"() {value = true} : () -> i1
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%1, %3) : (i1, memref<i1>) -> ()
    "memref.store"(%1, %2) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EEC1IRKS1_EEOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> !llvm.ptr<struct<"struct.std::binary_function", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> !llvm.ptr<struct<"struct.std::binary_function", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt15binary_functionIiibEC1ERKS0_} : (!llvm.ptr<struct<"struct.std::binary_function", (i8)>>, !llvm.ptr<struct<"struct.std::binary_function", (i8)>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8equal_toIiEC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator", (i8)>>, %arg1: !llvm.ptr<struct<"class.std::allocator", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
    %2 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
    %3 = "llvm.icmp"(%1, %2) {predicate = 1 : i64} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> i1
    %4 = "arith.select"(%3, %1, %2) : (i1, !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
    "func.call"(%0, %4) {callee = @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEEC1ERKS4_} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSaINSt8__detail10_Hash_nodeIiLb0EEEEC1ERKS2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<i32>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<ptr<i32>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg0, %5) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg1, %3) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    "llvm.store"(%arg2, %1) : (!llvm.struct<"struct.std::random_access_iterator_tag", (i8)>, !llvm.ptr<struct<"struct.std::random_access_iterator_tag", (i8)>>) -> ()
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    %9 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %10 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%10, %9) : (i64, memref<i64>) -> ()
    %11 = "memref.load"(%7) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%7) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "llvm.load"(%3) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %15 = "llvm.load"(%5) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
            %16 = "llvm.ptrtoint"(%15) : (!llvm.ptr<i32>) -> i64
            %17 = "llvm.ptrtoint"(%14) : (!llvm.ptr<i32>) -> i64
            %18 = "arith.subi"(%17, %16) : (i64, i64) -> i64
            %19 = "polygeist.typeSize"() {source = i32} : () -> index
            %20 = "arith.index_cast"(%19) : (index) -> i64
            %21 = "arith.divsi"(%18, %20) : (i64, i64) -> i64
            "memref.store"(%21, %9) : (i64, memref<i64>) -> ()
            %22 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%22, %7) : (i1, memref<i1>) -> ()
            "memref.store"(%22, %8) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%9) : (memref<i64>) -> i64
    "func.return"(%12) : (i64) -> ()
  }) {function_type = (!llvm.ptr<i32>, !llvm.ptr<i32>, !llvm.struct<"struct.std::random_access_iterator_tag", (i8)>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>) -> !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt20forward_iterator_tagC1EOS_} : (!llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::forward_iterator_tag", (i8)>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>, !llvm.ptr<struct<"struct.std::bidirectional_iterator_tag", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt26bidirectional_iterator_tagC1EOS_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEEC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"class.std::allocator", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, memref<!llvm.ptr<struct<"class.std::allocator", (i8)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"class.std::allocator", (i8)>>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.3", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ESaINS_10_Hash_nodeIiLb0EEEELb1EE6_S_getERS4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>, %arg1: i64, %arg2: !llvm.ptr<i8>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<i8>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %1) : (!llvm.ptr<i8>, !llvm.ptr<ptr<i8>>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %9 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%9) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %14 = "func.call"(%arg0) {callee = @_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>) -> i64
            %15 = "arith.cmpi"(%13, %14) {predicate = 4 : i64} : (i64, i64) -> i1
            %16 = "arith.extui"(%15) : (i1) -> i8
            %17 = "arith.constant"() {value = 0 : i8} : () -> i8
            %18 = "arith.cmpi"(%16, %17) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%18) ({
              "func.call"() {callee = @_ZSt17__throw_bad_allocv} : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %14 = "polygeist.typeSize"() {source = !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>} : () -> index
            %15 = "arith.index_cast"(%14) : (index) -> i64
            %16 = "arith.muli"(%13, %15) : (i64, i64) -> i64
            %17 = "func.call"(%16) {callee = @_Znwm} : (i64) -> !llvm.ptr<i8>
            %18 = "llvm.bitcast"(%17) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "memref.store"(%18, %8) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            %19 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%19, %6) : (i1, memref<i1>) -> ()
            "memref.store"(%19, %7) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%8) : (memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "func.return"(%11) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>, i64, !llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8allocateEmPKv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, %arg1: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    %1 = "arith.constant"() {value = 1 : i64} : () -> i64
    %2 = "llvm.alloca"(%1) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %9 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%9) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "func.call"(%arg0) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            %15 = "arith.constant"() {value = 1 : i32} : () -> i32
            %16 = "arith.constant"() {value = 1 : i64} : () -> i64
            %17 = "func.call"(%14, %16) {callee = @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE8allocateERS3_m} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, i64) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%17, %4) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %14 = "llvm.load"(%4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %15 = "func.call"(%14) {callee = @_ZSt12__to_addressINSt8__detail10_Hash_nodeIiLb0EEEEPT_S4_} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "llvm.store"(%15, %2) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%11) ({
      "scf.execute_region"() ({
        %13 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%13) ({
          "scf.execute_region"() ({
            %16 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>} : () -> index
            %17 = "arith.muli"(%16, %0) : (index, index) -> index
            %18 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %19 = "llvm.bitcast"(%18) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i8>
            %20 = "llvm.bitcast"(%19) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "func.call"(%20) {callee = @_ZNSt8__detail10_Hash_nodeIiLb0EEC1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %14 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%14) ({
          "scf.execute_region"() ({
            %16 = "func.call"(%arg0) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            %17 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %18 = "arith.constant"() {value = 0 : i32} : () -> i32
            %19 = "arith.constant"() {value = 0 : i32} : () -> i32
            %20 = "llvm.getelementptr"(%17, %18) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
            %21 = "llvm.bitcast"(%20) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %22 = "func.call"(%21) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiE9_M_valptrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            "func.call"(%16, %22, %arg1) {callee = @_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE9constructIiJRKiEEEvRS3_PT_DpOT0_} : (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        %15 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%15) ({
          "scf.execute_region"() ({
            %16 = "memref.load"(%6) : (memref<i1>) -> i1
            "scf.if"(%16) ({
              "scf.execute_region"() ({
                %17 = "llvm.load"(%2) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
                "memref.store"(%17, %8) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
                %18 = "arith.constant"() {value = false} : () -> i1
                "memref.store"(%18, %6) : (i1, memref<i1>) -> ()
                "memref.store"(%18, %7) : (i1, memref<i1>) -> ()
                "scf.yield"() : () -> ()
              }) : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %12 = "memref.load"(%8) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%12) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE16_M_allocate_nodeIJRKiEEEPS2_DpOT_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.1", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi2ENS_18_Mod_range_hashingELb1EE7_S_cgetERKS2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg2: !llvm.ptr<i32>, %arg3: i64, %arg4: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg3, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg4, %1) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i8>
    %9 = "llvm.mlir.undef"() : () -> i8
    "memref.store"(%9, %8) : (i8, memref<i8>) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.load"(%1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %14 = "arith.constant"() {value = 0 : i32} : () -> i32
            %15 = "arith.constant"() {value = 0 : i32} : () -> i32
            %16 = "llvm.getelementptr"(%13, %14) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
            %17 = "llvm.bitcast"(%16) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %18 = "func.call"(%17) {callee = @_ZNSt8__detail21_Hash_node_value_baseIiE4_M_vEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            %19 = "func.call"(%arg1, %18) {callee = @_ZNKSt8__detail9_IdentityclIRiEEOT_S4_} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>
            %20 = "func.call"(%arg0, %arg2, %19) {callee = @_ZNKSt8equal_toIiEclERKiS2_} : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> i8
            "memref.store"(%20, %8) : (i8, memref<i8>) -> ()
            %21 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%21, %6) : (i1, memref<i1>) -> ()
            "memref.store"(%21, %7) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%8) : (memref<i8>) -> i8
    "func.return"(%11) : (i8) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>, i64, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> i8, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail13_Equal_helperIiiNS_9_IdentityESt8equal_toIiEmLb0EE9_S_equalsERKS3_RKS1_RKimPNS_10_Hash_nodeIiLb0EEE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::equal_to", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>
            %11 = "func.call"(%10) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, memref<!llvm.ptr<struct<"struct.std::equal_to", (i8)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::equal_to", (i8)>>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hashtable_baseIiiNS_9_IdentityESt8equal_toIiESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashENS_17_Hashtable_traitsILb0ELb1ELb1EEEE5_M_eqEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>
            %11 = "func.call"(%10) {callee = @_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE7_S_cgetERKS2_} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            "memref.store"(%11, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    "llvm.store"(%arg1, %4) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %9 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%9, %8) : (i64, memref<i64>) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "func.call"(%arg0) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h2Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>
            %14 = "func.call"(%arg0) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE5_M_h1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::hash", (i8)>>
            %15 = "func.call"(%arg0) {callee = @_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE10_M_extractEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %16 = "llvm.load"(%4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            %17 = "arith.constant"() {value = 0 : i32} : () -> i32
            %18 = "arith.constant"() {value = 0 : i32} : () -> i32
            %19 = "llvm.getelementptr"(%16, %17) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>
            %20 = "llvm.bitcast"(%19) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>
            %21 = "func.call"(%20) {callee = @_ZNKSt8__detail21_Hash_node_value_baseIiE4_M_vEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            %22 = "func.call"(%15, %21) {callee = @_ZNKSt8__detail9_IdentityclIRKiEEOT_S5_} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<i32>) -> !llvm.ptr<i32>
            %23 = "llvm.load"(%22) : (!llvm.ptr<i32>) -> i32
            %24 = "func.call"(%14, %23) {callee = @_ZNKSt4hashIiEclEi} : (!llvm.ptr<struct<"struct.std::hash", (i8)>>, i32) -> i64
            %25 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
            %26 = "func.call"(%13, %24, %25) {callee = @_ZNKSt8__detail18_Mod_range_hashingclEmm} : (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, i64, i64) -> i64
            "memref.store"(%26, %8) : (i64, memref<i64>) -> ()
            %27 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%27, %6) : (i1, memref<i1>) -> ()
            "memref.store"(%27, %7) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%8) : (memref<i64>) -> i64
    "func.return"(%11) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_code_base", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, i64) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail15_Hash_code_baseIiiNS_9_IdentityESt4hashIiENS_18_Mod_range_hashingENS_20_Default_ranged_hashELb0EE15_M_bucket_indexEPKNS_10_Hash_nodeIiLb0EEEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, %arg1: i64, %arg2: !llvm.ptr<i8>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<i8>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%4, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg1, %3) : (i64, !llvm.ptr<i64>) -> ()
    "llvm.store"(%arg2, %1) : (!llvm.ptr<i8>, !llvm.ptr<ptr<i8>>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>
    %9 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%9) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %14 = "func.call"(%arg0) {callee = @_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE8max_sizeEv} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> i64
            %15 = "arith.cmpi"(%13, %14) {predicate = 4 : i64} : (i64, i64) -> i1
            %16 = "arith.extui"(%15) : (i1) -> i8
            %17 = "arith.constant"() {value = 0 : i8} : () -> i8
            %18 = "arith.cmpi"(%16, %17) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%18) ({
              "func.call"() {callee = @_ZSt17__throw_bad_allocv} : () -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %10 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%10) ({
      "scf.execute_region"() ({
        %12 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%12) ({
          "scf.execute_region"() ({
            %13 = "llvm.load"(%3) : (!llvm.ptr<i64>) -> i64
            %14 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>} : () -> index
            %15 = "arith.index_cast"(%14) : (index) -> i64
            %16 = "arith.muli"(%13, %15) : (i64, i64) -> i64
            %17 = "func.call"(%16) {callee = @_Znwm} : (i64) -> !llvm.ptr<i8>
            %18 = "llvm.bitcast"(%17) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
            "memref.store"(%18, %8) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> ()
            %19 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%19, %6) : (i1, memref<i1>) -> ()
            "memref.store"(%19, %7) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %11 = "memref.load"(%8) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>
    "func.return"(%11) : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, i64, !llvm.ptr<i8>) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE8allocateEmPKv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = 0 : i32} : () -> i32
    %1 = "arith.constant"() {value = 0 : i32} : () -> i32
    %2 = "llvm.getelementptr"(%arg0, %0) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>
    "func.call"(%2) {callee = @_ZNSt8__detail15_Hash_node_baseC1Ev} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>) -> ()
    %3 = "arith.constant"() {value = 0 : i32} : () -> i32
    %4 = "arith.constant"() {value = 1 : i32} : () -> i32
    %5 = "llvm.getelementptr"(%arg0, %3) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>
    %6 = "arith.constant"() {value = true} : () -> i1
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %8 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%6, %8) : (i1, memref<i1>) -> ()
    "memref.store"(%6, %7) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hash_node_value_baseIiEC1Ev"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    %1 = "arith.constant"() {value = 1 : i64} : () -> i64
    %2 = "llvm.alloca"(%1) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg1, %2) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%6) ({
      "scf.execute_region"() ({
        %7 = "polygeist.typeSize"() {source = i32} : () -> index
        %8 = "arith.muli"(%7, %0) : (index, index) -> index
        %9 = "llvm.load"(%2) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
        %10 = "llvm.bitcast"(%9) : (!llvm.ptr<i32>) -> !llvm.ptr<i8>
        %11 = "llvm.bitcast"(%10) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
        %12 = "llvm.load"(%arg2) : (!llvm.ptr<i32>) -> i32
        "llvm.store"(%12, %11) : (i32, !llvm.ptr<i32>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE9constructIiJiEEEvPT_DpOT0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%3) ({
      "scf.execute_region"() ({
        %4 = "arith.constant"() {value = 0 : i32} : () -> i32
        %5 = "arith.constant"() {value = 0 : i32} : () -> i32
        %6 = "llvm.getelementptr"(%arg0, %4) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
        %7 = "llvm.load"(%6) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %8 = "arith.constant"() {value = 0 : i32} : () -> i32
        %9 = "arith.constant"() {value = 1 : i32} : () -> i32
        %10 = "llvm.getelementptr"(%arg0, %8) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<i64>
        %11 = "llvm.load"(%10) : (!llvm.ptr<i64>) -> i64
        "func.call"(%arg0, %7, %11) {callee = @_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_deallocate_bucketsEPPNS1_15_Hash_node_baseEm} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_deallocate_bucketsEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail9_IdentityC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::hash", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::hash", (i8)>>):
    %0 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>) -> !llvm.ptr<struct<"struct.std::__hash_base", (i8)>>
    %1 = "llvm.bitcast"(%arg1) : (!llvm.ptr<struct<"struct.std::hash", (i8)>>) -> !llvm.ptr<struct<"struct.std::__hash_base", (i8)>>
    "func.call"(%0, %1) {callee = @_ZNSt11__hash_baseImiEC1ERKS0_} : (!llvm.ptr<struct<"struct.std::__hash_base", (i8)>>, !llvm.ptr<struct<"struct.std::__hash_base", (i8)>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::hash", (i8)>>, !llvm.ptr<struct<"struct.std::hash", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt4hashIiEC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Mod_range_hashing", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail18_Mod_range_hashingC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::binary_function", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::binary_function", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::binary_function", (i8)>>, !llvm.ptr<struct<"struct.std::binary_function", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt15binary_functionIiibEC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, %arg1: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEEC1ERKS4_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%4, %3) : (i64, memref<i64>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "arith.constant"() {value = 9223372036854775807 : i64} : () -> i64
            %9 = "polygeist.typeSize"() {source = !llvm.ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>} : () -> index
            %10 = "arith.index_cast"(%9) : (index) -> i64
            %11 = "arith.divui"(%8, %10) : (i64, i64) -> i64
            "memref.store"(%11, %3) : (i64, memref<i64>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i64>) -> i64
    "func.return"(%6) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNK9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE8max_sizeEv"} : () -> ()
  "func.func"() ({
  }) {function_type = () -> (), llvm.linkage = #llvm.linkage<external>, sym_name = "_ZSt17__throw_bad_allocv", sym_visibility = "private"} : () -> ()
  "func.func"() ({
  }) {function_type = (i64) -> !llvm.ptr<i8>, llvm.linkage = #llvm.linkage<external>, sym_name = "_Znwm", sym_visibility = "private"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    %5 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %6 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>
        %7 = "llvm.load"(%1) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
        "func.call"(%6, %7, %arg2) {callee = @_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE9constructIiJRKiEEEvPT_DpOT0_} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt16allocator_traitsISaINSt8__detail10_Hash_nodeIiLb0EEEEE9constructIiJRKiEEEvRS3_PT_DpOT0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i8>
    %4 = "llvm.mlir.undef"() : () -> i8
    "memref.store"(%4, %3) : (i8, memref<i8>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "llvm.load"(%arg1) : (!llvm.ptr<i32>) -> i32
            %9 = "llvm.load"(%arg2) : (!llvm.ptr<i32>) -> i32
            %10 = "arith.cmpi"(%8, %9) {predicate = 0 : i64} : (i32, i32) -> i1
            %11 = "arith.extui"(%10) : (i1) -> i8
            "memref.store"(%11, %3) : (i8, memref<i8>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i8>) -> i8
    "func.return"(%6) : (i8) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> i8, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8equal_toIiEclERKiS2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::equal_to", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, !llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>, memref<!llvm.ptr<struct<"struct.std::equal_to", (i8)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::equal_to", (i8)>>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::equal_to", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper.2", (i8)>>) -> !llvm.ptr<struct<"struct.std::equal_to", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ESt8equal_toIiELb1EE7_S_cgetERKS3_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %8 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            %9 = "llvm.icmp"(%7, %8) {predicate = 1 : i64} : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> i1
            %10 = "arith.select"(%9, %7, %8) : (i1, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
            "memref.store"(%10, %3) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>
    "func.return"(%5) : (!llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_ebo_helper", (i8)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Identity", (i8)>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail21_Hashtable_ebo_helperILi0ENS_9_IdentityELb1EE7_S_cgetERKS2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZNKSt8__detail21_Hash_node_value_baseIiE9_M_valptrEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>
            "memref.store"(%7, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %8 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%8, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%8, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail21_Hash_node_value_baseIiE4_M_vEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i64>
    %4 = "llvm.mlir.undef"() : () -> i64
    "memref.store"(%4, %3) : (i64, memref<i64>) -> ()
    %5 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%5) ({
      "scf.execute_region"() ({
        %7 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%7) ({
          "scf.execute_region"() ({
            %8 = "arith.constant"() {value = 9223372036854775807 : i64} : () -> i64
            %9 = "polygeist.typeSize"() {source = !llvm.struct<"struct.std::__detail::_Hash_node", (struct<"struct.std::__detail::_Hash_node_value_base.base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>)>, array<4 x i8>)>} : () -> index
            %10 = "arith.index_cast"(%9) : (index) -> i64
            %11 = "arith.divui"(%8, %10) : (i64, i64) -> i64
            "memref.store"(%11, %3) : (i64, memref<i64>) -> ()
            %12 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%12, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%12, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %6 = "memref.load"(%3) : (memref<i64>) -> i64
    "func.return"(%6) : (i64) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>) -> i64, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNK9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE8max_sizeEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%arg1, %4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %10 = "memref.load"(%6) : (memref<i1>) -> i1
        "scf.if"(%10) ({
          "scf.execute_region"() ({
            %11 = "llvm.load"(%4) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %12 = "func.call"(%arg0, %11) {callee = @_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_uses_single_bucketEPPNS1_15_Hash_node_baseE} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> i8
            %13 = "arith.constant"() {value = 0 : i8} : () -> i8
            %14 = "arith.cmpi"(%12, %13) {predicate = 1 : i64} : (i8, i8) -> i1
            "scf.if"(%14) ({
              %15 = "memref.load"(%6) : (memref<i1>) -> i1
              "scf.if"(%15) ({
                "scf.execute_region"() ({
                  %16 = "arith.constant"() {value = false} : () -> i1
                  "memref.store"(%16, %6) : (i1, memref<i1>) -> ()
                  "memref.store"(%16, %7) : (i1, memref<i1>) -> ()
                  "scf.yield"() : () -> ()
                }) : () -> ()
                "scf.yield"() : () -> ()
              }, {
              }) : (i1) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %9 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%9) ({
      "scf.execute_region"() ({
        %10 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>) -> !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>
        %11 = "llvm.load"(%4) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %12 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
        "func.call"(%10, %11, %12) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_deallocate_bucketsEPPNS1_15_Hash_node_baseEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__hash_base", (i8)>>, %arg1: !llvm.ptr<struct<"struct.std::__hash_base", (i8)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__hash_base", (i8)>>, !llvm.ptr<struct<"struct.std::__hash_base", (i8)>>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt11__hash_baseImiEC1ERKS0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, %arg1: !llvm.ptr<i32>, %arg2: !llvm.ptr<i32>):
    %0 = "arith.constant"() {value = 1 : index} : () -> index
    %1 = "arith.constant"() {value = 1 : i64} : () -> i64
    %2 = "llvm.alloca"(%1) : (i64) -> !llvm.ptr<ptr<i32>>
    "llvm.store"(%arg1, %2) : (!llvm.ptr<i32>, !llvm.ptr<ptr<i32>>) -> ()
    %3 = "arith.constant"() {value = true} : () -> i1
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%3, %5) : (i1, memref<i1>) -> ()
    "memref.store"(%3, %4) : (i1, memref<i1>) -> ()
    %6 = "memref.load"(%4) : (memref<i1>) -> i1
    "scf.if"(%6) ({
      "scf.execute_region"() ({
        %7 = "polygeist.typeSize"() {source = i32} : () -> index
        %8 = "arith.muli"(%7, %0) : (index, index) -> index
        %9 = "llvm.load"(%2) : (!llvm.ptr<ptr<i32>>) -> !llvm.ptr<i32>
        %10 = "llvm.bitcast"(%9) : (!llvm.ptr<i32>) -> !llvm.ptr<i8>
        %11 = "llvm.bitcast"(%10) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
        %12 = "llvm.load"(%arg2) : (!llvm.ptr<i32>) -> i32
        "llvm.store"(%12, %11) : (i32, !llvm.ptr<i32>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator", (i8)>>, !llvm.ptr<i32>, !llvm.ptr<i32>) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIiLb0EEEE9constructIiJRKiEEEvPT_DpOT0_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 1 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 1>} : (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>, i32) -> !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>
            %10 = "func.call"(%9) {callee = @_ZNK9__gnu_cxx16__aligned_bufferIiE6_M_ptrEv} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i32>
            "memref.store"(%10, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hash_node_value_base", packed (struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>, array<4 x i8>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt8__detail21_Hash_node_value_baseIiE9_M_valptrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, %arg1: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%arg1, %1) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    %2 = "arith.constant"() {value = true} : () -> i1
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %4 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%2, %4) : (i1, memref<i1>) -> ()
    "memref.store"(%2, %3) : (i1, memref<i1>) -> ()
    %5 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i8>
    %6 = "llvm.mlir.undef"() : () -> i8
    "memref.store"(%6, %5) : (i8, memref<i8>) -> ()
    %7 = "memref.load"(%3) : (memref<i1>) -> i1
    "scf.if"(%7) ({
      "scf.execute_region"() ({
        %9 = "memref.load"(%3) : (memref<i1>) -> i1
        "scf.if"(%9) ({
          "scf.execute_region"() ({
            %10 = "llvm.load"(%1) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %11 = "arith.constant"() {value = 0 : i32} : () -> i32
            %12 = "arith.constant"() {value = 5 : i32} : () -> i32
            %13 = "llvm.getelementptr"(%arg0, %11) {rawConstantIndices = array<i32: -2147483648, 5>} : (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, i32) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %14 = "llvm.icmp"(%10, %13) {predicate = 0 : i64} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> i1
            %15 = "arith.extui"(%14) : (i1) -> i8
            %16 = "arith.extui"(%15) : (i8) -> i64
            %17 = "arith.constant"() {value = 0 : i64} : () -> i64
            %18 = "arith.cmpi"(%16, %17) {predicate = 1 : i64} : (i64, i64) -> i1
            %19 = "arith.extui"(%18) : (i1) -> i8
            "memref.store"(%19, %5) : (i8, memref<i8>) -> ()
            %20 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%20, %3) : (i1, memref<i1>) -> ()
            "memref.store"(%20, %4) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %8 = "memref.load"(%5) : (memref<i8>) -> i8
    "func.return"(%8) : (i8) -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::_Hashtable", (ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64, struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>, i64, struct<"struct.std::__detail::_Prime_rehash_policy", (f32, array<4 x i8>, i64)>, ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> i8, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNKSt10_HashtableIiiSaIiENSt8__detail9_IdentityESt8equal_toIiESt4hashIiENS1_18_Mod_range_hashingENS1_20_Default_ranged_hashENS1_20_Prime_rehash_policyENS1_17_Hashtable_traitsILb0ELb1ELb1EEEE21_M_uses_single_bucketEPPNS1_15_Hash_node_baseE"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, %arg1: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<struct<"class.std::allocator.34", (i8)>>
    %2 = "arith.constant"() {value = 1 : i64} : () -> i64
    %3 = "llvm.alloca"(%2) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %4 = "arith.constant"() {value = 1 : i64} : () -> i64
    %5 = "llvm.alloca"(%4) : (i64) -> !llvm.ptr<i64>
    %6 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%6, %5) : (i64, !llvm.ptr<i64>) -> ()
    %7 = "arith.constant"() {value = 1 : i64} : () -> i64
    %8 = "llvm.alloca"(%7) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%arg1, %8) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    "llvm.store"(%arg2, %5) : (i64, !llvm.ptr<i64>) -> ()
    %9 = "arith.constant"() {value = true} : () -> i1
    %10 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %11 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%9, %11) : (i1, memref<i1>) -> ()
    "memref.store"(%9, %10) : (i1, memref<i1>) -> ()
    %12 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%12) ({
      "scf.execute_region"() ({
        %16 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%16) ({
          "scf.execute_region"() ({
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %13 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%13) ({
      "scf.execute_region"() ({
        %16 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%16) ({
          "scf.execute_region"() ({
            %17 = "llvm.load"(%8) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            %18 = "func.call"(%17) {callee = @_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_} : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
            "llvm.store"(%18, %3) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %14 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%14) ({
      "scf.execute_region"() ({
        %16 = "memref.load"(%10) : (memref<i1>) -> i1
        "scf.if"(%16) ({
          "scf.execute_region"() ({
            %17 = "func.call"(%arg0) {callee = @_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE17_M_node_allocatorEv} : (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>) -> !llvm.ptr<struct<"class.std::allocator", (i8)>>
            "func.call"(%1, %17) {callee = @_ZNSaIPNSt8__detail15_Hash_node_baseEEC1INS_10_Hash_nodeIiLb0EEEEERKSaIT_E} : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, !llvm.ptr<struct<"class.std::allocator", (i8)>>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %15 = "memref.load"(%10) : (memref<i1>) -> i1
    "scf.if"(%15) ({
      "scf.execute_region"() ({
        %16 = "llvm.load"(%3) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %17 = "llvm.load"(%5) : (!llvm.ptr<i64>) -> i64
        "func.call"(%1, %16, %17) {callee = @_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m} : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.std::__detail::_Hashtable_alloc", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt8__detail16_Hashtable_allocISaINS_10_Hash_nodeIiLb0EEEEE21_M_deallocate_bucketsEPPNS_15_Hash_node_baseEm"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i32>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "func.call"(%arg0) {callee = @_ZNK9__gnu_cxx16__aligned_bufferIiE7_M_addrEv} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i8>
            %8 = "llvm.bitcast"(%7) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
            "memref.store"(%8, %3) : (!llvm.ptr<i32>, memref<!llvm.ptr<i32>>) -> ()
            %9 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%9, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%9, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i32>>) -> !llvm.ptr<i32>
    "func.return"(%5) : (!llvm.ptr<i32>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i32>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNK9__gnu_cxx16__aligned_bufferIiE6_M_ptrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            "memref.store"(%arg0, %3) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
            %7 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%7, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%7, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
    "func.return"(%5) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> ()
  }) {function_type = (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt14pointer_traitsIPPNSt8__detail15_Hash_node_baseEE10pointer_toERS2_"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.std::allocator.34", (i8)>>, %arg1: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%arg1, %4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %9 = "llvm.bitcast"(%arg0) : (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>) -> !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>
        %10 = "llvm.load"(%4) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %11 = "llvm.load"(%1) : (!llvm.ptr<i64>) -> i64
        "func.call"(%9, %10, %11) {callee = @_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m} : (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.std::allocator.34", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNSt16allocator_traitsISaIPNSt8__detail15_Hash_node_baseEEE10deallocateERS3_PS2_m"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>):
    %0 = "arith.constant"() {value = true} : () -> i1
    %1 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %2 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%0, %2) : (i1, memref<i1>) -> ()
    "memref.store"(%0, %1) : (i1, memref<i1>) -> ()
    %3 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<!llvm.ptr<i8>>
    %4 = "memref.load"(%1) : (memref<i1>) -> i1
    "scf.if"(%4) ({
      "scf.execute_region"() ({
        %6 = "memref.load"(%1) : (memref<i1>) -> i1
        "scf.if"(%6) ({
          "scf.execute_region"() ({
            %7 = "arith.constant"() {value = 0 : i32} : () -> i32
            %8 = "arith.constant"() {value = 0 : i32} : () -> i32
            %9 = "llvm.getelementptr"(%arg0, %7) {rawConstantIndices = array<i32: -2147483648, 0>} : (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>, i32) -> !llvm.ptr<struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>>
            %10 = "llvm.bitcast"(%9) : (!llvm.ptr<struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>>) -> !llvm.ptr<i8>
            "memref.store"(%10, %3) : (!llvm.ptr<i8>, memref<!llvm.ptr<i8>>) -> ()
            %11 = "arith.constant"() {value = false} : () -> i1
            "memref.store"(%11, %1) : (i1, memref<i1>) -> ()
            "memref.store"(%11, %2) : (i1, memref<i1>) -> ()
            "scf.yield"() : () -> ()
          }) : () -> ()
          "scf.yield"() : () -> ()
        }, {
        }) : (i1) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    %5 = "memref.load"(%3) : (memref<!llvm.ptr<i8>>) -> !llvm.ptr<i8>
    "func.return"(%5) : (!llvm.ptr<i8>) -> ()
  }) {function_type = (!llvm.ptr<struct<"struct.__gnu_cxx::__aligned_buffer", (struct<"union.std::aligned_storage<4, 4>::type", (array<4 x i8>)>)>>) -> !llvm.ptr<i8>, llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZNK9__gnu_cxx16__aligned_bufferIiE7_M_addrEv"} : () -> ()
  "func.func"() ({
  ^bb0(%arg0: !llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>, %arg1: !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, %arg2: i64):
    %0 = "arith.constant"() {value = 1 : i64} : () -> i64
    %1 = "llvm.alloca"(%0) : (i64) -> !llvm.ptr<i64>
    %2 = "llvm.mlir.undef"() : () -> i64
    "llvm.store"(%2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %3 = "arith.constant"() {value = 1 : i64} : () -> i64
    %4 = "llvm.alloca"(%3) : (i64) -> !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>
    "llvm.store"(%arg1, %4) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, !llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> ()
    "llvm.store"(%arg2, %1) : (i64, !llvm.ptr<i64>) -> ()
    %5 = "arith.constant"() {value = true} : () -> i1
    %6 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    %7 = "memref.alloca"() {operand_segment_sizes = array<i32: 0, 0>} : () -> memref<i1>
    "memref.store"(%5, %7) : (i1, memref<i1>) -> ()
    "memref.store"(%5, %6) : (i1, memref<i1>) -> ()
    %8 = "memref.load"(%6) : (memref<i1>) -> i1
    "scf.if"(%8) ({
      "scf.execute_region"() ({
        %9 = "llvm.load"(%4) : (!llvm.ptr<ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>>) -> !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>
        %10 = "llvm.bitcast"(%9) : (!llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>) -> !llvm.ptr<i8>
        "func.call"(%10) {callee = @_ZdlPv} : (!llvm.ptr<i8>) -> ()
        "scf.yield"() : () -> ()
      }) : () -> ()
      "scf.yield"() : () -> ()
    }, {
    }) : (i1) -> ()
    "func.return"() : () -> ()
  }) {function_type = (!llvm.ptr<struct<"class.__gnu_cxx::new_allocator.35", (i8)>>, !llvm.ptr<ptr<struct<"struct.std::__detail::_Hash_node_base", (ptr<struct<"struct.std::__detail::_Hash_node_base">>)>>>, i64) -> (), llvm.linkage = #llvm.linkage<linkonce_odr>, sym_name = "_ZN9__gnu_cxx13new_allocatorIPNSt8__detail15_Hash_node_baseEE10deallocateEPS3_m"} : () -> ()
  "func.func"() ({
  }) {function_type = (!llvm.ptr<i8>) -> (), llvm.linkage = #llvm.linkage<external>, sym_name = "_ZdlPv", sym_visibility = "private"} : () -> ()
}) {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<i64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f80, dense<128> : vector<2xi32>>, #dlti.dl_entry<i1, dense<8> : vector<2xi32>>, #dlti.dl_entry<i8, dense<8> : vector<2xi32>>, #dlti.dl_entry<i16, dense<16> : vector<2xi32>>, #dlti.dl_entry<i32, dense<32> : vector<2xi32>>, #dlti.dl_entry<f16, dense<16> : vector<2xi32>>, #dlti.dl_entry<f64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f128, dense<128> : vector<2xi32>>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu", "polygeist.target-cpu" = "x86-64", "polygeist.target-features" = "+cx8,+fxsr,+mmx,+sse,+sse2,+x87", "polygeist.tune-cpu" = "generic"} : () -> ()
</immediate: mlir>
