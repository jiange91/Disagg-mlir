clang version 16.0.0 (https://github.com/llvm/llvm-project.git cbc378ecb87e3f31dd5aff91f2a621d500640412)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /users/Zijian/Disagg-mlir/build/bin
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/9
Candidate multilib: .;@m64
Selected multilib: .;@m64
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
ignoring duplicate directory "/users/Zijian/Disagg-mlir/build/lib/clang/16.0.0/include"
ignoring duplicate directory "/usr/local/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9
 /usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/x86_64-linux-gnu/c++/9
 /usr/lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/backward
 /users/Zijian/Disagg-mlir/build/lib/clang/16.0.0/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
Emitting fn: main
main
CompoundStmt 0x7e8a708
|-DeclStmt 0x7e88688
| `-VarDecl 0x7e88470  used n 'int' cinit
|   `-CallExpr 0x7e88630 'int'
|     |-ImplicitCastExpr 0x7e88618 'int (*)(const char *) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x7e88598 'int (const char *) throw()' lvalue Function 0x7e1d6d0 'atoi' 'int (const char *) throw()' (UsingShadow 0x7e861b0 'atoi')
|     `-ImplicitCastExpr 0x7e88670 'const char *' <NoOp>
|       `-ImplicitCastExpr 0x7e88658 'char *' <LValueToRValue>
|         `-ArraySubscriptExpr 0x7e88578 'char *' lvalue
|           |-ImplicitCastExpr 0x7e88560 'char **' <LValueToRValue>
|           | `-DeclRefExpr 0x7e88520 'char **' lvalue ParmVar 0x7e882c0 'argv' 'char **'
|           `-IntegerLiteral 0x7e88540 'int' 1
|-DeclStmt 0x7e887b8
| `-VarDecl 0x7e886b8  used a 'int *' cinit
|   `-CXXNewExpr 0x7e88778 'int *' Function 0x7aa9f28 'operator new' 'void *(std::size_t)'
|     `-IntegerLiteral 0x7e88720 'int' 2
|-CallExpr 0x7e888c0 'int'
| |-ImplicitCastExpr 0x7e888a8 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x7e88888 'int (const char *__restrict, ...)' lvalue Function 0x7df9058 'printf' 'int (const char *__restrict, ...)'
| |-ImplicitCastExpr 0x7e888f0 'const char *' <ArrayToPointerDecay>
| | `-StringLiteral 0x7e88818 'const char[8]' lvalue "a = %d\n"
| `-ImplicitCastExpr 0x7e88908 'int' <LValueToRValue>
|   `-UnaryOperator 0x7e88870 'int' lvalue prefix '*' cannot overflow
|     `-ImplicitCastExpr 0x7e88858 'int *' <LValueToRValue>
|       `-DeclRefExpr 0x7e88838 'int *' lvalue Var 0x7e886b8 'a' 'int *'
|-DeclStmt 0x7e88bf0
| `-VarDecl 0x7e88938  used as 'int *' cinit
|   `-CXXNewExpr 0x7e88ba8 'int *' array Function 0x7aaa1a0 'operator new[]' 'void *(std::size_t)'
|     |-ImplicitCastExpr 0x7e88aa8 'unsigned long' <IntegralCast>
|     | `-ImplicitCastExpr 0x7e88a90 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x7e889a0 'int' lvalue Var 0x7e88470 'n' 'int'
|     `-InitListExpr 0x7e88ae8 'int[3]'
|       |-array_filler: ImplicitValueInitExpr 0x7e88b98 'int'
|       |-IntegerLiteral 0x7e889c0 'int' 1
|       |-IntegerLiteral 0x7e889e0 'int' 2
|       `-IntegerLiteral 0x7e88a00 'int' 3
|-ForStmt 0x7e88f98
| |-DeclStmt 0x7e88ca8
| | `-VarDecl 0x7e88c20  used i 'int' cinit
| |   `-IntegerLiteral 0x7e88c88 'int' 0
| |-<<<NULL>>>
| |-BinaryOperator 0x7e88d18 '_Bool' '<'
| | |-ImplicitCastExpr 0x7e88d00 'int' <LValueToRValue>
| | | `-DeclRefExpr 0x7e88cc0 'int' lvalue Var 0x7e88c20 'i' 'int'
| | `-IntegerLiteral 0x7e88ce0 'int' 5
| |-UnaryOperator 0x7e88d58 'int' lvalue prefix '++'
| | `-DeclRefExpr 0x7e88d38 'int' lvalue Var 0x7e88c20 'i' 'int'
| `-CompoundStmt 0x7e88f80
|   `-CallExpr 0x7e88f20 'int'
|     |-ImplicitCastExpr 0x7e88f08 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x7e88ee8 'int (const char *__restrict, ...)' lvalue Function 0x7df9058 'printf' 'int (const char *__restrict, ...)'
|     |-ImplicitCastExpr 0x7e88f50 'const char *' <ArrayToPointerDecay>
|     | `-StringLiteral 0x7e88e38 'const char[9]' lvalue "as = %d\n"
|     `-ImplicitCastExpr 0x7e88f68 'int' <LValueToRValue>
|       `-ArraySubscriptExpr 0x7e88ec8 'int' lvalue
|         |-ImplicitCastExpr 0x7e88e98 'int *' <LValueToRValue>
|         | `-DeclRefExpr 0x7e88e58 'int *' lvalue Var 0x7e88938 'as' 'int *'
|         `-ImplicitCastExpr 0x7e88eb0 'int' <LValueToRValue>
|           `-DeclRefExpr 0x7e88e78 'int' lvalue Var 0x7e88c20 'i' 'int'
|-DeclStmt 0x7e89128
| `-VarDecl 0x7e88fe8  used tt 'int' cinit
|   `-InitListExpr 0x7e890c8 'int'
|     `-ImplicitCastExpr 0x7e89108 'int' <LValueToRValue>
|       `-DeclRefExpr 0x7e89050 'int' lvalue Var 0x7e88470 'n' 'int'
|-CallExpr 0x7e89200 'int'
| |-ImplicitCastExpr 0x7e891e8 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x7e891c8 'int (const char *__restrict, ...)' lvalue Function 0x7df9058 'printf' 'int (const char *__restrict, ...)'
| |-ImplicitCastExpr 0x7e89230 'const char *' <ArrayToPointerDecay>
| | `-StringLiteral 0x7e89188 'const char[9]' lvalue "tt = %d\n"
| `-ImplicitCastExpr 0x7e89248 'int' <LValueToRValue>
|   `-DeclRefExpr 0x7e891a8 'int' lvalue Var 0x7e88fe8 'tt' 'int'
|-DeclStmt 0x7e89538
| `-VarDecl 0x7e89350  used a2d 'int[2][2]' cinit
|   `-InitListExpr 0x7e89490 'int[2][2]'
|     |-array_filler: ImplicitValueInitExpr 0x7e89528 'int[2]'
|     `-InitListExpr 0x7e894d0 'int[2]'
|       |-IntegerLiteral 0x7e893b8 'int' 1
|       `-IntegerLiteral 0x7e893d8 'int' 2
|-ForStmt 0x7e89ab8
| |-DeclStmt 0x7e895f0
| | `-VarDecl 0x7e89568  used i 'int' cinit
| |   `-IntegerLiteral 0x7e895d0 'int' 0
| |-<<<NULL>>>
| |-BinaryOperator 0x7e89660 '_Bool' '<'
| | |-ImplicitCastExpr 0x7e89648 'int' <LValueToRValue>
| | | `-DeclRefExpr 0x7e89608 'int' lvalue Var 0x7e89568 'i' 'int'
| | `-IntegerLiteral 0x7e89628 'int' 2
| |-UnaryOperator 0x7e896a0 'int' lvalue prefix '++'
| | `-DeclRefExpr 0x7e89680 'int' lvalue Var 0x7e89568 'i' 'int'
| `-CompoundStmt 0x7e89aa0
|   `-ForStmt 0x7e89a68
|     |-DeclStmt 0x7e89758
|     | `-VarDecl 0x7e896d0  used j 'int' cinit
|     |   `-IntegerLiteral 0x7e89738 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x7e897c8 '_Bool' '<'
|     | |-ImplicitCastExpr 0x7e897b0 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x7e89770 'int' lvalue Var 0x7e896d0 'j' 'int'
|     | `-IntegerLiteral 0x7e89790 'int' 2
|     |-UnaryOperator 0x7e89808 'int' lvalue prefix '++'
|     | `-DeclRefExpr 0x7e897e8 'int' lvalue Var 0x7e896d0 'j' 'int'
|     `-CompoundStmt 0x7e89a50
|       `-CallExpr 0x7e899f0 'int'
|         |-ImplicitCastExpr 0x7e899d8 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x7e899b8 'int (const char *__restrict, ...)' lvalue Function 0x7df9058 'printf' 'int (const char *__restrict, ...)'
|         |-ImplicitCastExpr 0x7e89a20 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x7e89868 'const char[10]' lvalue "a2d = %d\n"
|         `-ImplicitCastExpr 0x7e89a38 'int' <LValueToRValue>
|           `-ArraySubscriptExpr 0x7e89998 'int' lvalue
|             |-ImplicitCastExpr 0x7e89968 'int *' <ArrayToPointerDecay>
|             | `-ArraySubscriptExpr 0x7e89928 'int[2]' lvalue
|             |   |-ImplicitCastExpr 0x7e898f8 'int (*)[2]' <ArrayToPointerDecay>
|             |   | `-DeclRefExpr 0x7e89890 'int[2][2]' lvalue Var 0x7e89350 'a2d' 'int[2][2]'
|             |   `-ImplicitCastExpr 0x7e89910 'int' <LValueToRValue>
|             |     `-DeclRefExpr 0x7e898b0 'int' lvalue Var 0x7e89568 'i' 'int'
|             `-ImplicitCastExpr 0x7e89980 'int' <LValueToRValue>
|               `-DeclRefExpr 0x7e89948 'int' lvalue Var 0x7e896d0 'j' 'int'
|-DeclStmt 0x7e8a558
| `-VarDecl 0x7e89b60  used aa 'A *' cinit
|   `-CXXNewExpr 0x7e8a518 'A *' Function 0x7aa9f28 'operator new' 'void *(std::size_t)'
|     `-CXXConstructExpr 0x7e8a4e8 'A':'struct A' 'void (int)'
|       `-IntegerLiteral 0x7e89bc8 'int' 2
|-CallExpr 0x7e8a678 'int'
| |-ImplicitCastExpr 0x7e8a660 'int (*)(const char *__restrict, ...)' <FunctionToPointerDecay>
| | `-DeclRefExpr 0x7e8a640 'int (const char *__restrict, ...)' lvalue Function 0x7df9058 'printf' 'int (const char *__restrict, ...)'
| |-ImplicitCastExpr 0x7e8a6a8 'const char *' <ArrayToPointerDecay>
| | `-StringLiteral 0x7e8a5b8 'const char[9]' lvalue "aa = %d\n"
| `-ImplicitCastExpr 0x7e8a6c0 'int' <LValueToRValue>
|   `-MemberExpr 0x7e8a610 'int' lvalue ->a 0x7e87b90
|     `-ImplicitCastExpr 0x7e8a5f8 'A *' <LValueToRValue>
|       `-DeclRefExpr 0x7e8a5d8 'A *' lvalue Var 0x7e89b60 'aa' 'A *'
`-ReturnStmt 0x7e8a6f8
  `-IntegerLiteral 0x7e8a6d8 'int' 0
ConstantArrayType 0x7e892e0 'int[2][2]' 2 
`-ConstantArrayType 0x7de0b20 'int[2]' 2 
  `-BuiltinType 0x788e290 'int'
ConstantArrayType 0x7de0b20 'int[2]' 2 
`-BuiltinType 0x788e290 'int'
Emitting fn: _ZN1AC1Ei
A
 init: - baseInit:0 memberInit:1 anyMember:1 indirectMember:0 isinClass:0 delegating:0 isPack:0
FieldDecl 0x7e87b90 <testcpp.cc:16:3, col:7> col:7 referenced a 'int'
ImplicitCastExpr 0x7e87f20 'int' <LValueToRValue>
`-DeclRefExpr 0x7e87ee0 'int' lvalue ParmVar 0x7e87d38 'a' 'int'
CompoundStmt 0x7e87f60
